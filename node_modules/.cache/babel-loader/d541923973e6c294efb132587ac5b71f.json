{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/auth/Login.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport MButton from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport { userService } from \"../../services/user.service\";\nimport { LoginContext } from \"../../LoginContext\";\nimport { Divider, LinearProgress } from \"@material-ui/core\";\nexport const LoginDialogue = ({\n  open,\n  onClose,\n  onSwitchToSignup: onSwitchToLogin\n}) => {\n  const logins = useContext(LoginContext);\n  const [isUsernameValid, setUsernameValid] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [isPasswordValid, setPasswordValid] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const [isFirstTime, setFirstTime] = useState(true);\n\n  const checkUsername = () => {\n    const ok = username.length >= 2 && username.length <= 50 && !username.includes(\";\");\n    setUsernameValid(ok);\n    return ok;\n  };\n\n  const checkPassword = () => {\n    const ok = password.length >= 4;\n    setPasswordValid(ok);\n    return ok;\n  };\n\n  const submit = () => {\n    if (checkUsername() && checkPassword()) {\n      setLoading(true);\n      userService.login(username, password, logins.toggleSetUser, () => alert(\"login error\")).then(res => {\n        if (res) {\n          setLoading(false);\n          onClose();\n        } else {\n          setLoading(false);\n        }\n      });\n    }\n\n    setFirstTime(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"xs\",\n    PaperProps: {\n      style: {\n        backgroundColor: \"rgba(255, 255, 255, .70)\",\n        boxShadow: \"inset 0 0 1rem 0 rgba(0, 0, 0, .2)\",\n        borderRadius: \"5px\",\n        backdropFilter: \"blur(7px)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Username\",\n    onChange: event => setUsername(event.target.value),\n    error: !isUsernameValid && !isFirstTime,\n    helperText: isUsernameValid || isFirstTime ? \"\" : \"Username must contain 2 ~ 50 valid characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-password-input\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    onChange: event => setPassword(event.target.value),\n    error: !isPasswordValid && !isFirstTime,\n    helperText: isUsernameValid || isFirstTime ? \"\" : \"Password must contain more than 4 characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"right\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"green\",\n      color: \"white\"\n    },\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"SUBMIT\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 28\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      justifyItems: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Don't have an account?\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    onClick: onSwitchToLogin,\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Sign-up\")))));\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/auth/Login.tsx"],"names":["React","useContext","useState","Dialog","DialogTitle","DialogContent","TextField","MButton","DialogActions","Grid","userService","LoginContext","Divider","LinearProgress","LoginDialogue","open","onClose","onSwitchToSignup","onSwitchToLogin","logins","isUsernameValid","setUsernameValid","username","setUsername","isPasswordValid","setPasswordValid","password","setPassword","isLoading","setLoading","isFirstTime","setFirstTime","checkUsername","ok","length","includes","checkPassword","submit","login","toggleSetUser","alert","then","res","style","backgroundColor","boxShadow","borderRadius","backdropFilter","event","target","value","textAlign","marginTop","width","color","justifyItems","alignItems","height"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport MButton from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport { userService } from \"../../services/user.service\";\nimport { LoginContext } from \"../../LoginContext\";\nimport { Divider, LinearProgress } from \"@material-ui/core\";\n\ninterface LoginProps {\n  open: boolean;\n  onClose: () => void;\n  onSwitchToSignup: () => void;\n}\n\nexport const LoginDialogue = ({\n  open,\n  onClose,\n  onSwitchToSignup: onSwitchToLogin,\n}: LoginProps) => {\n  const logins = useContext(LoginContext);\n\n  const [isUsernameValid, setUsernameValid] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [isPasswordValid, setPasswordValid] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const [isFirstTime, setFirstTime] = useState(true);\n\n  const checkUsername = () => {\n    const ok =\n      username.length >= 2 && username.length <= 50 && !username.includes(\";\");\n    setUsernameValid(ok);\n    return ok;\n  };\n\n  const checkPassword = () => {\n    const ok = password.length >= 4;\n    setPasswordValid(ok);\n    return ok;\n  };\n\n  const submit = () => {\n    if (checkUsername() && checkPassword()) {\n      setLoading(true);\n      userService\n        .login(username, password, logins.toggleSetUser, () =>\n          alert(\"login error\")\n        )\n        .then((res) => {\n          if (res) {\n            setLoading(false);\n            onClose();\n          } else {\n            setLoading(false);\n          }\n        });\n    }\n    setFirstTime(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"xs\"\n      PaperProps={{\n        style: {\n          backgroundColor: \"rgba(255, 255, 255, .70)\",\n          boxShadow: \"inset 0 0 1rem 0 rgba(0, 0, 0, .2)\",\n          borderRadius: \"5px\",\n          backdropFilter: \"blur(7px)\",\n        },\n      }}\n    >\n      <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n      <DialogContent>\n        <div>\n          <TextField\n            required\n            id=\"standard-required\"\n            label=\"Username\"\n            onChange={(event) => setUsername(event.target.value)}\n            error={!isUsernameValid && !isFirstTime}\n            helperText={\n              isUsernameValid || isFirstTime\n                ? \"\"\n                : \"Username must contain 2 ~ 50 valid characters\"\n            }\n          />\n        </div>\n\n        <div>\n          <TextField\n            required\n            id=\"standard-password-input\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n            error={!isPasswordValid && !isFirstTime}\n            helperText={\n              isUsernameValid || isFirstTime\n                ? \"\"\n                : \"Password must contain more than 4 characters\"\n            }\n          />\n        </div>\n        <div style={{ textAlign: \"right\", marginTop: \"10px\" }}>\n          <MButton\n            style={{ width: \"100%\", backgroundColor: \"green\", color: \"white\" }}\n            onClick={submit}\n          >\n            SUBMIT\n          </MButton>\n        </div>\n        <div>{isLoading && <LinearProgress />}</div>\n      </DialogContent>\n      <Divider />\n      <DialogActions>\n        <Grid\n          container\n          style={{ justifyItems: \"center\", alignItems: \"center\" }}\n        >\n          <Grid item xs={9}>\n            <span>Don't have an account?</span>\n          </Grid>\n          <Grid item xs={3}>\n            <MButton onClick={onSwitchToLogin} style={{ height: \"100%\" }}>\n              Sign-up\n            </MButton>\n          </Grid>\n        </Grid>\n      </DialogActions>\n    </Dialog>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}