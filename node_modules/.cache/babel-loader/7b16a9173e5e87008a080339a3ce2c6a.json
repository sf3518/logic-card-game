{"ast":null,"code":"import _slicedToArray from\"/Users/johnny/IC/Computing/year2/DRP/drp48/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Table}from\"react-bootstrap\";import{PremiseComponent}from\"./Premise\";import SUCCESSFUL_ICON from\"../../src_img/card_UI/correct.jpg\";import UNSUCCESSFUL_ICON from\"../../src_img/card_UI/incorrect.jpg\";import{genTruthTableInStringForBTrees}from\"../../server/gameApp/logicResolver/plainResolver\";import{makeStyles,createStyles,Button as MButton,Popover,Typography,List,ListItem}from\"@material-ui/core\";var useStyles=makeStyles(function(theme){return createStyles({typography:{padding:theme.spacing(2)}});});export var GoalsComponent=function GoalsComponent(_ref){var goals=_ref.goals,isSuccessful=_ref.isSuccessful;var _useState=useState(goals.map(function(_){return false;})),_useState2=_slicedToArray(_useState,2),showTable=_useState2[0],setShowTable=_useState2[1];var classes=useStyles();var _React$useState=React.useState(goals.map(function(_){return null;})),_React$useState2=_slicedToArray(_React$useState,2),anchorEls=_React$useState2[0],setAnchorEl=_React$useState2[1];var handleClick=function handleClick(i){return function(event){var newAnchorEls=anchorEls.slice();newAnchorEls.splice(i,1,event.currentTarget);setAnchorEl(newAnchorEls);};};var handleClose=function handleClose(i){return function(){var newAnchorEls=anchorEls.slice();newAnchorEls.splice(i,1,null);setAnchorEl(newAnchorEls);};};var ids=anchorEls.map(function(a,i){return a?\"popover\"+i:undefined;});var setShowOneTable=function setShowOneTable(i,isShow){setShowTable(showTable.map(function(old,j){return i==j?isShow:old;}));};var renderSuccessful=function renderSuccessful(i){return/*#__PURE__*/React.createElement(\"div\",{style:{width:\"30px\",height:\"30px\",backgroundImage:\"url(\"+(isSuccessful[i]?SUCCESSFUL_ICON:UNSUCCESSFUL_ICON)+\")\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}});};var collectVars=function collectVars(i){var _goals$i$expr;var set=new Set();(_goals$i$expr=goals[i].expr)===null||_goals$i$expr===void 0?void 0:_goals$i$expr.filter(function(c){return[\"A\",\"B\",\"C\",\"D\"].includes(c);}).forEach(function(c){return set.add(c);});return Array.from(set);};var renderShowTableButton=function renderShowTableButton(i){if(goals[i].expr==undefined){return/*#__PURE__*/React.createElement(\"div\",null);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MButton,{\"aria-describedby\":ids[i],onClick:handleClick(i),color:\"primary\"},\"Hint\"),/*#__PURE__*/React.createElement(Popover,{id:ids[i],open:Boolean(ids[i]),anchorEl:anchorEls[i],onClose:handleClose(i),anchorOrigin:{vertical:\"center\",horizontal:\"right\"},transformOrigin:{vertical:\"center\",horizontal:\"left\"}},/*#__PURE__*/React.createElement(Typography,{className:classes.typography},renderTruthTable(i))));};var renderTruthTable=function renderTruthTable(i){var vars=collectVars(i);var truthTable=genTruthTableInStringForBTrees(vars,[goals[i].boolTree]);return/*#__PURE__*/React.createElement(Table,{onClick:function onClick(){return setShowOneTable(i,false);}},/*#__PURE__*/React.createElement(\"thead\",null,truthTable.headers.map(function(it){return/*#__PURE__*/React.createElement(\"td\",{style:{paddingTop:\"0.25rem\",paddingBottom:\"0.25rem\"}},it);})),truthTable.body.map(function(row){return/*#__PURE__*/React.createElement(\"tr\",null,row.map(function(it){return/*#__PURE__*/React.createElement(\"td\",{style:{paddingTop:\"1px\",paddingBottom:\"1px\"}},it);}));}));};var showGoalInCards=function showGoalInCards(goal){switch(goal.kind){case\"tautology\":case\"paradox\":return/*#__PURE__*/React.createElement(\"div\",null);}return/*#__PURE__*/React.createElement(PremiseComponent,{scale:0.5,premiseIndex:-1,isLocked:true,isProofPremise:false,cards:goal.expr});};var renderGoal=function renderGoal(i){return/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(\"td\",null,renderSuccessful(i)),/*#__PURE__*/React.createElement(\"td\",{style:{verticalAlign:\"center\"}},/*#__PURE__*/React.createElement(\"h4\",{style:{marginLeft:\"10px\",marginRight:\"10px\"}},showGoalKind(i+1,goals[i]))),/*#__PURE__*/React.createElement(\"td\",null,showGoalInCards(goals[i])),/*#__PURE__*/React.createElement(\"td\",{align:\"right\"},renderShowTableButton(i)));};var renderGoals=function renderGoals(){var result=[];for(var i=0;i<goals.length;i++){result.push(renderGoal(i));}return/*#__PURE__*/React.createElement(List,null,result);};return renderGoals();};function showGoalKind(index,goal){var showKind;switch(goal.kind){case\"prove\":showKind=\"To prove:\";break;case\"disprove\":showKind=\"To disprove:\";break;case\"unknown\":showKind=\"Make undecidable:\";break;case\"equivalent\":showKind=\"To be equivalent to:\";break;case\"tautology\":showKind=\"Make a tautology\";break;case\"paradox\":showKind=\"Make a paradox\";break;}return index+\". \"+showKind+\" \";}","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/game/Goals.tsx"],"names":["React","useState","Table","PremiseComponent","SUCCESSFUL_ICON","UNSUCCESSFUL_ICON","genTruthTableInStringForBTrees","makeStyles","createStyles","Button","MButton","Popover","Typography","List","ListItem","useStyles","theme","typography","padding","spacing","GoalsComponent","goals","isSuccessful","map","_","showTable","setShowTable","classes","anchorEls","setAnchorEl","handleClick","i","event","newAnchorEls","slice","splice","currentTarget","handleClose","ids","a","undefined","setShowOneTable","isShow","old","j","renderSuccessful","width","height","backgroundImage","backgroundSize","backgroundRepeat","collectVars","set","Set","expr","filter","c","includes","forEach","add","Array","from","renderShowTableButton","Boolean","vertical","horizontal","renderTruthTable","vars","truthTable","boolTree","headers","it","paddingTop","paddingBottom","body","row","showGoalInCards","goal","kind","renderGoal","verticalAlign","marginLeft","marginRight","showGoalKind","renderGoals","result","length","push","index","showKind"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAAeC,KAAf,KAAoC,iBAApC,CACA,OAASC,gBAAT,KAAiC,WAAjC,CAEA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qCAA9B,CACA,OAASC,8BAAT,KAA+C,kDAA/C,CACA,OACEC,UADF,CAGEC,YAHF,CAIEC,MAAM,GAAIC,CAAAA,OAJZ,CAKEC,OALF,CAMEC,UANF,CAOEC,IAPF,CAQEC,QARF,KASO,mBATP,CAWA,GAAMC,CAAAA,SAAS,CAAGR,UAAU,CAAC,SAACS,KAAD,QAC3BR,CAAAA,YAAY,CAAC,CACXS,UAAU,CAAE,CACVC,OAAO,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC,CADD,CAAD,CADe,EAAD,CAA5B,CAaA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAyC,IAAtCC,CAAAA,KAAsC,MAAtCA,KAAsC,CAA/BC,YAA+B,MAA/BA,YAA+B,eACnCrB,QAAQ,CAACoB,KAAK,CAACE,GAAN,CAAU,SAACC,CAAD,QAAO,MAAP,EAAV,CAAD,CAD2B,wCAC9DC,SAD8D,eACnDC,YADmD,eAGrE,GAAMC,CAAAA,OAAO,CAAGZ,SAAS,EAAzB,CAHqE,oBAIpCf,KAAK,CAACC,QAAN,CAC/BoB,KAAK,CAACE,GAAN,CAAU,SAACC,CAAD,QAAO,KAAP,EAAV,CAD+B,CAJoC,oDAI9DI,SAJ8D,qBAInDC,WAJmD,qBAOrE,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,QAAe,UACjCC,KADiC,CAE9B,CACH,GAAMC,CAAAA,YAAY,CAAGL,SAAS,CAACM,KAAV,EAArB,CACAD,YAAY,CAACE,MAAb,CAAoBJ,CAApB,CAAuB,CAAvB,CAA0BC,KAAK,CAACI,aAAhC,EACAP,WAAW,CAACI,YAAD,CAAX,CACD,CANmB,EAApB,CAOA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACN,CAAD,QAAe,WAAM,CACvC,GAAME,CAAAA,YAAY,CAAGL,SAAS,CAACM,KAAV,EAArB,CACAD,YAAY,CAACE,MAAb,CAAoBJ,CAApB,CAAuB,CAAvB,CAA0B,IAA1B,EACAF,WAAW,CAACI,YAAD,CAAX,CACD,CAJmB,EAApB,CAMA,GAAMK,CAAAA,GAAG,CAAGV,SAAS,CAACL,GAAV,CAAc,SAACgB,CAAD,CAAIR,CAAJ,QAAWQ,CAAAA,CAAC,CAAG,UAAYR,CAAf,CAAmBS,SAA/B,EAAd,CAAZ,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACV,CAAD,CAAYW,MAAZ,CAAgC,CACtDhB,YAAY,CAACD,SAAS,CAACF,GAAV,CAAc,SAACoB,GAAD,CAAMC,CAAN,QAAab,CAAAA,CAAC,EAAIa,CAAL,CAASF,MAAT,CAAkBC,GAA/B,EAAd,CAAD,CAAZ,CACD,CAFD,CAIA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACd,CAAD,CAAe,CACtC,mBACE,2BACE,KAAK,CAAE,CACLe,KAAK,CAAE,MADF,CAELC,MAAM,CAAE,MAFH,CAGLC,eAAe,CACb,QACC1B,YAAY,CAACS,CAAD,CAAZ,CAAkB3B,eAAlB,CAAoCC,iBADrC,EAEA,GANG,CAOL4C,cAAc,CAAE,OAPX,CAQLC,gBAAgB,CAAE,WARb,CADT,EADF,CAcD,CAfD,CAiBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACpB,CAAD,CAA6B,mBAC/C,GAAMqB,CAAAA,GAAG,CAAG,GAAIC,CAAAA,GAAJ,EAAZ,CACA,eAAAhC,KAAK,CAACU,CAAD,CAAL,CAASuB,IAAT,sDACIC,MADJ,CACW,SAACC,CAAD,QAAO,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,GAAhB,EAAqBC,QAArB,CAA8BD,CAA9B,CAAP,EADX,EAEGE,OAFH,CAEW,SAACF,CAAD,QAAOJ,CAAAA,GAAG,CAACO,GAAJ,CAAQH,CAAR,CAAP,EAFX,EAGA,MAAOI,CAAAA,KAAK,CAACC,IAAN,CAAWT,GAAX,CAAP,CACD,CAND,CAQA,GAAMU,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAC/B,CAAD,CAAe,CAC3C,GAAIV,KAAK,CAACU,CAAD,CAAL,CAASuB,IAAT,EAAiBd,SAArB,CAAgC,CAC9B,mBAAO,+BAAP,CACD,CACD,mBACE,4CACE,oBAAC,OAAD,EACE,mBAAkBF,GAAG,CAACP,CAAD,CADvB,CAEE,OAAO,CAAED,WAAW,CAACC,CAAD,CAFtB,CAGE,KAAK,CAAC,SAHR,SADF,cAQE,oBAAC,OAAD,EACE,EAAE,CAAEO,GAAG,CAACP,CAAD,CADT,CAEE,IAAI,CAAEgC,OAAO,CAACzB,GAAG,CAACP,CAAD,CAAJ,CAFf,CAGE,QAAQ,CAAEH,SAAS,CAACG,CAAD,CAHrB,CAIE,OAAO,CAAEM,WAAW,CAACN,CAAD,CAJtB,CAKE,YAAY,CAAE,CACZiC,QAAQ,CAAE,QADE,CAEZC,UAAU,CAAE,OAFA,CALhB,CASE,eAAe,CAAE,CACfD,QAAQ,CAAE,QADK,CAEfC,UAAU,CAAE,MAFG,CATnB,eAcE,oBAAC,UAAD,EAAY,SAAS,CAAEtC,OAAO,CAACV,UAA/B,EACGiD,gBAAgB,CAACnC,CAAD,CADnB,CAdF,CARF,CADF,CA6BD,CAjCD,CAmCA,GAAMmC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACnC,CAAD,CAAe,CACtC,GAAMoC,CAAAA,IAAI,CAAGhB,WAAW,CAACpB,CAAD,CAAxB,CACA,GAAMqC,CAAAA,UAAU,CAAG9D,8BAA8B,CAAC6D,IAAD,CAAO,CACtD9C,KAAK,CAACU,CAAD,CAAL,CAASsC,QAD6C,CAAP,CAAjD,CAGA,mBACE,oBAAC,KAAD,EAAO,OAAO,CAAE,yBAAM5B,CAAAA,eAAe,CAACV,CAAD,CAAI,KAAJ,CAArB,EAAhB,eACE,iCACGqC,UAAU,CAACE,OAAX,CAAmB/C,GAAnB,CAAuB,SAACgD,EAAD,qBACtB,0BAAI,KAAK,CAAE,CAAEC,UAAU,CAAE,SAAd,CAAyBC,aAAa,CAAE,SAAxC,CAAX,EACGF,EADH,CADsB,EAAvB,CADH,CADF,CAQGH,UAAU,CAACM,IAAX,CAAgBnD,GAAhB,CAAoB,SAACoD,GAAD,qBACnB,8BACGA,GAAG,CAACpD,GAAJ,CAAQ,SAACgD,EAAD,qBACP,0BAAI,KAAK,CAAE,CAAEC,UAAU,CAAE,KAAd,CAAqBC,aAAa,CAAE,KAApC,CAAX,EAAyDF,EAAzD,CADO,EAAR,CADH,CADmB,EAApB,CARH,CADF,CAkBD,CAvBD,CAyBA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAA6B,CACnD,OAAQA,IAAI,CAACC,IAAb,EACE,IAAK,WAAL,CACA,IAAK,SAAL,CACE,mBAAO,+BAAP,CAHJ,CAKA,mBACE,oBAAC,gBAAD,EACE,KAAK,CAAE,GADT,CAEE,YAAY,CAAE,CAAC,CAFjB,CAGE,QAAQ,CAAE,IAHZ,CAIE,cAAc,CAAE,KAJlB,CAKE,KAAK,CAAED,IAAI,CAACvB,IALd,EADF,CASD,CAfD,CAiBA,GAAMyB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAChD,CAAD,CAAe,CAChC,mBACE,oBAAC,QAAD,mBACE,8BAAKc,gBAAgB,CAACd,CAAD,CAArB,CADF,cAEE,0BAAI,KAAK,CAAE,CAAEiD,aAAa,CAAE,QAAjB,CAAX,eAEI,0BAAI,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAAsBC,WAAW,CAAE,MAAnC,CAAX,EACGC,YAAY,CAACpD,CAAC,CAAG,CAAL,CAAQV,KAAK,CAACU,CAAD,CAAb,CADf,CAFJ,CAFF,cASE,8BAAK6C,eAAe,CAACvD,KAAK,CAACU,CAAD,CAAN,CAApB,CATF,cAUE,0BAAI,KAAK,CAAC,OAAV,EAAmB+B,qBAAqB,CAAC/B,CAAD,CAAxC,CAVF,CADF,CAcD,CAfD,CAiBA,GAAMqD,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,MAAqB,CAAG,EAA9B,CACA,IAAK,GAAItD,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGV,KAAK,CAACiE,MAA1B,CAAkCvD,CAAC,EAAnC,CAAuC,CACrCsD,MAAM,CAACE,IAAP,CAAYR,UAAU,CAAChD,CAAD,CAAtB,EACD,CACD,mBAAO,oBAAC,IAAD,MAAOsD,MAAP,CAAP,CACD,CAND,CAQA,MAAOD,CAAAA,WAAW,EAAlB,CACD,CA1JM,CA4JP,QAASD,CAAAA,YAAT,CAAsBK,KAAtB,CAAqCX,IAArC,CAAyD,CACvD,GAAIY,CAAAA,QAAJ,CACA,OAAQZ,IAAI,CAACC,IAAb,EACE,IAAK,OAAL,CACEW,QAAQ,CAAG,WAAX,CACA,MACF,IAAK,UAAL,CACEA,QAAQ,CAAG,cAAX,CACA,MACF,IAAK,SAAL,CACEA,QAAQ,CAAG,mBAAX,CACA,MACF,IAAK,YAAL,CACEA,QAAQ,CAAG,sBAAX,CACA,MACF,IAAK,WAAL,CACEA,QAAQ,CAAG,kBAAX,CACA,MACF,IAAK,SAAL,CACEA,QAAQ,CAAG,gBAAX,CACA,MAlBJ,CAoBA,MAAOD,CAAAA,KAAK,CAAG,IAAR,CAAeC,QAAf,CAA0B,GAAjC,CACD","sourcesContent":["import React, { useState } from \"react\";\nimport { Goal } from \"../../types\";\nimport { Card, Table, Button } from \"react-bootstrap\";\nimport { PremiseComponent } from \"./Premise\";\nimport * as Types from \"../../types\";\nimport SUCCESSFUL_ICON from \"../../src_img/card_UI/correct.jpg\";\nimport UNSUCCESSFUL_ICON from \"../../src_img/card_UI/incorrect.jpg\";\nimport { genTruthTableInStringForBTrees } from \"../../server/gameApp/logicResolver/plainResolver\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button as MButton,\n  Popover,\n  Typography,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\ninterface GoalsProps {\n  goals: Goal[];\n  isSuccessful: boolean[];\n}\n\nexport const GoalsComponent = ({ goals, isSuccessful }: GoalsProps) => {\n  const [showTable, setShowTable] = useState(goals.map((_) => false));\n\n  const classes = useStyles();\n  const [anchorEls, setAnchorEl] = React.useState<(HTMLButtonElement | null)[]>(\n    goals.map((_) => null)\n  );\n  const handleClick = (i: number) => (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    const newAnchorEls = anchorEls.slice();\n    newAnchorEls.splice(i, 1, event.currentTarget);\n    setAnchorEl(newAnchorEls);\n  };\n  const handleClose = (i: number) => () => {\n    const newAnchorEls = anchorEls.slice();\n    newAnchorEls.splice(i, 1, null);\n    setAnchorEl(newAnchorEls);\n  };\n\n  const ids = anchorEls.map((a, i) => (a ? \"popover\" + i : undefined));\n\n  const setShowOneTable = (i: number, isShow: boolean) => {\n    setShowTable(showTable.map((old, j) => (i == j ? isShow : old)));\n  };\n\n  const renderSuccessful = (i: number) => {\n    return (\n      <div\n        style={{\n          width: \"30px\",\n          height: \"30px\",\n          backgroundImage:\n            \"url(\" +\n            (isSuccessful[i] ? SUCCESSFUL_ICON : UNSUCCESSFUL_ICON) +\n            \")\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      ></div>\n    );\n  };\n\n  const collectVars = (i: number): Types.Card[] => {\n    const set = new Set<Types.Card>();\n    goals[i].expr\n      ?.filter((c) => [\"A\", \"B\", \"C\", \"D\"].includes(c))\n      .forEach((c) => set.add(c));\n    return Array.from(set);\n  };\n\n  const renderShowTableButton = (i: number) => {\n    if (goals[i].expr == undefined) {\n      return <div></div>;\n    }\n    return (\n      <div>\n        <MButton\n          aria-describedby={ids[i]}\n          onClick={handleClick(i)}\n          color=\"primary\"\n        >\n          Hint\n        </MButton>\n        <Popover\n          id={ids[i]}\n          open={Boolean(ids[i])}\n          anchorEl={anchorEls[i]}\n          onClose={handleClose(i)}\n          anchorOrigin={{\n            vertical: \"center\",\n            horizontal: \"right\",\n          }}\n          transformOrigin={{\n            vertical: \"center\",\n            horizontal: \"left\",\n          }}\n        >\n          <Typography className={classes.typography}>\n            {renderTruthTable(i)}\n          </Typography>\n        </Popover>\n      </div>\n    );\n  };\n\n  const renderTruthTable = (i: number) => {\n    const vars = collectVars(i);\n    const truthTable = genTruthTableInStringForBTrees(vars, [\n      goals[i].boolTree,\n    ]);\n    return (\n      <Table onClick={() => setShowOneTable(i, false)}>\n        <thead>\n          {truthTable.headers.map((it) => (\n            <td style={{ paddingTop: \"0.25rem\", paddingBottom: \"0.25rem\" }}>\n              {it}\n            </td>\n          ))}\n        </thead>\n        {truthTable.body.map((row) => (\n          <tr>\n            {row.map((it) => (\n              <td style={{ paddingTop: \"1px\", paddingBottom: \"1px\" }}>{it}</td>\n            ))}\n          </tr>\n        ))}\n      </Table>\n    );\n  };\n\n  const showGoalInCards = (goal: Goal): JSX.Element => {\n    switch (goal.kind) {\n      case \"tautology\":\n      case \"paradox\":\n        return <div></div>;\n    }\n    return (\n      <PremiseComponent\n        scale={0.5}\n        premiseIndex={-1}\n        isLocked={true}\n        isProofPremise={false}\n        cards={goal.expr}\n      />\n    );\n  };\n\n  const renderGoal = (i: number) => {\n    return (\n      <ListItem>\n        <td>{renderSuccessful(i)}</td>\n        <td style={{ verticalAlign: \"center\" }}>\n          {\n            <h4 style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\n              {showGoalKind(i + 1, goals[i])}\n            </h4>\n          }\n        </td>\n        <td>{showGoalInCards(goals[i])}</td>\n        <td align=\"right\">{renderShowTableButton(i)}</td>\n      </ListItem>\n    );\n  };\n\n  const renderGoals = () => {\n    const result: JSX.Element[] = [];\n    for (let i = 0; i < goals.length; i++) {\n      result.push(renderGoal(i));\n    }\n    return <List>{result}</List>;\n  };\n\n  return renderGoals();\n};\n\nfunction showGoalKind(index: number, goal: Goal): string {\n  let showKind: string;\n  switch (goal.kind) {\n    case \"prove\":\n      showKind = \"To prove:\";\n      break;\n    case \"disprove\":\n      showKind = \"To disprove:\";\n      break;\n    case \"unknown\":\n      showKind = \"Make undecidable:\";\n      break;\n    case \"equivalent\":\n      showKind = \"To be equivalent to:\";\n      break;\n    case \"tautology\":\n      showKind = \"Make a tautology\";\n      break;\n    case \"paradox\":\n      showKind = \"Make a paradox\";\n      break;\n  }\n  return index + \". \" + showKind + \" \";\n}\n"]},"metadata":{},"sourceType":"module"}