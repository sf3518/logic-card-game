{"ast":null,"code":"import _regeneratorRuntime from\"/Users/johnny/IC/Computing/year2/DRP/drp48/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johnny/IC/Computing/year2/DRP/drp48/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johnny/IC/Computing/year2/DRP/drp48/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{PremiseComponent}from'./Premise';import{HandCardAreaComponent}from'./HandCard';import{DndProvider}from'react-dnd';import{HTML5Backend}from'react-dnd-html5-backend';import Axios from'axios';import{Paths}from'../../routesPaths';import{doActionToView,getGoalStates,fixInfinityNumber}from'../../game/views';import{Table,Button,Form}from'react-bootstrap';import Context from'./gameContext';import{playCardsToAction,discardAction}from'../../game/actions';import{GoalsComponent}from'./Goals';import{LinkContainer}from'react-router-bootstrap';import{AppBar,Toolbar,Typography,Button as MButton,IconButton,Container,Grid,Drawer,List,Divider,ListItem,ListItemText,BottomNavigation,Dialog,Slide,DialogTitle,DialogContent,DialogContentText,DialogActions}from'@material-ui/core';import MenuIcon from'@material-ui/icons/Menu';import UndoIcon from'@material-ui/icons/Undo';import FeedbackIcon from'@material-ui/icons/Feedback';import NavigateNextIcon from'@material-ui/icons/NavigateNext';import'./Board.css';import{useStyles}from'../appbar';import{TruthTable}from'./Truthtable';import TUTORIAL_1 from\"../../src_img/tutorial/1.gif\";import TUTORIAL_2 from\"../../src_img/tutorial/2.gif\";import TUTORIAL_3 from\"../../src_img/tutorial/3.gif\";var Transition=React.forwardRef(function Transition(props,ref){return/*#__PURE__*/React.createElement(Slide,Object.assign({direction:\"up\",ref:ref},props));});var playAs=\"A\";// Game board\nvar LevelBoardComponent=function LevelBoardComponent(_ref){var title=_ref.title,description=_ref.description,initView=_ref.initView,nextUrl=_ref.nextUrl,backUrl=_ref.backUrl,submit=_ref.submit;// Actions been taken in this round\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),actions=_useState2[0],setActions=_useState2[1];// Which hand card is selected at now \n// -1 if no card is selected\nvar _useState3=useState(-1),_useState4=_slicedToArray(_useState3,2),handSelected=_useState4[0],setHandSelected=_useState4[1];// History of views in this round\nvar _useState5=useState([fixInfinityNumber(initView)]),_useState6=_slicedToArray(_useState5,2),historyViews=_useState6[0],setHV=_useState6[1];// Whether to show the right hand side drawer\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isShowDrawer=_useState8[0],setShowDrawer=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isShownSuccessDialogue=_useState10[0],setShownSuccessDialogue=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isShowTruthTable=_useState12[0],setShowTruthTable=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),bottomNavIndex=_useState14[0],setBottomNavIndex=_useState14[1];// which description to display, if descIndex = description.length, no display\nvar _useState15=useState(description.length),_useState16=_slicedToArray(_useState15,2),descIndex=_useState16[0],setDescIndex=_useState16[1];var _useState17=useState(historyViews[historyViews.length-1]),_useState18=_slicedToArray(_useState17,2),view=_useState18[0],setView=_useState18[1];var _useState19=useState(view.goals.map(function(_){return false;})),_useState20=_slicedToArray(_useState19,2),goalStates=_useState20[0],setGoalStates=_useState20[1];var classes=useStyles();var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),allVars=_useState22[0],setAllVars=_useState22[1];// Refresh from server at the very beginning\nuseEffect(function(){setDescIndex(0);setShownSuccessDialogue(false);setHistoryViews([fixInfinityNumber(initView)]);setActions([]);},[nextUrl,initView]);useEffect(function(){if(isSuccess()){submit();}},[goalStates]);// Recalculate variables  \nuseEffect(function(){var cards=new Set();var addVars=function addVars(p){return p.filter(function(it){return[\"A\",\"B\",\"C\",\"D\"].includes(it);}).forEach(function(c){return cards.add(c);});};view.premises.forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),p=_ref3[0],_=_ref3[1];return addVars(p);});addVars(view.handCardWithCount.map(function(_ref4){var _ref5=_slicedToArray(_ref4,2),c=_ref5[0],_=_ref5[1];return c;}));setAllVars(Array.from(cards));},[historyViews]);var isSuccess=function isSuccess(){return goalStates.reduce(function(a,b){return a&&b;});};var unselectHandCard=function unselectHandCard(){return setHandSelected(-1);};var setHistoryViews=function setHistoryViews(newViews){setHV(newViews);setGoalStates(getGoalStates(newViews[newViews.length-1]));setView(newViews[newViews.length-1]);};var pushAction=function pushAction(action){setActions(actions.concat(action));};var popAction=function popAction(){setActions(actions.slice(0,actions.length-1));};var pushHistoryView=function pushHistoryView(view){setHistoryViews(historyViews.concat(view));};var popHistoryView=function popHistoryView(){setHistoryViews(historyViews.slice(0,historyViews.length-1));};var doAction=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(action){var newView;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newView=doActionToView(view,action);pushAction(action);pushHistoryView(newView);unselectHandCard();case 4:case\"end\":return _context.stop();}}},_callee);}));return function doAction(_x){return _ref6.apply(this,arguments);};}();var undoAction=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(actions.length>0){popAction();popHistoryView();}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function undoAction(){return _ref7.apply(this,arguments);};}();var setNextDesc=function setNextDesc(){if(descIndex==description.length){setDescIndex(0);}else{setDescIndex(descIndex+1);}};var setPrevDesc=function setPrevDesc(){if(descIndex==0){setDescIndex(description.length);}else{setDescIndex(descIndex-1);}};var toggleDrawer=function toggleDrawer(open){return function(event){if(event.type==='keydown'&&(event.key==='Tab'||event.key==='Shift')){return;}setShowDrawer(open);};};var submitAnswerToServer=function submitAnswerToServer(){var config={params:{isSuccess:isSuccess()}};Axios.get(Paths.levelSubmit,config).then(function(res){alert(res.data.msg);});};var renderSuccessDialogue=/*#__PURE__*/React.createElement(Dialog,{open:!isShownSuccessDialogue&&isSuccess(),TransitionComponent:Transition,keepMounted:true,onClose:function onClose(){return setShownSuccessDialogue(true);},\"aria-labelledby\":\"alert-dialog-slide-title\",\"aria-describedby\":\"alert-dialog-slide-description\",style:{color:'green'}},/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-slide-title\",style:{color:'green'}},\"LEVEL PASSED!\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,{id:\"alert-dialog-slide-description\"},\"You have completed this challenge!\")),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(MButton,{onClick:function onClick(){return setShownSuccessDialogue(true);},color:\"secondary\"},\"CLOSE\"),nextUrl!==\"\"?/*#__PURE__*/React.createElement(LinkContainer,{to:nextUrl},/*#__PURE__*/React.createElement(MButton,{color:\"primary\"},\"NEXT LEVEL\")):undefined));var renderPremises=function renderPremises(){var result=[];for(var i=0;i<4;i++){var _view$premises$i;var _ref8=(_view$premises$i=view.premises[i])!==null&&_view$premises$i!==void 0?_view$premises$i:[[],true],_ref9=_slicedToArray(_ref8,2),premise=_ref9[0],isLocked=_ref9[1];result.push(/*#__PURE__*/React.createElement(PremiseComponent,{cards:premise,scale:1,isLocked:isLocked,isProofPremise:true,premiseIndex:i}));}if(view.premises.length==1){var _ref10=[result[1],result[0]];result[0]=_ref10[0];result[1]=_ref10[1];}else if(view.premises.length==2){var _ref11=[result[0],result[1],result[2]];result[1]=_ref11[0];result[2]=_ref11[1];result[0]=_ref11[2];}return/*#__PURE__*/React.createElement(Table,{striped:true,hover:true},result.map(function(it){return/*#__PURE__*/React.createElement(\"tr\",null,it);}));};var renderHandCardArea=function renderHandCardArea(){return/*#__PURE__*/React.createElement(HandCardAreaComponent,{playerVar:playAs,cards:view.handCardWithCount});};var renderGoals=function renderGoals(){return/*#__PURE__*/React.createElement(GoalsComponent,{goals:view.goals,isSuccessful:goalStates});};var renderDrawerContent=function renderDrawerContent(){var menu=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(List,null,/*#__PURE__*/React.createElement(ListItem,{button:true,key:\"sub\",onClick:submitAnswerToServer},/*#__PURE__*/React.createElement(ListItemText,{primary:\"Submit\"}))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(List,null,/*#__PURE__*/React.createElement(LinkContainer,{to:backUrl},/*#__PURE__*/React.createElement(ListItem,{button:true,key:\"levelPage\",onClick:function onClick(){}},/*#__PURE__*/React.createElement(ListItemText,{primary:\"Back to Level Page\"}))),/*#__PURE__*/React.createElement(LinkContainer,{to:\"/\"},/*#__PURE__*/React.createElement(ListItem,{button:true,key:\"menu\",onClick:function onClick(){}},/*#__PURE__*/React.createElement(ListItemText,{primary:\"Back to Main Menu\"})))));return menu;};var renderTutorials=function renderTutorials(){var img;switch(descIndex){case 1:{img=/*#__PURE__*/React.createElement(\"img\",{src:TUTORIAL_1,width:\"500\"});break;}case 3:{img=/*#__PURE__*/React.createElement(\"img\",{src:TUTORIAL_2,width:\"500\"});break;}case 4:{img=/*#__PURE__*/React.createElement(\"img\",{src:TUTORIAL_3,width:\"500\"});break;}default:{img=/*#__PURE__*/React.createElement(\"div\",null);}}var content=/*#__PURE__*/React.createElement(\"div\",null,description[descIndex],/*#__PURE__*/React.createElement(\"div\",null,img));return content;};return/*#__PURE__*/React.createElement(DndProvider,{backend:HTML5Backend},/*#__PURE__*/React.createElement(Context.Provider,{value:{playerVar:playAs,handSelected:handSelected,handCardSelected:handSelected>=0?view.handCardWithCount[handSelected][0]:undefined,unselectHand:unselectHandCard,pickHandCardCallback:function pickHandCardCallback(handIndex){setHandSelected(handIndex);},moveHandCardToPremise:function moveHandCardToPremise(premiseId,inPremiseIndex){doAction(playCardsToAction(playAs,handSelected,[premiseId,inPremiseIndex]));},discardPickedHandCard:function discardPickedHandCard(){doAction(discardAction(playAs,handSelected));}}},/*#__PURE__*/React.createElement(AppBar,{position:\"static\"},/*#__PURE__*/React.createElement(Toolbar,{style:{backgroundColor:'#F2994A'}},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",className:classes.title},title),/*#__PURE__*/React.createElement(IconButton,{edge:\"start\",className:classes.menuButton,color:\"inherit\",\"aria-label\":\"menu\",onClick:toggleDrawer(true)},/*#__PURE__*/React.createElement(MenuIcon,null)),/*#__PURE__*/React.createElement(Drawer,{anchor:\"right\",open:isShowDrawer,onClose:toggleDrawer(false)},renderDrawerContent()))),/*#__PURE__*/React.createElement(Container,{maxWidth:\"xl\"},renderPremises()),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Container,{maxWidth:\"xl\",style:{marginTop:\"20px\"}},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:0},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},renderHandCardArea()),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},renderGoals()))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(BottomNavigation,{value:bottomNavIndex,showLabels:true,className:classes.root,style:{width:'100%',position:'sticky',bottom:0}},/*#__PURE__*/React.createElement(MButton,{startIcon:/*#__PURE__*/React.createElement(UndoIcon,null),disabled:actions.length<=0,onClick:undoAction},\"UNDO ONE STEP\"),/*#__PURE__*/React.createElement(MButton,{disabled:description.length==0,startIcon:/*#__PURE__*/React.createElement(FeedbackIcon,null),onClick:setNextDesc},\"SHOW TUTORIALS\"),/*#__PURE__*/React.createElement(MButton,{startIcon:/*#__PURE__*/React.createElement(FeedbackIcon,null),onClick:function onClick(){return setShowTruthTable(true);}},\"SHOW TRUTH TABLE\"),/*#__PURE__*/React.createElement(LinkContainer,{to:nextUrl},/*#__PURE__*/React.createElement(MButton,{disabled:nextUrl===\"\"||!isSuccess(),startIcon:/*#__PURE__*/React.createElement(NavigateNextIcon,null)},\"NEXT LEVEL\"))),/*#__PURE__*/React.createElement(Dialog,{open:descIndex!=description.length,onClose:function onClose(){return setDescIndex(description.length);}},/*#__PURE__*/React.createElement(DialogTitle,{style:{width:\"1000px\"}},\"Tutorials\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Label,null,title===\"1: Hello, world!\"?renderTutorials():description[descIndex]))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:setPrevDesc,style:{marginRight:\"38%\",backgroundColor:descIndex==0?'#CCC':\"#307df7\",borderWidth:\"0px\"}},\"\\u2190\"),/*#__PURE__*/React.createElement(\"div\",{style:{marginRight:\"38%\"}},descIndex+1,\"/\",description.length),/*#__PURE__*/React.createElement(Button,{onClick:setNextDesc,style:{marginRight:\"2%\",backgroundColor:descIndex==description.length-1?'#CCC':\"#307df7\",borderWidth:\"0px\"}},\"\\u2192\"))),/*#__PURE__*/React.createElement(Dialog,{open:isShowTruthTable,onClose:function onClose(){return setShowTruthTable(false);}},/*#__PURE__*/React.createElement(DialogTitle,null,\"Truth Table\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(TruthTable,{premises:view.premises.map(function(_ref12){var _ref13=_slicedToArray(_ref12,2),p=_ref13[0],_=_ref13[1];return p;})}))),renderSuccessDialogue));};export{LevelBoardComponent};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/game/LevelBoard.tsx"],"names":["React","useState","useEffect","PremiseComponent","HandCardAreaComponent","DndProvider","HTML5Backend","Axios","Paths","doActionToView","getGoalStates","fixInfinityNumber","Table","Button","Form","Context","playCardsToAction","discardAction","GoalsComponent","LinkContainer","AppBar","Toolbar","Typography","MButton","IconButton","Container","Grid","Drawer","List","Divider","ListItem","ListItemText","BottomNavigation","Dialog","Slide","DialogTitle","DialogContent","DialogContentText","DialogActions","MenuIcon","UndoIcon","FeedbackIcon","NavigateNextIcon","useStyles","TruthTable","TUTORIAL_1","TUTORIAL_2","TUTORIAL_3","Transition","forwardRef","props","ref","playAs","LevelBoardComponent","title","description","initView","nextUrl","backUrl","submit","actions","setActions","handSelected","setHandSelected","historyViews","setHV","isShowDrawer","setShowDrawer","isShownSuccessDialogue","setShownSuccessDialogue","isShowTruthTable","setShowTruthTable","bottomNavIndex","setBottomNavIndex","length","descIndex","setDescIndex","view","setView","goals","map","_","goalStates","setGoalStates","classes","allVars","setAllVars","setHistoryViews","isSuccess","cards","Set","addVars","p","filter","it","includes","forEach","c","add","premises","handCardWithCount","Array","from","reduce","a","b","unselectHandCard","newViews","pushAction","action","concat","popAction","slice","pushHistoryView","popHistoryView","doAction","newView","undoAction","setNextDesc","setPrevDesc","toggleDrawer","open","event","type","key","submitAnswerToServer","config","params","get","levelSubmit","then","res","alert","data","msg","renderSuccessDialogue","color","undefined","renderPremises","result","i","premise","isLocked","push","renderHandCardArea","renderGoals","renderDrawerContent","menu","renderTutorials","img","content","playerVar","handCardSelected","unselectHand","pickHandCardCallback","handIndex","moveHandCardToPremise","premiseId","inPremiseIndex","discardPickedHandCard","backgroundColor","menuButton","marginTop","root","width","position","bottom","marginRight","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { PremiseComponent } from './Premise'\nimport { HandCardAreaComponent } from './HandCard'\nimport { GameView, GameAction, Card, Premise } from '../../types'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Axios, { AxiosRequestConfig } from 'axios'\nimport { Paths } from '../../routesPaths'\nimport { doActionToView, getGoalStates, fixInfinityNumber } from '../../game/views'\nimport { Table, Button, Modal, Form } from 'react-bootstrap'\nimport Context from './gameContext'\nimport { playCardsToAction, discardAction } from '../../game/actions'\nimport { GoalsComponent } from './Goals'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  makeStyles, \n  Button as MButton, \n  IconButton, \n  Container, \n  Grid, \n  Drawer,\n  List, \n  Divider, \n  ListItem, \n  ListItemText, \n  BottomNavigation, \n  Dialog,\n  Slide, \n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport FeedbackIcon from '@material-ui/icons/Feedback'\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\n\nimport './Board.css'\nimport { TransitionProps } from '@material-ui/core/transitions/transition'\nimport { genTruthTableInStringForBTrees } from '../../server/gameApp/logicResolver/plainResolver'\nimport { parsePremiseSafe } from '../../server/gameApp/game/premise'\nimport { useStyles } from '../appbar'\nimport { TruthTable } from './Truthtable'\nimport TUTORIAL_1 from \"../../src_img/tutorial/1.gif\";\nimport TUTORIAL_2 from \"../../src_img/tutorial/2.gif\";\nimport TUTORIAL_3 from \"../../src_img/tutorial/3.gif\";\nimport { height } from '@material-ui/system'\n\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nconst playAs: Card = \"A\"\n\ninterface Props {\n  title: string\n  description: string[]\n  initView: GameView\n  nextUrl: string\n  backUrl: string\n  submit: () => void\n}\n\n// Game board\nconst LevelBoardComponent = ({\n  title,\n  description,\n  initView,\n  nextUrl,\n  backUrl,\n  submit\n}: Props) => {\n\n  // Actions been taken in this round\n  const [actions, setActions] = useState([] as GameAction[])\n  // Which hand card is selected at now \n  // -1 if no card is selected\n  const [handSelected, setHandSelected] = useState(-1)\n  // History of views in this round\n  const [historyViews, setHV] = useState([fixInfinityNumber(initView)])\n  // Whether to show the right hand side drawer\n  const [isShowDrawer, setShowDrawer] = useState(false)\n  const [isShownSuccessDialogue, setShownSuccessDialogue] = useState(false)\n  const [isShowTruthTable, setShowTruthTable] = useState(false)\n  const [bottomNavIndex, setBottomNavIndex] = useState(0)\n  \n  // which description to display, if descIndex = description.length, no display\n  const [descIndex, setDescIndex] = useState(description.length)\n\n  const [view, setView] = useState(historyViews[historyViews.length - 1])\n\n  const [goalStates, setGoalStates] = useState(view.goals.map(_ => false))\n\n  const classes = useStyles()\n\n  const [allVars, setAllVars] = useState<Card[]>([])\n\n  // Refresh from server at the very beginning\n  useEffect(() => {\n    setDescIndex(0)\n    setShownSuccessDialogue(false)\n    setHistoryViews([fixInfinityNumber(initView)])\n    setActions([])\n  }, [nextUrl, initView])\n\n  useEffect(() => {\n    if (isSuccess()) {\n      submit()\n    }\n  }, [goalStates])\n\n  // Recalculate variables  \n  useEffect(() => {\n    const cards: Set<Card> = new Set()\n    const addVars = (p: Premise) => p.filter(it => [\"A\", \"B\", \"C\", \"D\"].includes(it)).forEach(c => cards.add(c))\n    view.premises.forEach(([p, _]) => addVars(p))\n    addVars(view.handCardWithCount.map(([c, _]) => c))\n    setAllVars(Array.from(cards))\n  }, [historyViews])\n\n  const isSuccess = () => goalStates.reduce((a, b) => a && b)\n\n  const unselectHandCard = () => setHandSelected(-1)\n\n  const setHistoryViews = (newViews: GameView[]) => {\n    setHV(newViews)\n    setGoalStates(getGoalStates(newViews[newViews.length - 1]))\n    setView(newViews[newViews.length - 1])\n  }\n\n  const pushAction = (action: GameAction) => {\n    setActions(actions.concat(action))\n  }\n\n  const popAction = () => {\n    setActions(actions.slice(0, actions.length - 1))\n  }\n\n  const pushHistoryView = (view: GameView) => {\n    setHistoryViews(historyViews.concat(view))\n  }\n\n  const popHistoryView = () => {\n    setHistoryViews(historyViews.slice(0, historyViews.length - 1))\n  }\n\n  const doAction = async (action: GameAction) => {\n    const newView = doActionToView(view, action)\n    pushAction(action)\n    pushHistoryView(newView)\n    unselectHandCard()\n  }\n\n  const undoAction = async () => {\n    if (actions.length > 0) {\n      popAction()\n      popHistoryView()\n    }\n  }\n\n  const setNextDesc = () => {\n    if (descIndex == description.length) {\n      setDescIndex(0)\n    } else {\n      setDescIndex(descIndex + 1)\n    }\n  }\n\n  const setPrevDesc = () => {\n    if (descIndex == 0) {\n      setDescIndex(description.length)\n    } else {\n      setDescIndex(descIndex - 1)\n    }\n  }\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent,\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return\n    }\n    setShowDrawer(open)\n  } \n\n  const submitAnswerToServer = () => {\n    const config: AxiosRequestConfig = {\n      params: {\n        isSuccess: isSuccess()\n      }\n    }\n    Axios.get(Paths.levelSubmit, config)\n      .then(res => {\n        alert(res.data.msg);\n      })\n  }\n\n  const renderSuccessDialogue =\n    <Dialog\n      open={!isShownSuccessDialogue && isSuccess()}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={() => setShownSuccessDialogue(true)}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      style={{ color: 'green' }}\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\" style={{ color: 'green'}}>LEVEL PASSED!</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          You have completed this challenge!\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <MButton onClick={() => setShownSuccessDialogue(true)} color=\"secondary\">\n          CLOSE\n        </MButton>\n        {nextUrl !== \"\" ? <LinkContainer to={nextUrl}>\n          <MButton color=\"primary\">\n            NEXT LEVEL\n          </MButton>\n        </LinkContainer> : undefined}\n      </DialogActions>\n    </Dialog>\n\n  const renderPremises = (): JSX.Element => {\n    const result: JSX.Element[] = []\n    for (let i = 0; i < 4; i++) {\n      const [premise, isLocked] = view.premises[i] ?? [[], true]\n      result.push(\n        <PremiseComponent \n          cards={premise} \n          scale={1}\n          isLocked={isLocked}\n          isProofPremise={true}\n          premiseIndex={i} \n        />\n      )\n    }\n    if (view.premises.length == 1) {\n      [result[0], result[1]] = [result[1], result[0]]\n    } else if (view.premises.length == 2) {\n      [result[1], result[2], result[0]] = [result[0], result[1], result[2]]\n    }\n    return (\n      <Table striped hover>\n        {result.map(it => <tr>{it}</tr>)}\n      </Table>\n    )\n  }\n\n  const renderHandCardArea = (): JSX.Element => {\n    return <HandCardAreaComponent\n      playerVar={playAs}\n      cards={view.handCardWithCount}\n    />\n  }\n\n  const renderGoals = (): JSX.Element => {\n    return <GoalsComponent goals={view.goals} isSuccessful={goalStates} ></GoalsComponent>\n  }\n\n  const renderDrawerContent = (): JSX.Element => {\n    const menu = <div>\n      <List>\n        <ListItem button key=\"sub\" onClick={submitAnswerToServer}>\n          <ListItemText primary=\"Submit\"/>\n        </ListItem>\n      </List>\n      <Divider/>\n      <List>\n        <LinkContainer to={backUrl}>\n          <ListItem button key=\"levelPage\" onClick={() => {}}>\n            <ListItemText primary=\"Back to Level Page\"/>\n          </ListItem>\n        </LinkContainer>\n        <LinkContainer to='/'>\n          <ListItem button key=\"menu\" onClick={() => {}}>\n            <ListItemText primary=\"Back to Main Menu\"/>\n          </ListItem>\n        </LinkContainer>\n      </List>\n    </div>\n    return menu\n  }\n\n  const renderTutorials = (): JSX.Element => {\n    let img:object;\n    switch (descIndex) {\n      case 1: {\n        img = <img src={TUTORIAL_1} width=\"500\"/>;\n        break\n      }\n      case 3: {\n        img = <img src={TUTORIAL_2} width=\"500\"/>;\n        break\n      }\n      case 4: {\n        img = <img src={TUTORIAL_3} width=\"500\"/>;\n        break\n      }\n      default: {\n        img = <div/>\n      }\n    }\n    const content = <div>\n      {description[descIndex]}\n      <div>{img}</div>\n    </div>\n    return content\n  }\n\n  return(\n    <DndProvider backend={HTML5Backend}>\n      <Context.Provider value={{\n          playerVar: playAs,\n          handSelected: handSelected,\n          handCardSelected: handSelected >= 0 ? view.handCardWithCount[handSelected][0] : undefined,\n          unselectHand: unselectHandCard,\n          pickHandCardCallback: (handIndex: number) => {\n            setHandSelected(handIndex)\n          },\n          moveHandCardToPremise: (premiseId: number, inPremiseIndex: number) => {\n            doAction(playCardsToAction(playAs, handSelected, [premiseId, inPremiseIndex]))\n          },\n          discardPickedHandCard: () => {\n            doAction(discardAction(playAs, handSelected))\n          }\n      }}>\n        <AppBar position=\"static\">\n          <Toolbar style={{ backgroundColor: '#F2994A'}}>\n            <Typography variant=\"h6\" className={classes.title}>\n              {title}\n            </Typography>\n            <IconButton \n              edge=\"start\" \n              className={classes.menuButton} \n              color=\"inherit\" \n              aria-label=\"menu\"\n              onClick={toggleDrawer(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Drawer anchor=\"right\" open={isShowDrawer} onClose={toggleDrawer(false)}>\n              {renderDrawerContent()}\n            </Drawer>\n          </Toolbar>\n        </AppBar>\n        <Container maxWidth=\"xl\">\n          {renderPremises()}\n        </Container>\n        <Divider/>\n\n        <Container maxWidth=\"xl\" style={{ marginTop: \"20px\" }}>\n          <Grid container spacing={0}>\n            <Grid item xs={6}>\n              {renderHandCardArea()}\n            </Grid>\n            <Grid item xs={6}>\n              {renderGoals()}\n            </Grid>\n          </Grid>\n        </Container>\n        <Divider/>\n        {/* Navbar at the bottom */}\n        <BottomNavigation\n          value={bottomNavIndex}\n          showLabels\n          className={classes.root}\n          style={{\n            width: '100%',\n            position: 'sticky',\n            bottom: 0,\n          }}\n        > \n          <MButton startIcon={<UndoIcon/>} disabled={actions.length <= 0} onClick={undoAction}>UNDO ONE STEP</MButton>  \n          <MButton disabled={description.length == 0}  startIcon={<FeedbackIcon/>} onClick={setNextDesc}>SHOW TUTORIALS</MButton>  \n          <MButton startIcon={<FeedbackIcon/>} onClick={() => setShowTruthTable(true)}>SHOW TRUTH TABLE</MButton>  \n          <LinkContainer to={nextUrl}>\n            <MButton disabled={nextUrl === \"\" || !isSuccess()}  startIcon={<NavigateNextIcon/>}>NEXT LEVEL</MButton>  \n          </LinkContainer>\n        </BottomNavigation>\n        {/* Pop-up hints */}\n        <Dialog open={descIndex != description.length} onClose={() => setDescIndex(description.length)}>\n          <DialogTitle style={{width:\"1000px\"}}>Tutorials</DialogTitle>\n          <DialogContent>\n            <Form>\n              <Form.Label>{title === \"1: Hello, world!\" ? renderTutorials() : description[descIndex]}</Form.Label>\n            </Form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={setPrevDesc} style={{marginRight:\"38%\", backgroundColor: descIndex == 0 ? '#CCC' : \"#307df7\", borderWidth:\"0px\"}}>←</Button>\n            <div style={{marginRight:\"38%\"}}>{descIndex + 1}/{description.length}</div>\n            <Button onClick={setNextDesc} style={{marginRight:\"2%\", backgroundColor: descIndex == description.length - 1 ? '#CCC' : \"#307df7\", borderWidth:\"0px\"}}>→</Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={isShowTruthTable} onClose={() => setShowTruthTable(false)}>\n          <DialogTitle>Truth Table</DialogTitle>\n          <DialogContent>\n            {<TruthTable premises={view.premises.map(([p, _]) => p)}/>}\n          </DialogContent>\n        </Dialog>\n        {renderSuccessDialogue}\n      </Context.Provider>\n    </DndProvider>\n  )\n\n}\n\nexport { LevelBoardComponent }"]},"metadata":{},"sourceType":"module"}