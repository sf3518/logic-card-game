{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Goals.tsx\";\nimport React, { useState } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport { PremiseComponent } from './Premise';\nimport SUCCESSFUL_ICON from '../../card_UI/correct.jpg';\nimport UNSUCCESSFUL_ICON from '../../card_UI/incorrect.jpg';\nimport { genTruthTableInStringForBTrees } from '../../server/gameApp/logicResolver/plainResolver';\nexport const GoalsComponent = ({\n  goals,\n  isSuccessful\n}) => {\n  const [showTable, setShowTable] = useState(goals.map(_ => false));\n\n  const setShowOneTable = (i, isShow) => {\n    setShowTable(showTable.map((old, j) => i == j ? isShow : old));\n  };\n\n  const renderSuccessful = i => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '30px',\n        height: '30px',\n        backgroundImage: \"url(\" + (isSuccessful[i] ? SUCCESSFUL_ICON : UNSUCCESSFUL_ICON) + \")\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const collectVars = i => {\n    const set = new Set();\n    goals[i].expr.filter(c => [\"A\", \"B\", \"C\", \"D\"].includes(c)).forEach(c => set.add(c));\n    return Array.from(set);\n  };\n\n  const renderShowTableButton = i => {\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: () => setShowOneTable(i, true),\n      style: {\n        marginLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }, \"Hint\");\n  };\n\n  const renderTruthTable = i => {\n    const vars = collectVars(i);\n    const truthTable = genTruthTableInStringForBTrees(vars, [goals[i].boolTree]);\n    return /*#__PURE__*/React.createElement(Table, {\n      onClick: () => setShowOneTable(i, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, truthTable.headers.map(it => /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"0.25rem\",\n        paddingBottom: \"0.25rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, it))), truthTable.body.map(row => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, row.map(it => /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"1px\",\n        paddingBottom: \"1px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }\n    }, it)))));\n  };\n\n  const showGoalInCards = goal => {\n    return /*#__PURE__*/React.createElement(PremiseComponent, {\n      scale: 0.5,\n      premiseIndex: -1,\n      isLocked: true,\n      cards: goal.expr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderGoal = i => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, renderSuccessful(i)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        verticalAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, showGoalKind(i + 1, goals[i]))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, showGoalInCards(goals[i])), /*#__PURE__*/React.createElement(\"td\", {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, showTable[i] ? renderTruthTable(i) : renderShowTableButton(i)));\n  };\n\n  const renderGoals = () => {\n    const result = [];\n\n    for (let i = 0; i < goals.length; i++) {\n      result.push(renderGoal(i));\n    }\n\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 12\n      }\n    }, result);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }\n  }, renderGoals());\n};\n\nfunction showGoalKind(index, goal) {\n  const showKind = goal.kind == 'prove' ? \"To prove\" : goal.kind == 'disprove' ? \"To disprove\" : goal.kind == 'equivalent' ? \"To be equivalent to\" : \"Make undecidable\";\n  return index + \". \" + showKind + \": \";\n}","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Goals.tsx"],"names":["React","useState","Table","Button","PremiseComponent","SUCCESSFUL_ICON","UNSUCCESSFUL_ICON","genTruthTableInStringForBTrees","GoalsComponent","goals","isSuccessful","showTable","setShowTable","map","_","setShowOneTable","i","isShow","old","j","renderSuccessful","width","height","backgroundImage","backgroundSize","backgroundRepeat","collectVars","set","Set","expr","filter","c","includes","forEach","add","Array","from","renderShowTableButton","marginLeft","renderTruthTable","vars","truthTable","boolTree","headers","it","paddingTop","paddingBottom","body","row","showGoalInCards","goal","renderGoal","verticalAlign","marginRight","showGoalKind","renderGoals","result","length","push","index","showKind","kind"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Goal } from '../../types'\nimport { Card, Table, Button } from 'react-bootstrap'\nimport { PremiseComponent } from './Premise'\nimport * as Types from '../../types'\nimport SUCCESSFUL_ICON from '../../card_UI/correct.jpg'\nimport UNSUCCESSFUL_ICON from '../../card_UI/incorrect.jpg'\nimport { genTruthTableInStringForBTrees } from '../../server/gameApp/logicResolver/plainResolver'\n\ninterface GoalsProps {\n  goals: Goal[],\n  isSuccessful: boolean[]\n}\n\nexport const GoalsComponent = ({\n  goals,\n  isSuccessful\n}: GoalsProps) => {\n\n  const [showTable, setShowTable] = useState(goals.map(_ => false))\n\n  const setShowOneTable = (i: number, isShow: boolean) => {\n    setShowTable(showTable.map((old, j) => i == j ? isShow : old))\n  }\n\n  const renderSuccessful = (i: number) => {\n    return <div style={{ \n      width: '30px', \n      height: '30px', \n      backgroundImage: \"url(\" + (isSuccessful[i] ? SUCCESSFUL_ICON : UNSUCCESSFUL_ICON) + \")\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n    }}></div>\n  }\n\n  const collectVars = (i: number): Types.Card[] => {\n    const set = new Set<Types.Card>()\n    goals[i].expr.filter(c => [\"A\", \"B\", \"C\", \"D\"].includes(c)).forEach(c => set.add(c))\n    return Array.from(set)\n  }\n\n  const renderShowTableButton = (i: number) => {\n    return <Button onClick={() => setShowOneTable(i, true)} style={{ marginLeft: \"20px\"}}>Hint</Button>\n  }\n\n  const renderTruthTable = (i: number) => {\n    const vars = collectVars(i)\n    const truthTable = genTruthTableInStringForBTrees(vars, [goals[i].boolTree]) \n    return (\n      <Table onClick={() => setShowOneTable(i, false)}>\n        <thead>\n          {truthTable.headers.map(it => <td style={{ paddingTop: \"0.25rem\", paddingBottom: \"0.25rem\", }}>{it}</td>)}\n        </thead>\n        {truthTable.body.map(row => <tr>\n          {row.map(it => <td style={{ paddingTop: \"1px\", paddingBottom: \"1px\", }}>{it}</td>)}\n        </tr>)}\n      </Table>\n    )\n  }\n\n  const showGoalInCards = (goal: Goal): JSX.Element => {\n    return <PremiseComponent \n      scale={0.5}\n      premiseIndex={-1}\n      isLocked={true}\n      cards={goal.expr}  \n    />\n  }\n\n  const renderGoal = (i: number) => {\n    return <tr>\n      <td>{renderSuccessful(i)}</td>\n      <td style={{verticalAlign: \"center\"}}>{\n        <h4 style={{ marginLeft: \"10px\", marginRight: \"10px\"}}>{\n          showGoalKind(i + 1, goals[i])\n        }</h4>\n      }</td>\n      <td>{showGoalInCards(goals[i])}</td>\n      <td align='right'>{showTable[i] ? renderTruthTable(i) : renderShowTableButton(i)}</td>\n    </tr>\n  }\n\n  const renderGoals = () => {\n    const result: JSX.Element[] = []\n    for(let i = 0; i < goals.length; i++) {\n      result.push(renderGoal(i))\n    }\n    return <table>{result}</table>\n  }\n\nreturn <div>{\n    renderGoals()\n  }</div>\n\n}\n\nfunction showGoalKind(index: number, goal: Goal): string {\n  const showKind = goal.kind == 'prove' ? \"To prove\" \n                 : goal.kind == 'disprove' ? \"To disprove\" \n                 : goal.kind == 'equivalent' ? \"To be equivalent to\"\n                 : \"Make undecidable\"\n  return index + \". \" + showKind + \": \"\n}"]},"metadata":{},"sourceType":"module"}