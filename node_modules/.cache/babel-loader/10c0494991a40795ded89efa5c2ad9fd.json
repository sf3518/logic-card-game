{"ast":null,"code":"import Axios from\"axios\";import{Paths}from\"../routesPaths\";import sha256 from\"crypto-js/sha256\";var salt=\"sallty\";function hash(input){return sha256(salt+input).toString();}export function authHeader(){var _localStorage$getItem;// return authorization header with jwt token\nvar user=JSON.parse((_localStorage$getItem=localStorage.getItem('user'))!==null&&_localStorage$getItem!==void 0?_localStorage$getItem:\"null\");if(user&&user.token){return{'Authorization':'Bearer '+user.token};}else{return{};}}export var userService={login:login,logout:logout,register:register};function login(username,password,onSetUser,onError){var requestOptions={headers:{'Content-Type':'application/json'}};var data={username:username,password:hash(password)};return Axios.post(Paths.userLogin,data,requestOptions).then(function(resp){return resp.data;}).then(function(user){// store user details and jwt token in local storage to keep user logged in between page refreshes\nonSetUser(user);return user;}).catch(function(err){onError();return undefined;});}function logout(onSetUser){// remove user from local storage to log user out\nonSetUser(undefined);}function register(username,email,password,onSetUser){var requestOptions={headers:{'Content-Type':'application/json'}};var data={username:username,email:email,password:hash(password)};return Axios.post(Paths.userRegister,data,requestOptions).then(function(resp){return resp.data;});}","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/services/user.service.ts"],"names":["Axios","Paths","sha256","salt","hash","input","toString","authHeader","user","JSON","parse","localStorage","getItem","token","userService","login","logout","register","username","password","onSetUser","onError","requestOptions","headers","data","post","userLogin","then","resp","catch","err","undefined","email","userRegister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAA0C,OAA1C,CAEA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CAIA,GAAMC,CAAAA,IAAI,CAAG,QAAb,CAEA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqC,CACnC,MAAOH,CAAAA,MAAM,CAACC,IAAI,CAAGE,KAAR,CAAN,CAAqBC,QAArB,EAAP,CACD,CAED,MAAO,SAASC,CAAAA,UAAT,EAAsB,2BAC3B;AACA,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,wBAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,+DAA2C,MAA3C,CAAX,CAEA,GAAIJ,IAAI,EAAIA,IAAI,CAACK,KAAjB,CAAwB,CACpB,MAAO,CAAE,gBAAiB,UAAYL,IAAI,CAACK,KAApC,CAAP,CACH,CAFD,IAEO,CACH,MAAO,EAAP,CACH,CACF,CAED,MAAO,IAAMC,CAAAA,WAAW,CAAG,CACvBC,KAAK,CAALA,KADuB,CAEvBC,MAAM,CAANA,MAFuB,CAGvBC,QAAQ,CAARA,QAHuB,CAApB,CAMP,QAASF,CAAAA,KAAT,CACEG,QADF,CAEEC,QAFF,CAGEC,SAHF,CAIEC,OAJF,CAKE,CACE,GAAMC,CAAAA,cAAkC,CAAG,CACvCC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAD8B,CAA3C,CAIA,GAAMC,CAAAA,IAAqB,CAAG,CAC5BN,QAAQ,CAAEA,QADkB,CAE5BC,QAAQ,CAAEf,IAAI,CAACe,QAAD,CAFc,CAA9B,CAKA,MAAOnB,CAAAA,KAAK,CAACyB,IAAN,CAAqBxB,KAAK,CAACyB,SAA3B,CAAsCF,IAAtC,CAA4CF,cAA5C,EACFK,IADE,CACG,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACJ,IAAT,EADP,EAEFG,IAFE,CAEG,SAAAnB,IAAI,CAAI,CACV;AACAY,SAAS,CAACZ,IAAD,CAAT,CACA,MAAOA,CAAAA,IAAP,CACH,CANE,EAOFqB,KAPE,CAOI,SAAAC,GAAG,CAAI,CAAET,OAAO,GAAI,MAAOU,CAAAA,SAAP,CAAkB,CAP1C,CAAP,CAQH,CAED,QAASf,CAAAA,MAAT,CAAgBI,SAAhB,CAAoC,CAChC;AACAA,SAAS,CAACW,SAAD,CAAT,CACH,CAED,QAASd,CAAAA,QAAT,CACEC,QADF,CAEEc,KAFF,CAGEb,QAHF,CAIEC,SAJF,CAKE,CACE,GAAME,CAAAA,cAAc,CAAG,CACnBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CADU,CAAvB,CAIA,GAAMC,CAAAA,IAAoB,CAAG,CAC3BN,QAAQ,CAAEA,QADiB,CAE3Bc,KAAK,CAAEA,KAFoB,CAG3Bb,QAAQ,CAAEf,IAAI,CAACe,QAAD,CAHa,CAA7B,CAMA,MAAOnB,CAAAA,KAAK,CAACyB,IAAN,CAAqBxB,KAAK,CAACgC,YAA3B,CAAyCT,IAAzC,CAA+CF,cAA/C,EACJK,IADI,CACC,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACJ,IAAT,EADL,CAAP,CAEH","sourcesContent":["import Axios, { AxiosRequestConfig } from \"axios\";\nimport { UserResponse, UserCredential, LoginCredential, UserInfo } from \"../types\";\nimport { Paths } from \"../routesPaths\";\nimport sha256 from \"crypto-js/sha256\";\n\ntype SetUser = (user: UserInfo | undefined) => void\n\nconst salt = \"sallty\"\n\nfunction hash(input: string): string {\n  return sha256(salt + input).toString()\n}\n\nexport function authHeader() {\n  // return authorization header with jwt token\n  let user = JSON.parse(localStorage.getItem('user') ?? \"null\");\n\n  if (user && user.token) {\n      return { 'Authorization': 'Bearer ' + user.token };\n  } else {\n      return {};\n  }\n}\n\nexport const userService = {\n    login,\n    logout,\n    register,\n};\n\nfunction login(\n  username: string, \n  password: string, \n  onSetUser: SetUser,\n  onError: () => void\n) {\n    const requestOptions: AxiosRequestConfig = {\n        headers: { 'Content-Type': 'application/json' },\n    }\n\n    const data: LoginCredential = {\n      username: username,\n      password: hash(password)\n    }\n\n    return Axios.post<UserInfo>(Paths.userLogin, data, requestOptions)\n        .then(resp => resp.data)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            onSetUser(user)\n            return user;\n        })\n        .catch(err => { onError(); return undefined })\n}\n\nfunction logout(onSetUser: SetUser) {\n    // remove user from local storage to log user out\n    onSetUser(undefined)\n}\n\nfunction register(\n  username: string, \n  email: string,\n  password: string,\n  onSetUser: SetUser\n) {\n    const requestOptions = {\n        headers: { 'Content-Type': 'application/json' },\n    };\n\n    const data: UserCredential = {\n      username: username, \n      email: email, \n      password: hash(password)\n    }\n\n    return Axios.post<UserInfo>(Paths.userRegister, data, requestOptions)\n      .then(resp => resp.data)\n}\n"]},"metadata":{},"sourceType":"module"}