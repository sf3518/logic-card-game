{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/editor/EditorAllCards.tsx\";\nimport React, { useContext } from 'react';\nimport { allCards as AllCards } from './editorUtils';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { CardComponent } from '../game/Card';\nimport { EditorContext } from './LevelEditor';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Container, Tooltip } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 400,\n    height: 200\n  }\n}));\nexport const EditorAllCards = ({\n  onSelect,\n  onDrop\n}) => {\n  const classes = useStyles();\n  const context = useContext(EditorContext);\n  const onSelection = context.state.kind == 'select';\n\n  const selected = card => context.state.kind == 'select' && context.state.select.kind == 'all' && context.state.select.card == card;\n\n  const renderAllCards = () => /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Click any card to select it\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 140,\n    className: classes.gridList,\n    cols: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, AllCards.map(card => /*#__PURE__*/React.createElement(GridListTile, {\n    key: card,\n    cols: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardComponent, {\n    cardSymbol: card,\n    scale: 1,\n    tag: undefined,\n    isSelected: selected(card),\n    onClick: () => onSelect(card),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))))));\n\n  const renderDustBin = () => /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Click me to delete the selected card\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: classes.gridList,\n    style: {\n      backgroundColor: '#FA6363',\n      color: 'white',\n      alignItems: 'center'\n    },\n    onClick: onDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    style: {\n      fontSize: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  })));\n\n  return onSelection ? renderDustBin() : renderAllCards();\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/editor/EditorAllCards.tsx"],"names":["React","useContext","allCards","AllCards","makeStyles","GridList","GridListTile","CardComponent","EditorContext","DeleteIcon","Container","Tooltip","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","EditorAllCards","onSelect","onDrop","classes","context","onSelection","state","kind","selected","card","select","renderAllCards","map","undefined","renderDustBin","color","alignItems","fontSize"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { Card } from '../../types'\n\nimport { allCards as AllCards} from './editorUtils'\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { CardComponent } from '../game/Card';\nimport { EditorContext } from './LevelEditor';\n\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { Container, Tooltip } from '@material-ui/core';\n\ninterface NewCardsProps {\n  onSelect: (c: Card) => void\n  onDrop: () => void\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 400,\n    height: 200,\n  },\n}));\n\n\nexport const EditorAllCards = ({\n  onSelect, \n  onDrop\n}: NewCardsProps) => {\n\n  const classes = useStyles()\n  const context = useContext(EditorContext)\n\n  const onSelection = context.state.kind == 'select'\n\n  const selected = (card: Card) => context.state.kind == 'select'\n    && context.state.select.kind == 'all'\n    && context.state.select.card == card\n\n  const renderAllCards = () => <Tooltip title=\"Click any card to select it\" arrow>\n    <div className={classes.root}>\n      <GridList cellHeight={140} className={classes.gridList} cols={4}>\n        {AllCards.map(card => \n          <GridListTile key={card} cols={1}>\n            <CardComponent \n              cardSymbol={card} \n              scale={1} \n              tag={undefined} \n              isSelected={selected(card)} \n              onClick={() => onSelect(card)}\n            />\n          </GridListTile>\n        )}\n      </GridList>\n    </div>\n  </Tooltip>\n\n  const renderDustBin = () => <Tooltip title=\"Click me to delete the selected card\" arrow >\n    <Container \n      className={classes.gridList} \n      style={{ backgroundColor: '#FA6363', color: 'white', alignItems: 'center'}} \n      onClick={onDrop}>\n      <DeleteIcon style={{ fontSize: 100 }}/>\n    </Container>\n  </Tooltip>\n\n  return onSelection ? renderDustBin() : renderAllCards() \n}"]},"metadata":{},"sourceType":"module"}