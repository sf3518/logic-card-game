{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/auth/Register.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport MButton from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport { userService } from \"../../services/user.service\";\nimport { LoginContext } from \"../../LoginContext\";\nimport { Divider, LinearProgress } from \"@material-ui/core\";\nexport const RegisterDialogue = ({\n  open,\n  onClose,\n  onSwitchToLogin\n}) => {\n  const logins = useContext(LoginContext);\n  const [isUsernameValid, setUsernameValid] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [isEmailValid, setEmailValid] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [isPasswordValid, setPasswordValid] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const [isFirstTime, setFirstTime] = useState(true);\n\n  const checkEmail = () => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const ok = re.test(String(email).toLowerCase());\n    setEmailValid(ok);\n    return ok;\n  };\n\n  const checkUsername = () => {\n    const ok = username.length >= 2 && username.length <= 50 && !username.includes(\";\");\n    setUsernameValid(ok);\n    return ok;\n  };\n\n  const checkPassword = () => {\n    const ok = password.length >= 4;\n    setPasswordValid(ok);\n    return ok;\n  };\n\n  const submit = () => {\n    if (checkEmail() && checkUsername() && checkPassword()) {\n      setLoading(true);\n      userService.register(username, email, password, logins.toggleSetUser).then(res => {\n        if (res) {\n          userService.login(username, password, logins.toggleSetUser, () => alert(\"login error\")).then(resp => {\n            setLoading(false);\n\n            if (resp) {\n              onClose();\n            }\n          });\n        } else {\n          alert(\"Register error\");\n          setLoading(false);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    PaperProps: {\n      style: {\n        backgroundColor: \"rgba(255, 255, 255, .70)\",\n        boxShadow: \"inset 0 0 1rem 0 rgba(0, 0, 0, .2)\",\n        borderRadius: \"5px\",\n        backdropFilter: \"blur(7px)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Username\",\n    onChange: event => setUsername(event.target.value),\n    error: !isUsernameValid && !isFirstTime,\n    helperText: isUsernameValid || isFirstTime ? \"\" : \"Username must contain 2 ~ 50 valid characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Email\",\n    onChange: event => setEmail(event.target.value),\n    error: !isEmailValid && !isFirstTime,\n    helperText: isEmailValid || isFirstTime ? \"\" : \"Must be a valid email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-password-input\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    onChange: event => setPassword(event.target.value),\n    error: !isPasswordValid && !isFirstTime,\n    helperText: isPasswordValid || isFirstTime ? \"\" : \"Password must contain more than 4 characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"right\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"green\",\n      color: \"white\"\n    },\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"SUBMIT\"), isLoading ? /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 24\n    }\n  }) : undefined)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      justifyItems: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Already have an account?\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    onClick: onSwitchToLogin,\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/auth/Register.tsx"],"names":["React","useContext","useState","Dialog","DialogTitle","DialogContent","TextField","MButton","DialogActions","Grid","userService","LoginContext","Divider","LinearProgress","RegisterDialogue","open","onClose","onSwitchToLogin","logins","isUsernameValid","setUsernameValid","username","setUsername","isEmailValid","setEmailValid","email","setEmail","isPasswordValid","setPasswordValid","password","setPassword","isLoading","setLoading","isFirstTime","setFirstTime","checkEmail","re","ok","test","String","toLowerCase","checkUsername","length","includes","checkPassword","submit","register","toggleSetUser","then","res","login","alert","resp","style","backgroundColor","boxShadow","borderRadius","backdropFilter","event","target","value","textAlign","marginTop","width","color","undefined","justifyItems","alignItems","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,mBAAxC;AAQA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,IAD+B;AAE/BC,EAAAA,OAF+B;AAG/BC,EAAAA;AAH+B,CAAD,KAId;AAChB,QAAMC,MAAM,GAAGjB,UAAU,CAACU,YAAD,CAAzB;AAEA,QAAM,CAACQ,eAAD,EAAkBC,gBAAlB,IAAsClB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,YAAD,EAAeC,aAAf,IAAgCtB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACyB,eAAD,EAAkBC,gBAAlB,IAAsC1B,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6B,SAAD,EAAYC,UAAZ,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC+B,WAAD,EAAcC,YAAd,IAA8BhC,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMiC,UAAU,GAAG,MAAM;AACvB,UAAMC,EAAE,GAAG,yJAAX;AACA,UAAMC,EAAE,GAAGD,EAAE,CAACE,IAAH,CAAQC,MAAM,CAACd,KAAD,CAAN,CAAce,WAAd,EAAR,CAAX;AACAhB,IAAAA,aAAa,CAACa,EAAD,CAAb;AACA,WAAOA,EAAP;AACD,GALD;;AAOA,QAAMI,aAAa,GAAG,MAAM;AAC1B,UAAMJ,EAAE,GACNhB,QAAQ,CAACqB,MAAT,IAAmB,CAAnB,IAAwBrB,QAAQ,CAACqB,MAAT,IAAmB,EAA3C,IAAiD,CAACrB,QAAQ,CAACsB,QAAT,CAAkB,GAAlB,CADpD;AAEAvB,IAAAA,gBAAgB,CAACiB,EAAD,CAAhB;AACA,WAAOA,EAAP;AACD,GALD;;AAOA,QAAMO,aAAa,GAAG,MAAM;AAC1B,UAAMP,EAAE,GAAGR,QAAQ,CAACa,MAAT,IAAmB,CAA9B;AACAd,IAAAA,gBAAgB,CAACS,EAAD,CAAhB;AACA,WAAOA,EAAP;AACD,GAJD;;AAMA,QAAMQ,MAAM,GAAG,MAAM;AACnB,QAAIV,UAAU,MAAMM,aAAa,EAA7B,IAAmCG,aAAa,EAApD,EAAwD;AACtDZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAtB,MAAAA,WAAW,CACRoC,QADH,CACYzB,QADZ,EACsBI,KADtB,EAC6BI,QAD7B,EACuCX,MAAM,CAAC6B,aAD9C,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAIA,GAAJ,EAAS;AACPvC,UAAAA,WAAW,CACRwC,KADH,CACS7B,QADT,EACmBQ,QADnB,EAC6BX,MAAM,CAAC6B,aADpC,EACmD,MAC/CI,KAAK,CAAC,aAAD,CAFT,EAIGH,IAJH,CAISI,IAAD,IAAU;AACdpB,YAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,gBAAIoB,IAAJ,EAAU;AACRpC,cAAAA,OAAO;AACR;AACF,WATH;AAUD,SAXD,MAWO;AACLmC,UAAAA,KAAK,CAAC,gBAAD,CAAL;AACAnB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,OAlBH;AAmBD;AACF,GAvBD;;AAyBA,sBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEjB,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,uBAAgB,mBAHlB;AAIE,IAAA,UAAU,EAAE;AACVqC,MAAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,0BADZ;AAELC,QAAAA,SAAS,EAAE,oCAFN;AAGLC,QAAAA,YAAY,EAAE,KAHT;AAILC,QAAAA,cAAc,EAAE;AAJX;AADG,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbF,eAcE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,EAAE,EAAC,mBAFL;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,QAAQ,EAAGC,KAAD,IAAWpC,WAAW,CAACoC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJlC;AAKE,IAAA,KAAK,EAAE,CAACzC,eAAD,IAAoB,CAACc,WAL9B;AAME,IAAA,UAAU,EACRd,eAAe,IAAIc,WAAnB,GACI,EADJ,GAEI,+CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,EAAE,EAAC,mBAFL;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,QAAQ,EAAGyB,KAAD,IAAWhC,QAAQ,CAACgC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJ/B;AAKE,IAAA,KAAK,EAAE,CAACrC,YAAD,IAAiB,CAACU,WAL3B;AAME,IAAA,UAAU,EACRV,YAAY,IAAIU,WAAhB,GAA8B,EAA9B,GAAmC,+BAPvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,EAAE,EAAC,yBAFL;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,YAAY,EAAC,kBALf;AAME,IAAA,QAAQ,EAAGyB,KAAD,IAAW5B,WAAW,CAAC4B,KAAK,CAACC,MAAN,CAAaC,KAAd,CANlC;AAOE,IAAA,KAAK,EAAE,CAACjC,eAAD,IAAoB,CAACM,WAP9B;AAQE,IAAA,UAAU,EACRN,eAAe,IAAIM,WAAnB,GACI,EADJ,GAEI,8CAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BF,eA4CE;AAAK,IAAA,KAAK,EAAE;AAAE4B,MAAAA,SAAS,EAAE,OAAb;AAAsBC,MAAAA,SAAS,EAAE;AAAjC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBT,MAAAA,eAAe,EAAE,OAAlC;AAA2CU,MAAAA,KAAK,EAAE;AAAlD,KADT;AAEE,IAAA,OAAO,EAAEnB,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOGd,SAAS,gBAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAwBkC,SAPpC,CA5CF,CAdF,eAoEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApEF,eAqEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,QAAhB;AAA0BC,MAAAA,UAAU,EAAE;AAAtC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CAJF,eAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAElD,eAAlB;AAAmC,IAAA,KAAK,EAAE;AAAEmD,MAAAA,MAAM,EAAE;AAAV,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAPF,CADF,CArEF,CADF;AAuFD,CApJM","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport MButton from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport { userService } from \"../../services/user.service\";\nimport { LoginContext } from \"../../LoginContext\";\nimport { Divider, LinearProgress } from \"@material-ui/core\";\n\ninterface LoginProps {\n  open: boolean;\n  onClose: () => void;\n  onSwitchToLogin: () => void;\n}\n\nexport const RegisterDialogue = ({\n  open,\n  onClose,\n  onSwitchToLogin,\n}: LoginProps) => {\n  const logins = useContext(LoginContext);\n\n  const [isUsernameValid, setUsernameValid] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [isEmailValid, setEmailValid] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [isPasswordValid, setPasswordValid] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const [isFirstTime, setFirstTime] = useState(true);\n\n  const checkEmail = () => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const ok = re.test(String(email).toLowerCase());\n    setEmailValid(ok);\n    return ok;\n  };\n\n  const checkUsername = () => {\n    const ok =\n      username.length >= 2 && username.length <= 50 && !username.includes(\";\");\n    setUsernameValid(ok);\n    return ok;\n  };\n\n  const checkPassword = () => {\n    const ok = password.length >= 4;\n    setPasswordValid(ok);\n    return ok;\n  };\n\n  const submit = () => {\n    if (checkEmail() && checkUsername() && checkPassword()) {\n      setLoading(true);\n      userService\n        .register(username, email, password, logins.toggleSetUser)\n        .then((res) => {\n          if (res) {\n            userService\n              .login(username, password, logins.toggleSetUser, () =>\n                alert(\"login error\")\n              )\n              .then((resp) => {\n                setLoading(false);\n                if (resp) {\n                  onClose();\n                }\n              });\n          } else {\n            alert(\"Register error\");\n            setLoading(false);\n          }\n        });\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      PaperProps={{\n        style: {\n          backgroundColor: \"rgba(255, 255, 255, .70)\",\n          boxShadow: \"inset 0 0 1rem 0 rgba(0, 0, 0, .2)\",\n          borderRadius: \"5px\",\n          backdropFilter: \"blur(7px)\",\n        },\n      }}\n    >\n      <DialogTitle id=\"form-dialog-title\">Sign Up</DialogTitle>\n      <DialogContent>\n        <div>\n          <TextField\n            required\n            id=\"standard-required\"\n            label=\"Username\"\n            onChange={(event) => setUsername(event.target.value)}\n            error={!isUsernameValid && !isFirstTime}\n            helperText={\n              isUsernameValid || isFirstTime\n                ? \"\"\n                : \"Username must contain 2 ~ 50 valid characters\"\n            }\n          />\n        </div>\n        <div>\n          <TextField\n            required\n            id=\"standard-required\"\n            label=\"Email\"\n            onChange={(event) => setEmail(event.target.value)}\n            error={!isEmailValid && !isFirstTime}\n            helperText={\n              isEmailValid || isFirstTime ? \"\" : \"Must be a valid email address\"\n            }\n          />\n        </div>\n\n        <div>\n          <TextField\n            required\n            id=\"standard-password-input\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n            error={!isPasswordValid && !isFirstTime}\n            helperText={\n              isPasswordValid || isFirstTime\n                ? \"\"\n                : \"Password must contain more than 4 characters\"\n            }\n          />\n        </div>\n        <div style={{ textAlign: \"right\", marginTop: \"10px\" }}>\n          <MButton\n            style={{ width: \"100%\", backgroundColor: \"green\", color: \"white\" }}\n            onClick={submit}\n          >\n            SUBMIT\n          </MButton>\n          {isLoading ? <LinearProgress /> : undefined}\n        </div>\n      </DialogContent>\n      <Divider />\n      <DialogActions>\n        <Grid\n          container\n          style={{ justifyItems: \"center\", alignItems: \"center\" }}\n        >\n          <Grid item xs={9}>\n            <span>Already have an account?</span>\n          </Grid>\n          <Grid item xs={3}>\n            <MButton onClick={onSwitchToLogin} style={{ height: \"100%\" }}>\n              Login\n            </MButton>\n          </Grid>\n        </Grid>\n      </DialogActions>\n    </Dialog>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}