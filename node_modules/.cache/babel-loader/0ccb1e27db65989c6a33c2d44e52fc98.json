{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/game/LevelBoard.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { PremiseComponent } from './Premise';\nimport { HandCardAreaComponent } from './HandCard';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Axios from 'axios';\nimport { Paths } from '../../routesPaths';\nimport { doActionToView, getGoalStates, fixInfinityNumber } from '../../game/views';\nimport { Table, Button, Form } from 'react-bootstrap';\nimport Context from './gameContext';\nimport { playCardsToAction, discardAction } from '../../game/actions';\nimport { variable } from '../../server/gameApp/logicResolver/bools';\nimport { GoalsComponent } from './Goals';\nimport { useParams } from 'react-router';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { AppBar, Toolbar, Typography, Button as MButton, IconButton, Container, Grid, Drawer, List, Divider, ListItem, ListItemText, BottomNavigation, Dialog, Slide, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport './Board.css';\nimport { genTruthTableInStringForBTrees } from '../../server/gameApp/logicResolver/plainResolver';\nimport { parsePremiseSafe } from '../../server/gameApp/game/premise';\nimport { useStyles } from './appbar';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }));\n});\n\nfunction initialGameView(playerVar) {\n  return {\n    playerVar: playerVar,\n    handCardWithCount: [],\n    discardPile: [],\n    premises: [],\n    deckCount: 0,\n    goals: [{\n      kind: 'prove',\n      expr: [playerVar],\n      boolTree: variable(playerVar)\n    }]\n  };\n}\n\nconst playAs = \"A\"; // Game board\n\nconst LevelBoardComponent = () => {\n  // read router parameter\n  const params = useParams();\n  const levelID = Number(params.levelID);\n  console.log(params.levelID); // Actions been taken in this round\n\n  const [actions, setActions] = useState([]); // Which hand card is selected at now \n  // -1 if no card is selected\n\n  const [handSelected, setHandSelected] = useState(-1); // History of views in this round\n\n  const [historyViews, setHV] = useState([initialGameView(\"A\")]); // Title and description for the current level\n\n  const [[title, description], setTexts] = useState([\"title\", []]); // Whether this level has a next level\n\n  const [hasNext] = useState(true); // Whether to show the right hand side drawer\n\n  const [isShowDrawer, setShowDrawer] = useState(false);\n  const [isShownSuccessDialogue, setShownSuccessDialogue] = useState(false);\n  const [isShowTruthTable, setShowTruthTable] = useState(false);\n  const [bottomNavIndex, setBottomNavIndex] = useState(0);\n  const [nextLevelUrlTail, setNextLevelUrlTail] = useState(\"\"); // which description to display, if descIndex = description.length, no display\n\n  const [descIndex, setDescIndex] = useState(description.length);\n  const view = historyViews[historyViews.length - 1];\n  const [goalStates, setGoalStates] = useState(view.goals.map(_ => false));\n  const classes = useStyles();\n  const [allVars, setAllVars] = useState([]); // Refresh from server at the very beginning\n\n  useEffect(() => {\n    fetchInitLevelFromServer();\n    fetchNextLevelUrlTail();\n    setDescIndex(0);\n    setShownSuccessDialogue(false);\n  }, [params, levelID]); // Recalculate variables  \n\n  useEffect(() => {\n    const cards = new Set();\n\n    const addVars = p => p.filter(it => [\"A\", \"B\", \"C\", \"D\"].includes(it)).forEach(c => cards.add(c));\n\n    view.premises.forEach(([p, _]) => addVars(p));\n    addVars(view.handCardWithCount.map(([c, _]) => c));\n    setAllVars(Array.from(cards));\n  }, [historyViews]);\n\n  const isSuccess = () => goalStates.reduce((a, b) => a && b);\n\n  const unselectHandCard = () => setHandSelected(-1);\n\n  const setHistoryViews = newViews => {\n    setHV(newViews);\n    setGoalStates(getGoalStates(newViews[newViews.length - 1]));\n  };\n\n  const pushAction = action => {\n    setActions(actions.concat(action));\n  };\n\n  const popAction = () => {\n    setActions(actions.slice(0, actions.length - 1));\n  };\n\n  const pushHistoryView = view => {\n    setHistoryViews(historyViews.concat(view));\n  };\n\n  const popHistoryView = () => {\n    setHistoryViews(historyViews.slice(0, historyViews.length - 1));\n  };\n\n  const doAction = async action => {\n    const newView = doActionToView(view, action);\n    pushAction(action);\n    pushHistoryView(newView);\n    unselectHandCard();\n  };\n\n  const undoAction = async () => {\n    if (actions.length > 0) {\n      popAction();\n      popHistoryView();\n    }\n  };\n\n  const setNextDesc = () => {\n    if (descIndex == description.length) {\n      setDescIndex(0);\n    } else {\n      setDescIndex(descIndex + 1);\n    }\n  };\n\n  const toggleDrawer = open => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setShowDrawer(open);\n  };\n\n  const fetchInitLevelFromServer = () => {\n    const config = {\n      params: {\n        levelID: levelID\n      }\n    };\n    Axios.get(Paths.levelRequest, config).then(res => {\n      setHistoryViews([fixInfinityNumber(res.data.view)]);\n      setTexts([res.data.title, res.data.description]);\n    });\n  };\n\n  const fetchNextLevelUrlTail = () => {\n    const nextLevel = levelID + 1;\n    const config = {\n      params: {\n        levelID: nextLevel\n      }\n    };\n    Axios.get(Paths.levelBelongToSection, config).then(res => setNextLevelUrlTail(res.data + '/' + nextLevel));\n  };\n\n  const submitAnswerToServer = () => {\n    const config = {\n      params: {\n        isSuccess: isSuccess()\n      }\n    };\n    Axios.get(Paths.levelSubmit, config).then(res => {\n      alert(res.data.msg);\n    });\n  };\n\n  const renderSuccessDialogue = /*#__PURE__*/React.createElement(Dialog, {\n    open: !isShownSuccessDialogue && isSuccess(),\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setShownSuccessDialogue(true),\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    style: {\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    style: {\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, \"LEVEL PASSED!\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, \"You have completed this challenge!\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    onClick: () => setShownSuccessDialogue(true),\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, \"CLOSE\"), /*#__PURE__*/React.createElement(LinkContainer, {\n    to: \"/level/\" + nextLevelUrlTail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, \"NEXT LEVEL\"))));\n\n  const renderPremises = () => {\n    const result = [];\n\n    for (let i = 0; i < 4; i++) {\n      var _view$premises$i;\n\n      const [premise, isLocked] = (_view$premises$i = view.premises[i]) !== null && _view$premises$i !== void 0 ? _view$premises$i : [[], true];\n      result.push( /*#__PURE__*/React.createElement(PremiseComponent, {\n        cards: premise,\n        scale: 1,\n        isLocked: isLocked,\n        isProofPremise: true,\n        premiseIndex: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (view.premises.length == 1) {\n      [result[0], result[1]] = [result[1], result[0]];\n    } else if (view.premises.length == 2) {\n      [result[1], result[2], result[0]] = [result[0], result[1], result[2]];\n    }\n\n    return /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 7\n      }\n    }, result.map(it => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 27\n      }\n    }, it)));\n  };\n\n  const renderHandCardArea = () => {\n    return /*#__PURE__*/React.createElement(HandCardAreaComponent, {\n      playerVar: playAs,\n      cards: view.handCardWithCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderGoals = () => {\n    return /*#__PURE__*/React.createElement(GoalsComponent, {\n      goals: view.goals,\n      isSuccessful: goalStates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderPremisesTruthTable = () => {\n    const btrees = view.premises.map(([p, _]) => parsePremiseSafe(p, allVars));\n    const table = genTruthTableInStringForBTrees(allVars, btrees);\n    return /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }, table.headers.map(it => /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"0.25rem\",\n        paddingBottom: \"0.25rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 34\n      }\n    }, it))), table.body.map(row => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 30\n      }\n    }, row.map(it => /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"1px\",\n        paddingBottom: \"1px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 24\n      }\n    }, it)))));\n  };\n\n  const renderDrawerContent = () => {\n    const menu = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: \"ref\",\n      onClick: fetchInitLevelFromServer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Refresh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: \"sub\",\n      onClick: submitAnswerToServer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LinkContainer, {\n      to: '/levelPage/' + params.sid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: \"levelPage\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Back to Level Page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(LinkContainer, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: \"menu\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Back to Main Menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    })))));\n    return menu;\n  };\n\n  return /*#__PURE__*/React.createElement(DndProvider, {\n    backend: HTML5Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      playerVar: playAs,\n      handSelected: handSelected,\n      handCardSelected: handSelected >= 0 ? view.handCardWithCount[handSelected][0] : undefined,\n      unselectHand: unselectHandCard,\n      pickHandCardCallback: handIndex => {\n        setHandSelected(handIndex);\n      },\n      moveHandCardToPremise: (premiseId, inPremiseIndex) => {\n        doAction(playCardsToAction(playAs, handSelected, [premiseId, inPremiseIndex]));\n      },\n      discardPickedHandCard: () => {\n        doAction(discardAction(playAs, handSelected));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    style: {\n      backgroundColor: '#F2994A'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggleDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    open: isShowDrawer,\n    onClose: toggleDrawer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, renderDrawerContent()))), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  }, renderPremises()), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xl\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }, renderHandCardArea()), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, renderGoals()))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BottomNavigation, {\n    value: bottomNavIndex,\n    showLabels: true,\n    className: classes.root,\n    style: {\n      width: '100%',\n      position: 'sticky',\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 31\n      }\n    }),\n    onClick: undoAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }\n  }, \"UNDO ONE STEP\"), /*#__PURE__*/React.createElement(MButton, {\n    disabled: description.length == 0,\n    startIcon: /*#__PURE__*/React.createElement(FeedbackIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 67\n      }\n    }),\n    onClick: setNextDesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }, \"SHOW HINTS\"), /*#__PURE__*/React.createElement(MButton, {\n    startIcon: /*#__PURE__*/React.createElement(FeedbackIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 31\n      }\n    }),\n    onClick: () => setShowTruthTable(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }, \"SHOW TRUTH TABLE\"), /*#__PURE__*/React.createElement(LinkContainer, {\n    to: \"/level/\" + nextLevelUrlTail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    disabled: !hasNext || !isSuccess(),\n    startIcon: /*#__PURE__*/React.createElement(NavigateNextIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 70\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, \"NEXT LEVEL\"))), /*#__PURE__*/React.createElement(Dialog, {\n    open: descIndex != description.length,\n    onClose: () => setDescIndex(description.length),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 11\n    }\n  }, \"Hint\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }, description[descIndex]))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: setNextDesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }, \"\\u2192\"))), /*#__PURE__*/React.createElement(Dialog, {\n    open: isShowTruthTable,\n    onClose: () => setShowTruthTable(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }\n  }, \"Truth Table\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 11\n    }\n  }, renderPremisesTruthTable())), renderSuccessDialogue));\n};\n\nexport { LevelBoardComponent };","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/game/LevelBoard.tsx"],"names":["React","useState","useEffect","PremiseComponent","HandCardAreaComponent","DndProvider","HTML5Backend","Axios","Paths","doActionToView","getGoalStates","fixInfinityNumber","Table","Button","Form","Context","playCardsToAction","discardAction","variable","GoalsComponent","useParams","LinkContainer","AppBar","Toolbar","Typography","MButton","IconButton","Container","Grid","Drawer","List","Divider","ListItem","ListItemText","BottomNavigation","Dialog","Slide","DialogTitle","DialogContent","DialogContentText","DialogActions","MenuIcon","UndoIcon","FeedbackIcon","NavigateNextIcon","genTruthTableInStringForBTrees","parsePremiseSafe","useStyles","Transition","forwardRef","props","ref","initialGameView","playerVar","handCardWithCount","discardPile","premises","deckCount","goals","kind","expr","boolTree","playAs","LevelBoardComponent","params","levelID","Number","console","log","actions","setActions","handSelected","setHandSelected","historyViews","setHV","title","description","setTexts","hasNext","isShowDrawer","setShowDrawer","isShownSuccessDialogue","setShownSuccessDialogue","isShowTruthTable","setShowTruthTable","bottomNavIndex","setBottomNavIndex","nextLevelUrlTail","setNextLevelUrlTail","descIndex","setDescIndex","length","view","goalStates","setGoalStates","map","_","classes","allVars","setAllVars","fetchInitLevelFromServer","fetchNextLevelUrlTail","cards","Set","addVars","p","filter","it","includes","forEach","c","add","Array","from","isSuccess","reduce","a","b","unselectHandCard","setHistoryViews","newViews","pushAction","action","concat","popAction","slice","pushHistoryView","popHistoryView","doAction","newView","undoAction","setNextDesc","toggleDrawer","open","event","type","key","config","get","levelRequest","then","res","data","nextLevel","levelBelongToSection","submitAnswerToServer","levelSubmit","alert","msg","renderSuccessDialogue","color","renderPremises","result","i","premise","isLocked","push","renderHandCardArea","renderGoals","renderPremisesTruthTable","btrees","table","headers","paddingTop","paddingBottom","body","row","renderDrawerContent","menu","sid","handCardSelected","undefined","unselectHand","pickHandCardCallback","handIndex","moveHandCardToPremise","premiseId","inPremiseIndex","discardPickedHandCard","backgroundColor","menuButton","marginTop","root","width","position","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { PremiseComponent } from './Premise'\nimport { HandCardAreaComponent } from './HandCard'\nimport { GameView, GameAction, Card, LevelResponse, Premise } from '../../types'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Axios, { AxiosRequestConfig } from 'axios'\nimport { Paths } from '../../routesPaths'\nimport { doActionToView, getGoalStates, fixInfinityNumber } from '../../game/views'\nimport { Table, Button, Modal, Form } from 'react-bootstrap'\nimport Context from './gameContext'\nimport { playCardsToAction, discardAction } from '../../game/actions'\nimport { variable } from '../../server/gameApp/logicResolver/bools'\nimport { GoalsComponent } from './Goals'\nimport { useParams } from 'react-router'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { AppBar, \n  Toolbar, \n  Typography, \n  makeStyles, \n  Button as MButton, \n  IconButton, \n  Container, \n  Grid, \n  Drawer,\n  List, \n  Divider, \n  ListItem, \n  ListItemText, \n  BottomNavigation, \n  Dialog,\n  Slide, \n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport FeedbackIcon from '@material-ui/icons/Feedback'\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\n\nimport './Board.css'\nimport { TransitionProps } from '@material-ui/core/transitions/transition'\nimport { genTruthTableInStringForBTrees } from '../../server/gameApp/logicResolver/plainResolver'\nimport { parsePremiseSafe } from '../../server/gameApp/game/premise'\nimport { useStyles } from './appbar'\n\ninterface LevelBoardParams {\n  sid: string\n  levelID: string\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction initialGameView(playerVar: string): GameView {\n  return { \n    playerVar: playerVar,\n    handCardWithCount: [],\n    discardPile: [],\n    premises: [],\n    deckCount: 0,\n    goals: [{ kind: 'prove', expr: [playerVar as Card], boolTree: variable(playerVar) }]\n  }\n}\n\nconst playAs: Card = \"A\"\n\n// Game board\nconst LevelBoardComponent = () => {\n  // read router parameter\n  const params = useParams<LevelBoardParams>()\n  const levelID = Number(params.levelID)\n\n  console.log(params.levelID);\n  \n\n  // Actions been taken in this round\n  const [actions, setActions] = useState([] as GameAction[])\n  // Which hand card is selected at now \n  // -1 if no card is selected\n  const [handSelected, setHandSelected] = useState(-1)\n  // History of views in this round\n  const [historyViews, setHV] = useState([initialGameView(\"A\")] as GameView[])\n  // Title and description for the current level\n  const [[title, description], setTexts] = useState([\"title\", [] as string[]])\n  // Whether this level has a next level\n  const [hasNext] = useState(true)\n  // Whether to show the right hand side drawer\n  const [isShowDrawer, setShowDrawer] = useState(false)\n  const [isShownSuccessDialogue, setShownSuccessDialogue] = useState(false)\n  const [isShowTruthTable, setShowTruthTable] = useState(false)\n\n  const [bottomNavIndex, setBottomNavIndex] = useState(0)\n  \n  const [nextLevelUrlTail, setNextLevelUrlTail] = useState(\"\") \n  // which description to display, if descIndex = description.length, no display\n  const [descIndex, setDescIndex] = useState(description.length)\n\n  const view = historyViews[historyViews.length - 1]\n\n  const [goalStates, setGoalStates] = useState(view.goals.map(_ => false))\n\n  const classes = useStyles()\n\n  const [allVars, setAllVars] = useState<Card[]>([])\n\n\n  // Refresh from server at the very beginning\n  useEffect(() => {\n    fetchInitLevelFromServer()\n    fetchNextLevelUrlTail()\n    setDescIndex(0)\n    setShownSuccessDialogue(false)\n  }, [params, levelID])\n\n  // Recalculate variables  \n  useEffect(() => {\n    const cards: Set<Card> = new Set()\n    const addVars = (p: Premise) => p.filter(it => [\"A\", \"B\", \"C\", \"D\"].includes(it)).forEach(c => cards.add(c))\n    view.premises.forEach(([p, _]) => addVars(p))\n    addVars(view.handCardWithCount.map(([c, _]) => c))\n    setAllVars(Array.from(cards))\n  }, [historyViews])\n\n  const isSuccess = () => goalStates.reduce((a, b) => a && b)\n\n  const unselectHandCard = () => setHandSelected(-1)\n\n  const setHistoryViews = (newViews: GameView[]) => {\n    setHV(newViews)\n    setGoalStates(getGoalStates(newViews[newViews.length - 1]))\n  }\n\n  const pushAction = (action: GameAction) => {\n    setActions(actions.concat(action))\n  }\n\n  const popAction = () => {\n    setActions(actions.slice(0, actions.length - 1))\n  }\n\n  const pushHistoryView = (view: GameView) => {\n    setHistoryViews(historyViews.concat(view))\n  }\n\n  const popHistoryView = () => {\n    setHistoryViews(historyViews.slice(0, historyViews.length - 1))\n  }\n\n  const doAction = async (action: GameAction) => {\n    const newView = doActionToView(view, action)\n    pushAction(action)\n    pushHistoryView(newView)\n    unselectHandCard()\n  }\n\n  const undoAction = async () => {\n    if (actions.length > 0) {\n      popAction()\n      popHistoryView()\n    }\n  }\n\n  const setNextDesc = () => {\n    if (descIndex == description.length) {\n      setDescIndex(0)\n    } else {\n      setDescIndex(descIndex + 1)\n    }\n  }\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent,\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return\n    }\n    setShowDrawer(open)\n  } \n\n\n  const fetchInitLevelFromServer = () => {\n    const config: AxiosRequestConfig = {\n      params: {\n        levelID: levelID,\n      }\n    }\n    Axios.get<LevelResponse>(Paths.levelRequest, config)\n      .then(res => {\n        setHistoryViews([fixInfinityNumber(res.data.view)])\n        setTexts([res.data.title, res.data.description])\n      })\n  }\n\n  const fetchNextLevelUrlTail = () => {\n    const nextLevel = levelID + 1\n    const config: AxiosRequestConfig = {\n      params: {\n        levelID: nextLevel,\n      }\n    }\n    Axios.get<number>(Paths.levelBelongToSection, config)\n      .then(res => setNextLevelUrlTail(res.data + '/' + nextLevel))\n  }\n\n  const submitAnswerToServer = () => {\n    const config: AxiosRequestConfig = {\n      params: {\n        isSuccess: isSuccess()\n      }\n    }\n    Axios.get(Paths.levelSubmit, config)\n      .then(res => {\n        alert(res.data.msg);\n      })\n  }\n\n  const renderSuccessDialogue =\n    <Dialog\n      open={!isShownSuccessDialogue && isSuccess()}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={() => setShownSuccessDialogue(true)}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      style={{ color: 'green' }}\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\" style={{ color: 'green'}}>LEVEL PASSED!</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          You have completed this challenge!\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <MButton onClick={() => setShownSuccessDialogue(true)} color=\"secondary\">\n          CLOSE\n        </MButton>\n        <LinkContainer to={\"/level/\" + nextLevelUrlTail}>\n          <MButton color=\"primary\">\n            NEXT LEVEL\n          </MButton>\n        </LinkContainer>\n      </DialogActions>\n    </Dialog>\n\n  const renderPremises = (): JSX.Element => {\n    const result: JSX.Element[] = []\n    for (let i = 0; i < 4; i++) {\n      const [premise, isLocked] = view.premises[i] ?? [[], true]\n      result.push(\n        <PremiseComponent \n          cards={premise} \n          scale={1}\n          isLocked={isLocked}\n          isProofPremise={true}\n          premiseIndex={i} \n        />\n      )\n    }\n    if (view.premises.length == 1) {\n      [result[0], result[1]] = [result[1], result[0]]\n    } else if (view.premises.length == 2) {\n      [result[1], result[2], result[0]] = [result[0], result[1], result[2]]\n    }\n    return (\n      <Table striped hover>\n        {result.map(it => <tr>{it}</tr>)}\n      </Table>\n    )\n  }\n\n  const renderHandCardArea = (): JSX.Element => {\n    return <HandCardAreaComponent\n      playerVar={playAs}\n      cards={view.handCardWithCount}\n    />\n  }\n\n  const renderGoals = (): JSX.Element => {\n    return <GoalsComponent goals={view.goals} isSuccessful={goalStates} ></GoalsComponent>\n  }\n\n  const renderPremisesTruthTable = () => {\n    const btrees = view.premises.map(([p, _]) => parsePremiseSafe(p, allVars))\n    const table = genTruthTableInStringForBTrees(allVars, btrees)\n    return <Table>\n      <thead>\n        {table.headers.map(it => <td style={{ paddingTop: \"0.25rem\", paddingBottom: \"0.25rem\", }}>{it}</td>)}\n      </thead>\n      {table.body.map(row => <tr>\n        {row.map(it => <td style={{ paddingTop: \"1px\", paddingBottom: \"1px\", }}>{it}</td>)}\n      </tr>)}\n    </Table>\n  }\n\n  const renderDrawerContent = (): JSX.Element => {\n    const menu = <div>\n      <List>\n        <ListItem button key=\"ref\" onClick={fetchInitLevelFromServer}>\n          <ListItemText primary=\"Refresh\"/>\n        </ListItem>\n        <ListItem button key=\"sub\" onClick={submitAnswerToServer}>\n          <ListItemText primary=\"Submit\"/>\n        </ListItem>\n      </List>\n      <Divider/>\n      <List>\n        <LinkContainer to={'/levelPage/' + params.sid}>\n          <ListItem button key=\"levelPage\" onClick={() => {}}>\n            <ListItemText primary=\"Back to Level Page\"/>\n          </ListItem>\n        </LinkContainer>\n        <LinkContainer to='/'>\n          <ListItem button key=\"menu\" onClick={() => {}}>\n            <ListItemText primary=\"Back to Main Menu\"/>\n          </ListItem>\n        </LinkContainer>\n      </List>\n    </div>\n    return menu\n  }\n\n  return(\n    <DndProvider backend={HTML5Backend}>\n      <Context.Provider value={{\n          playerVar: playAs,\n          handSelected: handSelected,\n          handCardSelected: handSelected >= 0 ? view.handCardWithCount[handSelected][0] : undefined,\n          unselectHand: unselectHandCard,\n          pickHandCardCallback: (handIndex: number) => {\n            setHandSelected(handIndex)\n          },\n          moveHandCardToPremise: (premiseId: number, inPremiseIndex: number) => {\n            doAction(playCardsToAction(playAs, handSelected, [premiseId, inPremiseIndex]))\n          },\n          discardPickedHandCard: () => {\n            doAction(discardAction(playAs, handSelected))\n          }\n      }}>\n        <AppBar position=\"static\">\n          <Toolbar style={{ backgroundColor: '#F2994A'}}>\n            <Typography variant=\"h6\" className={classes.title}>\n              {title}\n            </Typography>\n            <IconButton \n              edge=\"start\" \n              className={classes.menuButton} \n              color=\"inherit\" \n              aria-label=\"menu\"\n              onClick={toggleDrawer(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Drawer anchor=\"right\" open={isShowDrawer} onClose={toggleDrawer(false)}>\n              {renderDrawerContent()}\n            </Drawer>\n          </Toolbar>\n        </AppBar>\n        <Container maxWidth=\"xl\">\n          {renderPremises()}\n        </Container>\n        <Divider/>\n\n        <Container maxWidth=\"xl\" style={{ marginTop: \"20px\" }}>\n          <Grid container spacing={0}>\n            <Grid item xs={6}>\n              {renderHandCardArea()}\n            </Grid>\n            <Grid item xs={6}>\n              {renderGoals()}\n            </Grid>\n          </Grid>\n        </Container>\n        <Divider/>\n        {/* Navbar at the bottom */}\n        <BottomNavigation\n          value={bottomNavIndex}\n          showLabels\n          className={classes.root}\n          style={{\n            width: '100%',\n            position: 'sticky',\n            bottom: 0,\n          }}\n        > \n          <MButton startIcon={<UndoIcon/>} onClick={undoAction}>UNDO ONE STEP</MButton>  \n          <MButton disabled={description.length == 0}  startIcon={<FeedbackIcon/>} onClick={setNextDesc}>SHOW HINTS</MButton>  \n          <MButton startIcon={<FeedbackIcon/>} onClick={() => setShowTruthTable(true)}>SHOW TRUTH TABLE</MButton>  \n          <LinkContainer to={\"/level/\" + nextLevelUrlTail}>\n            <MButton disabled={!hasNext || !isSuccess()}  startIcon={<NavigateNextIcon/>}>NEXT LEVEL</MButton>  \n          </LinkContainer>\n        </BottomNavigation>\n        {/* Pop-up hints */}\n        <Dialog open={descIndex != description.length} onClose={() => setDescIndex(description.length)}>\n          <DialogTitle>Hint</DialogTitle>\n          <DialogContent>\n            <Form>\n              <Form.Label>{description[descIndex]}</Form.Label>\n            </Form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={setNextDesc}>→</Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={isShowTruthTable} onClose={() => setShowTruthTable(false)}>\n          <DialogTitle>Truth Table</DialogTitle>\n          <DialogContent>\n            {renderPremisesTruthTable()}\n          </DialogContent>\n        </Dialog>\n        {renderSuccessDialogue}\n      </Context.Provider>\n    </DndProvider>\n  )\n\n}\n\nexport { LevelBoardComponent }"]},"metadata":{},"sourceType":"module"}