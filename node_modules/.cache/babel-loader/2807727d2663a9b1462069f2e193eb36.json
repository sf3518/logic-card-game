{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/entry/levelPage.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport '../entry/Entry.css';\nimport '../entry/levelPage.css';\nimport { LevelButton } from './levelButton';\nimport { Button } from 'react-bootstrap';\nimport { useParams } from 'react-router';\nimport Axios from 'axios';\nimport { Paths } from '../../routesPaths';\nimport { Link } from 'react-router-dom';\nexport const LevelPage = () => {\n  const {\n    sid\n  } = useParams();\n  const [startLevelID, setStartLevelID] = useState(0);\n  const [endLevelID, setEndLevelID] = useState(0);\n  const [[hasPrev, hasNext], setPrevNext] = useState([false, false]);\n  const [title, setTitle] = useState(\"Title\");\n  useEffect(() => {\n    const config = {\n      params: {\n        sid: sid\n      }\n    };\n    Axios.get(Paths.levelPageInfo, config).then(res => res.data).then(res => {\n      setTitle(res.title);\n      setStartLevelID(res.startID);\n      setEndLevelID(res.startID + res.levelsCount - 1);\n      setPrevNext([res.hasPrev, res.hasNext]);\n    });\n  }, [sid]);\n\n  const renderTable = () => {\n    const renderRow = (startID, count) => {\n      const row = [];\n\n      for (let i = startID; i < count + startID; i++) {\n        row.push( /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(LevelButton, {\n          sectionID: Number(sid),\n          levelID: i,\n          isAvailable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 22\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      }, row);\n    };\n\n    const totalCount = endLevelID - startLevelID + 1;\n    let numberOfRows = 1;\n\n    for (let i = Math.floor(Math.sqrt(totalCount)); i > 1; i--) {\n      if (totalCount % i === 0) {\n        numberOfRows = i;\n        break;\n      }\n    }\n\n    const rowCount = Math.floor(totalCount / numberOfRows) + (totalCount % numberOfRows == 0 ? 0 : 1);\n    const table = [];\n\n    for (let i = 0, start = startLevelID; i < numberOfRows; i++, start += rowCount) {\n      table.push(renderRow(start, rowCount));\n    }\n\n    return /*#__PURE__*/React.createElement(\"table\", {\n      style: {\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    }, table);\n  };\n\n  const renderButton = navTo => {\n    if (navTo === 'prev' && hasPrev || navTo === 'next' && hasNext) {\n      const navSID = Number(sid) + (navTo === 'prev' ? -1 : 1);\n      return /*#__PURE__*/React.createElement(Link, {\n        to: \"/levelPage/\" + navSID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, navTo));\n    }\n\n    return undefined;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"levelPageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 39\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"levelPageTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      width: \"10%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }\n  }, renderButton('prev')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }\n  }, renderTable()), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      width: \"10%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }\n  }, renderButton('next')))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      verticalAlign: \"bottom\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => window.location.href = '../../../../',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Back to menu\")));\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/entry/levelPage.tsx"],"names":["React","useEffect","useState","LevelButton","Button","useParams","Axios","Paths","Link","LevelPage","sid","startLevelID","setStartLevelID","endLevelID","setEndLevelID","hasPrev","hasNext","setPrevNext","title","setTitle","config","params","get","levelPageInfo","then","res","data","startID","levelsCount","renderTable","renderRow","count","row","i","push","Number","totalCount","numberOfRows","Math","floor","sqrt","rowCount","table","start","margin","renderButton","navTo","navSID","undefined","textAlign","width","verticalAlign","window","location","href"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../entry/Entry.css';\nimport '../entry/levelPage.css';\nimport { LevelButton } from './levelButton'\nimport { Button } from 'react-bootstrap'\nimport { useParams } from 'react-router';\nimport Axios, { AxiosRequestConfig } from 'axios';\nimport { Paths } from '../../routesPaths';\nimport { LevelPageInfo } from '../../types';\nimport { Link } from 'react-router-dom';\n\ninterface LevelPageParams {\n  sid: string\n}\n\n\nexport const LevelPage = (): JSX.Element => {\n  \n  const { sid } = useParams<LevelPageParams>()\n\n  const [startLevelID, setStartLevelID] = useState(0)\n  const [endLevelID, setEndLevelID] = useState(0)\n  const [[hasPrev, hasNext], setPrevNext] = useState([false, false])\n  const [title, setTitle] = useState(\"Title\")\n\n  useEffect(() => {\n    const config: AxiosRequestConfig = {\n      params: {\n        sid: sid\n      }\n    }\n    Axios.get<LevelPageInfo>(Paths.levelPageInfo, config)\n      .then(res => res.data)\n      .then(res => {\n        setTitle(res.title)\n        setStartLevelID(res.startID)\n        setEndLevelID(res.startID + res.levelsCount - 1)\n        setPrevNext([res.hasPrev, res.hasNext])\n      })\n  } ,[sid])\n\n  const renderTable = (): JSX.Element => {  \n    const renderRow = (startID: number, count: number) => {\n      const row: JSX.Element[] = []\n      for(let i = startID; i < count + startID; i++) {\n        row.push(<td><LevelButton sectionID={Number(sid)} levelID={i} isAvailable={true} /></td>)\n      }\n      return <tr>{row}</tr>\n    }\n\n    const totalCount = endLevelID - startLevelID + 1\n    let numberOfRows = 1\n    for (let i = Math.floor(Math.sqrt(totalCount)); i > 1; i--) {\n      if (totalCount % i === 0) {\n        numberOfRows = i\n        break\n      }\n    } \n    const rowCount = Math.floor(totalCount / numberOfRows) + (totalCount % numberOfRows == 0 ? 0 : 1)\n    const table: JSX.Element[] = []\n    for (let i = 0, start = startLevelID; i < numberOfRows; i++, start += rowCount) {\n      table.push(renderRow(start, rowCount))\n    }\n    return <table style={{ margin: \"auto\" }}>{table}</table>\n  } \n\n  const renderButton = (navTo: 'prev' | 'next') => {\n    if ((navTo === 'prev' && hasPrev)\n    ||  (navTo === 'next' && hasNext)) {\n      const navSID = Number(sid) + (navTo === 'prev' ? -1 : 1)\n      return <Link to={\"/levelPage/\" + navSID}>\n        <Button>{navTo}</Button>\n      </Link>\n    }\n    return undefined\n  }\n\n  return (\n    <div style={{ textAlign:'center' }}>\n      <div className=\"levelPageTitle\"><h1>{title}</h1></div>\n      <table className=\"levelPageTable\">\n        <tr>\n          {<td style={{ width: \"10%\" }}>{renderButton('prev')}</td>}\n          {<td>{renderTable()}</td>}\n          {<td style={{ width: \"10%\" }}>{renderButton('next')}</td>}\n        </tr>\n      </table>\n      <div style={{ verticalAlign: \"bottom\" }}>\n        <Button onClick={()=>window.location.href='../../../../'}>Back to menu</Button>\n      </div>\n    \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}