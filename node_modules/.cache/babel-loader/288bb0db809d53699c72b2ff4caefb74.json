{"ast":null,"code":"import _slicedToArray from\"/Users/johnny/IC/Computing/year2/DRP/drp48/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{Table}from'react-bootstrap';import SUCCESSFUL_ICON from'../../src_img/card_UI/correct.jpg';import UNSUCCESSFUL_ICON from'../../src_img/card_UI/incorrect.jpg';import{genTruthTableInStringForBTrees}from'../../server/gameApp/logicResolver/plainResolver';import{makeStyles,createStyles,Button as MButton,Popover,Typography,List,ListItem,IconButton,Divider}from'@material-ui/core';import{EditorContext}from'./LevelEditor';import{EditorPremise}from'./EditorPremise';import{getExprFromJson}from'../../server/gameApp/game/goal';import EditIcon from'@material-ui/icons/Edit';var useStyles=makeStyles(function(theme){return createStyles({typography:{padding:theme.spacing(2)}});});export var EditorGoal=function EditorGoal(_ref){var isSuccessful=_ref.isSuccessful,_onSelect=_ref.onSelect,_onDrop=_ref.onDrop,onChange=_ref.onChange;var context=useContext(EditorContext);var goals=context.goals;var _useState=useState(goals.map(function(_){return false;})),_useState2=_slicedToArray(_useState,2),showTable=_useState2[0],setShowTable=_useState2[1];var classes=useStyles();var _React$useState=React.useState(goals.map(function(_){return null;})),_React$useState2=_slicedToArray(_React$useState,2),anchorEls=_React$useState2[0],setAnchorEl=_React$useState2[1];var handleClick=function handleClick(i){return function(event){var newAnchorEls=anchorEls.slice();newAnchorEls.splice(i,1,event.currentTarget);setAnchorEl(newAnchorEls);};};var handleClose=function handleClose(i){return function(){var newAnchorEls=anchorEls.slice();newAnchorEls.splice(i,1,null);setAnchorEl(newAnchorEls);};};var ids=anchorEls.map(function(a,i){return a?'popover'+i:undefined;});var setShowOneTable=function setShowOneTable(i,isShow){setShowTable(showTable.map(function(old,j){return i==j?isShow:old;}));};var renderSuccessful=function renderSuccessful(i){return/*#__PURE__*/React.createElement(\"div\",{style:{width:'30px',height:'30px',backgroundImage:\"url(\"+(isSuccessful[i]?SUCCESSFUL_ICON:UNSUCCESSFUL_ICON)+\")\",backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}});};var renderChangeButton=function renderChangeButton(i){return/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return onChange(i);}},/*#__PURE__*/React.createElement(EditIcon,{fontSize:\"large\"}));};var collectVars=function collectVars(i){var set=new Set();getExprFromJson(goals[i]).filter(function(c){return[\"A\",\"B\",\"C\",\"D\"].includes(c);}).forEach(function(c){return set.add(c);});return Array.from(set);};var renderShowTableButton=function renderShowTableButton(i){if(undefined){return/*#__PURE__*/React.createElement(\"div\",null);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MButton,{\"aria-describedby\":ids[i],onClick:handleClick(i),color:\"primary\"},\"Hint\"),/*#__PURE__*/React.createElement(Popover,{id:ids[i],open:Boolean(ids[i]),anchorEl:anchorEls[i],onClose:handleClose(i),anchorOrigin:{vertical:'center',horizontal:'right'},transformOrigin:{vertical:'center',horizontal:'left'}},/*#__PURE__*/React.createElement(Typography,{className:classes.typography},renderTruthTable(i))));};var renderTruthTable=function renderTruthTable(i){var vars=collectVars(i);var truthTable=genTruthTableInStringForBTrees(vars,[context.goalTrees[i]]);return/*#__PURE__*/React.createElement(Table,{onClick:function onClick(){return setShowOneTable(i,false);}},/*#__PURE__*/React.createElement(\"thead\",null,truthTable.headers.map(function(it){return/*#__PURE__*/React.createElement(\"td\",{style:{paddingTop:\"0.25rem\",paddingBottom:\"0.25rem\"}},it);})),truthTable.body.map(function(row){return/*#__PURE__*/React.createElement(\"tr\",null,row.map(function(it){return/*#__PURE__*/React.createElement(\"td\",{style:{paddingTop:\"1px\",paddingBottom:\"1px\"}},it);}));}));};var showGoalInCards=function showGoalInCards(i){var goal=context.goals[i];switch(goal.kind){case'tautology':case'paradox':return/*#__PURE__*/React.createElement(\"div\",null);}return/*#__PURE__*/React.createElement(EditorPremise,{category:{kind:'goal',index:i},scale:0.5,onLock:undefined,onSelect:function onSelect(pos){return _onSelect(i,pos);},onDrop:function onDrop(pos){return _onDrop(i,pos);}});};var renderGoal=function renderGoal(i){return/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(\"td\",null,renderSuccessful(i)),/*#__PURE__*/React.createElement(\"td\",{style:{verticalAlign:\"center\"}},/*#__PURE__*/React.createElement(\"h4\",{style:{marginLeft:\"10px\",marginRight:\"10px\"}},showGoalKind(i+1,goals[i]))),/*#__PURE__*/React.createElement(\"td\",null,showGoalInCards(i)),/*#__PURE__*/React.createElement(\"td\",{align:\"right\"},renderShowTableButton(i)),/*#__PURE__*/React.createElement(\"td\",{align:\"right\"},renderChangeButton(i)),i!=0?/*#__PURE__*/React.createElement(Divider,null):undefined);};var renderGoals=function renderGoals(){var result=[];for(var i=0;i<goals.length;i++){result.push(renderGoal(i));}return/*#__PURE__*/React.createElement(List,null,result);};return renderGoals();};function showGoalKind(index,goal){var showKind;switch(goal.kind){case'prove':showKind='To prove:';break;case'disprove':showKind='To disprove:';break;case'unknown':showKind='Make undecidable:';break;case'equivalent':showKind='To be equivalent to:';break;case'tautology':showKind='Make a tautology';break;case'paradox':showKind='Make a paradox';break;}return index+\". \"+showKind+\" \";}","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/editor/EditorGoals.tsx"],"names":["React","useState","useContext","Table","SUCCESSFUL_ICON","UNSUCCESSFUL_ICON","genTruthTableInStringForBTrees","makeStyles","createStyles","Button","MButton","Popover","Typography","List","ListItem","IconButton","Divider","EditorContext","EditorPremise","getExprFromJson","EditIcon","useStyles","theme","typography","padding","spacing","EditorGoal","isSuccessful","onSelect","onDrop","onChange","context","goals","map","_","showTable","setShowTable","classes","anchorEls","setAnchorEl","handleClick","i","event","newAnchorEls","slice","splice","currentTarget","handleClose","ids","a","undefined","setShowOneTable","isShow","old","j","renderSuccessful","width","height","backgroundImage","backgroundSize","backgroundRepeat","renderChangeButton","collectVars","set","Set","filter","c","includes","forEach","add","Array","from","renderShowTableButton","Boolean","vertical","horizontal","renderTruthTable","vars","truthTable","goalTrees","headers","it","paddingTop","paddingBottom","body","row","showGoalInCards","goal","kind","index","pos","renderGoal","verticalAlign","marginLeft","marginRight","showGoalKind","renderGoals","result","length","push","showKind"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Goal } from '../../types'\nimport { Card, Table, Button } from 'react-bootstrap'\nimport { PremiseComponent } from '../game/Premise'\nimport * as Types from '../../types'\nimport SUCCESSFUL_ICON from '../../src_img/card_UI/correct.jpg'\nimport UNSUCCESSFUL_ICON from '../../src_img/card_UI/incorrect.jpg'\nimport { genTruthTableInStringForBTrees } from '../../server/gameApp/logicResolver/plainResolver'\nimport { makeStyles, Theme, createStyles, Button as MButton, Popover, Typography, List, ListItem, IconButton, Divider } from '@material-ui/core'\nimport { EditorContext } from './LevelEditor'\nimport { BoolTree } from '../../server/gameApp/logicResolver/bools'\nimport { parsePremiseSafe } from '../../server/gameApp/game/premise'\nimport { EditorPremise } from './EditorPremise'\nimport { getExprFromJson } from '../../server/gameApp/game/goal'\nimport EditIcon from '@material-ui/icons/Edit'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\ninterface GoalsProps {\n  isSuccessful: boolean[]\n  onSelect: (gid: number, gpos: number) => void\n  onDrop: (gid: number, gpos: number) => void\n  onChange: (gid: number) => void\n\n}\n\nexport const EditorGoal = ({\n  isSuccessful,\n  onSelect,\n  onDrop,\n  onChange,\n}: GoalsProps) => {\n\n  const context = useContext(EditorContext)\n  const goals = context.goals\n\n  const [showTable, setShowTable] = useState(goals.map(_ => false))\n\n  const classes = useStyles()\n  const [anchorEls, setAnchorEl] = React.useState<(HTMLButtonElement | null)[]>(goals.map(_ => null));\n  const handleClick = (i: number) => (event: React.MouseEvent<HTMLButtonElement>) => {\n    const newAnchorEls = anchorEls.slice()\n    newAnchorEls.splice(i, 1, event.currentTarget) \n    setAnchorEl(newAnchorEls);\n  }\n  const handleClose = (i: number) => () => {\n    const newAnchorEls = anchorEls.slice()\n    newAnchorEls.splice(i, 1, null) \n    setAnchorEl(newAnchorEls);\n  }\n\n  const ids = anchorEls.map((a, i) => a ? 'popover' + i : undefined)\n\n  const setShowOneTable = (i: number, isShow: boolean) => {\n    setShowTable(showTable.map((old, j) => i == j ? isShow : old))\n  }\n\n  const renderSuccessful = (i: number) => {\n    return <div style={{ \n      width: '30px', \n      height: '30px', \n      backgroundImage: \"url(\" + (isSuccessful[i] ? SUCCESSFUL_ICON : UNSUCCESSFUL_ICON) + \")\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n    }}></div>\n  }\n\n  const renderChangeButton = (i: number) => \n    <IconButton onClick={() => onChange(i)}><EditIcon fontSize=\"large\"/></IconButton>\n\n  const collectVars = (i: number): Types.Card[] => {\n    const set = new Set<Types.Card>()\n    getExprFromJson(goals[i]).filter(c => [\"A\", \"B\", \"C\", \"D\"].includes(c)).forEach(c => set.add(c))\n    return Array.from(set)\n  }\n\n  const renderShowTableButton = (i: number) => {\n    if (undefined) {\n      return <div></div>\n    }\n    return (\n      <div>\n        <MButton aria-describedby={ids[i]} onClick={handleClick(i)} color=\"primary\">Hint</MButton>\n        <Popover \n          id={ids[i]} \n          open={Boolean(ids[i])} \n          anchorEl={anchorEls[i]}\n          onClose={handleClose(i)}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left',\n          }}\n        >\n          <Typography className={classes.typography}>{renderTruthTable(i)}</Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  const renderTruthTable = (i: number) => {\n    const vars = collectVars(i)\n    const truthTable = genTruthTableInStringForBTrees(vars, [context.goalTrees[i]]) \n    return (\n      <Table onClick={() => setShowOneTable(i, false)}>\n        <thead>\n          {truthTable.headers.map(it => <td style={{ paddingTop: \"0.25rem\", paddingBottom: \"0.25rem\", }}>{it}</td>)}\n        </thead>\n        {truthTable.body.map(row => <tr>\n          {row.map(it => <td style={{ paddingTop: \"1px\", paddingBottom: \"1px\", }}>{it}</td>)}\n        </tr>)}\n      </Table>\n    )\n  }\n\n  const showGoalInCards = (i: number): JSX.Element => {\n    const goal = context.goals[i]\n    switch(goal.kind) {\n      case 'tautology':\n      case 'paradox':\n        return <div></div>\n    }\n    return <EditorPremise\n      category={{ kind: 'goal', index: i }}\n      scale={0.5}\n      onLock={undefined}\n      onSelect={pos => onSelect(i, pos)}\n      onDrop={pos => onDrop(i, pos)}\n    />\n  }\n\n  const renderGoal = (i: number) => {\n    return <ListItem>\n      <td>{renderSuccessful(i)}</td>\n      <td style={{verticalAlign: \"center\"}}>{\n        <h4 style={{ marginLeft: \"10px\", marginRight: \"10px\"}}>{\n          showGoalKind(i + 1, goals[i])\n        }</h4>\n      }</td>\n      <td>{showGoalInCards(i)}</td>\n      <td align='right'>{renderShowTableButton(i)}</td>\n      <td align='right'>{renderChangeButton(i)}</td>\n      { i != 0 ? <Divider/> : undefined }\n    </ListItem>\n  }\n\n  const renderGoals = () => {\n    const result: JSX.Element[] = []\n    for(let i = 0; i < goals.length; i++) {\n      result.push(renderGoal(i))\n    }\n    return <List>{result}</List>\n  }\n\n  return renderGoals()\n\n}\n\nfunction showGoalKind(index: number, goal: Types.GoalInJSON): string {\n  let showKind: string\n  switch(goal.kind) {\n    case 'prove': showKind = 'To prove:'; break\n    case 'disprove': showKind = 'To disprove:'; break\n    case 'unknown': showKind = 'Make undecidable:'; break\n    case 'equivalent': showKind = 'To be equivalent to:'; break\n    case 'tautology': showKind = 'Make a tautology'; break\n    case 'paradox': showKind = 'Make a paradox'; break\n  }\n  return index + \". \" + showKind + \" \"\n}"]},"metadata":{},"sourceType":"module"}