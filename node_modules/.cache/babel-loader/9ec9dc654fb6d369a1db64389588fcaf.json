{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/game/SinglePlayerLevelBoard.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { LevelBoardComponent } from './LevelBoard';\nimport Axios from 'axios';\nimport { Paths } from '../../routesPaths';\nconst NO_NEXT = -1;\nexport const SinglePlayerLevelBoard = () => {\n  const params = useParams();\n  const levelID = Number(params.levelID);\n  console.log(levelID);\n  const sid = params.sid;\n  const [init, setInit] = useState();\n  const [nextSid, setNextSid] = useState(NO_NEXT);\n\n  const fetchInitLevelFromServer = () => {\n    const config = {\n      params: {\n        levelID: levelID\n      }\n    };\n    Axios.get(Paths.levelRequest, config).then(res => res.data).then(([res, nextSid]) => {\n      setInit(res);\n      setNextSid(nextSid);\n    });\n  };\n\n  useEffect(fetchInitLevelFromServer, [params, levelID]);\n  useEffect(fetchInitLevelFromServer, []);\n  return init ? /*#__PURE__*/React.createElement(LevelBoardComponent, {\n    title: `${init.title}`,\n    description: init.description,\n    initView: init.view,\n    nextUrl: nextSid === NO_NEXT ? \"\" : `/level/${nextSid}/${levelID + 1}`,\n    backUrl: `/levelPage/${sid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/game/SinglePlayerLevelBoard.tsx"],"names":["React","useState","useEffect","useParams","LevelBoardComponent","Axios","Paths","NO_NEXT","SinglePlayerLevelBoard","params","levelID","Number","console","log","sid","init","setInit","nextSid","setNextSid","fetchInitLevelFromServer","config","get","levelRequest","then","res","data","title","description","view"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,OAAOC,KAAP,MAA0C,OAA1C;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AAOA,MAAMC,OAAO,GAAG,CAAC,CAAjB;AAEA,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1C,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAMO,OAAO,GAAGC,MAAM,CAACF,MAAM,CAACC,OAAR,CAAtB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,QAAMI,GAAG,GAAGL,MAAM,CAACK,GAAnB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAASM,OAAT,CAAtC;;AAEA,QAAMY,wBAAwB,GAAG,MAAM;AACrC,UAAMC,MAA0B,GAAG;AACjCX,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAEA;AADH;AADyB,KAAnC;AAKAL,IAAAA,KAAK,CAACgB,GAAN,CAAmCf,KAAK,CAACgB,YAAzC,EAAuDF,MAAvD,EACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IADnB,EAEGF,IAFH,CAEQ,CAAC,CAACC,GAAD,EAAMP,OAAN,CAAD,KAAoB;AACxBD,MAAAA,OAAO,CAACQ,GAAD,CAAP;AACAN,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KALH;AAMD,GAZD;;AAcAf,EAAAA,SAAS,CAACiB,wBAAD,EAA2B,CAACV,MAAD,EAASC,OAAT,CAA3B,CAAT;AAEAR,EAAAA,SAAS,CAACiB,wBAAD,EAA2B,EAA3B,CAAT;AAEA,SACEJ,IAAI,gBAAG,oBAAC,mBAAD;AACL,IAAA,KAAK,EAAG,GAAEA,IAAI,CAACW,KAAM,EADhB;AAEL,IAAA,WAAW,EAAEX,IAAI,CAACY,WAFb;AAGL,IAAA,QAAQ,EAAEZ,IAAI,CAACa,IAHV;AAIL,IAAA,OAAO,EAAEX,OAAO,KAAKV,OAAZ,GAAsB,EAAtB,GAA4B,UAASU,OAAQ,IAAGP,OAAO,GAAG,CAAE,EAJhE;AAKL,IAAA,OAAO,EAAG,cAAaI,GAAI,EALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPP;AASD,CArCM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { LevelBoardComponent } from './LevelBoard'\nimport Axios, { AxiosRequestConfig } from 'axios'\nimport { LevelResponse } from '../../types'\nimport { Paths } from '../../routesPaths'\n\ninterface LevelBoardParams {\n  sid: string\n  levelID: string\n}\n\nconst NO_NEXT = -1\n\nexport const SinglePlayerLevelBoard = () => {\n  const params = useParams<LevelBoardParams>()\n\n  const levelID = Number(params.levelID)\n  console.log(levelID)\n\n  const sid = params.sid\n  const [init, setInit] = useState<LevelResponse|undefined>()\n  const [nextSid, setNextSid] = useState<number>(NO_NEXT)\n  \n  const fetchInitLevelFromServer = () => {\n    const config: AxiosRequestConfig = {\n      params: {\n        levelID: levelID,\n      }\n    }\n    Axios.get<[LevelResponse, number]>(Paths.levelRequest, config)\n      .then(res => res.data)\n      .then(([res, nextSid]) => {\n        setInit(res)\n        setNextSid(nextSid)\n      })\n  }\n\n  useEffect(fetchInitLevelFromServer, [params, levelID])\n\n  useEffect(fetchInitLevelFromServer, [])\n\n  return (\n    init ? <LevelBoardComponent\n      title={`${init.title}`}\n      description={init.description}\n      initView={init.view}\n      nextUrl={nextSid === NO_NEXT ? \"\" : `/level/${nextSid}/${levelID + 1}`}\n      backUrl={`/levelPage/${sid}`}\n    /> : <div></div>\n  )\n}"]},"metadata":{},"sourceType":"module"}