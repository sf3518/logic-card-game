{"ast":null,"code":"import React,{useContext}from'react';import{CardComponent}from'../game/Card';import{EditorContext}from'./LevelEditor';import{EditorClickSlot}from'./ClickSlot';import Tooltip from'@material-ui/core/Tooltip';export var EditorHand=function EditorHand(_ref){var onPick=_ref.onPick,_onClickOnTag=_ref.onClickOnTag,onDrop=_ref.onDrop;var context=useContext(EditorContext);var cards=context.handCards;var isSelected=context.state.kind=='select';var isPicked=function isPicked(index){return context.state.kind=='select'&&context.state.select.kind=='hand'&&context.state.select.hpos==index;};var renderCard=function renderCard(i){var tag=cards[i][1]?cards[i][1]:Number.POSITIVE_INFINITY;return/*#__PURE__*/React.createElement(CardComponent,{isSelected:isPicked(i),scale:1,tag:tag,cardSymbol:cards[i][0],onClick:function onClick(){onPick(i);},onClickOnTag:function onClickOnTag(){return _onClickOnTag(i);}});};var renderHandCardArea=function renderHandCardArea(){var result=[];if(isSelected){result.push(/*#__PURE__*/React.createElement(EditorClickSlot,{scale:1,isActive:true,onDrop:onDrop}));}for(var i=0;i<cards.length;i++){result.push(renderCard(i));if(isSelected){result.push(/*#__PURE__*/React.createElement(EditorClickSlot,{scale:1,isActive:true,onDrop:onDrop}));}}return result;};var tooltip=isSelected?\"\":\"Click me to select a hand card\";return/*#__PURE__*/React.createElement(Tooltip,{title:tooltip,arrow:true},/*#__PURE__*/React.createElement(\"div\",{className:\"board-row\",style:{width:'100%',height:'133px',display:'flex',flexWrap:'wrap',justifyContent:\"center\",float:\"none\"}},renderHandCardArea()));};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/editor/EditorHand.tsx"],"names":["React","useContext","CardComponent","EditorContext","EditorClickSlot","Tooltip","EditorHand","onPick","onClickOnTag","onDrop","context","cards","handCards","isSelected","state","kind","isPicked","index","select","hpos","renderCard","i","tag","Number","POSITIVE_INFINITY","renderHandCardArea","result","push","length","tooltip","width","height","display","flexWrap","justifyContent","float"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Card, Premise } from '../../types'\nimport { CardComponent } from '../game/Card'\nimport { EditorContext } from './LevelEditor'\nimport { EditorClickSlot } from './ClickSlot'\nimport Tooltip from '@material-ui/core/Tooltip'\n\ninterface HandCardAreaProps {\n  onPick: (hpos: number) => void\n  onClickOnTag: (hpos: number) => void\n  onDrop: () => void\n}\n\nexport const EditorHand = ({\n  onPick,\n  onClickOnTag,\n  onDrop\n}: HandCardAreaProps): JSX.Element => {\n\n  const context = useContext(EditorContext)\n  const cards = context.handCards\n\n  const isSelected = context.state.kind == 'select'\n\n  const isPicked = (index: number) => \n    context.state.kind == 'select'  \n    && context.state.select.kind == 'hand' \n    && context.state.select.hpos == index\n\n  const renderCard = (i: number): JSX.Element => {\n    const tag = cards[i][1] ? cards[i][1] : Number.POSITIVE_INFINITY\n    return <CardComponent  \n      isSelected={isPicked(i)}\n      scale={1}\n      tag={tag}\n      cardSymbol={cards[i][0]} \n      onClick={() => {\n          onPick(i)\n      }}\n      onClickOnTag={() => onClickOnTag(i)}\n    />\n  }\n\n  const renderHandCardArea = (): JSX.Element[] => {\n    let result: JSX.Element[] = []\n    if (isSelected) {\n      result.push(<EditorClickSlot \n        scale={1}\n        isActive={true}\n        onDrop={onDrop}\n      />)\n    }\n    for (let i = 0; i < cards.length; i++) {\n      result.push(renderCard(i))\n      if (isSelected) {\n        result.push(<EditorClickSlot \n          scale={1}\n          isActive={true}\n          onDrop={onDrop}\n        />)\n      }\n    }\n    return result\n  }\n\n  const tooltip = isSelected ? \"\" : \"Click me to select a hand card\"\n\n  return (\n    <Tooltip title={tooltip} arrow >\n      <div \n        className=\"board-row\" \n        style={{\n          width: '100%',\n          height: '133px',\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: \"center\",\n          float: \"none\",\n        }}> \n        {renderHandCardArea()}\n      </div>\n    </Tooltip>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}