{"ast":null,"code":"import _slicedToArray from\"/Users/johnny/IC/Computing/year2/DRP/drp48/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from'react';import{useParams}from'react-router';import{LevelBoardComponent}from'./LevelBoard';import Axios from'axios';import{Paths}from'../../routesPaths';import{LoginContext}from'../../LoginContext';var NO_NEXT=-1;export var SinglePlayerLevelBoard=function SinglePlayerLevelBoard(){var logins=useContext(LoginContext);var params=useParams();var levelID=Number(params.levelID);console.log(levelID);var sid=params.sid;var _useState=useState(),_useState2=_slicedToArray(_useState,2),init=_useState2[0],setInit=_useState2[1];var _useState3=useState(NO_NEXT),_useState4=_slicedToArray(_useState3,2),nextSid=_useState4[0],setNextSid=_useState4[1];var fetchInitLevelFromServer=function fetchInitLevelFromServer(){var _logins$user$levelFin,_logins$user;var available=((_logins$user$levelFin=(_logins$user=logins.user)===null||_logins$user===void 0?void 0:_logins$user.levelFinished)!==null&&_logins$user$levelFin!==void 0?_logins$user$levelFin:-20)+1;if(levelID<=available){var config={params:{levelID:levelID}};Axios.get(Paths.levelRequest,config).then(function(res){return res.data;}).then(function(_ref){var _ref2=_slicedToArray(_ref,2),res=_ref2[0],nextSid=_ref2[1];setInit(res);setNextSid(nextSid);});}};useEffect(fetchInitLevelFromServer,[params,levelID]);useEffect(fetchInitLevelFromServer,[]);return init?/*#__PURE__*/React.createElement(LevelBoardComponent,{title:\"\".concat(init.title),description:init.description,initView:init.view,nextUrl:nextSid===NO_NEXT?\"\":\"/level/\".concat(nextSid,\"/\").concat(levelID+1),backUrl:\"/levelPage/\".concat(sid),submit:function submit(){return logins.passLevel(levelID);}}):/*#__PURE__*/React.createElement(\"div\",null,\"This level is still locked!\");};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/game/SinglePlayerLevelBoard.tsx"],"names":["React","useState","useEffect","useContext","useParams","LevelBoardComponent","Axios","Paths","LoginContext","NO_NEXT","SinglePlayerLevelBoard","logins","params","levelID","Number","console","log","sid","init","setInit","nextSid","setNextSid","fetchInitLevelFromServer","available","user","levelFinished","config","get","levelRequest","then","res","data","title","description","view","passLevel"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,OAASC,mBAAT,KAAoC,cAApC,CACA,MAAOC,CAAAA,KAAP,KAA0C,OAA1C,CAEA,OAASC,KAAT,KAAsB,mBAAtB,CACA,OAASC,YAAT,KAA6B,oBAA7B,CAOA,GAAMC,CAAAA,OAAO,CAAG,CAAC,CAAjB,CAEA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CAC1C,GAAMC,CAAAA,MAAM,CAAGR,UAAU,CAACK,YAAD,CAAzB,CACA,GAAMI,CAAAA,MAAM,CAAGR,SAAS,EAAxB,CAEA,GAAMS,CAAAA,OAAO,CAAGC,MAAM,CAACF,MAAM,CAACC,OAAR,CAAtB,CACAE,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAEA,GAAMI,CAAAA,GAAG,CAAGL,MAAM,CAACK,GAAnB,CAP0C,cAQlBhB,QAAQ,EARU,wCAQnCiB,IARmC,eAQ7BC,OAR6B,8BASZlB,QAAQ,CAASQ,OAAT,CATI,yCASnCW,OATmC,eAS1BC,UAT0B,eAW1C,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,wCACrC,GAAMC,CAAAA,SAAS,CAAG,sCAACZ,MAAM,CAACa,IAAR,uCAAC,aAAaC,aAAd,+DAA+B,CAAC,EAAhC,EAAsC,CAAxD,CACA,GAAIZ,OAAO,EAAIU,SAAf,CAA0B,CACxB,GAAMG,CAAAA,MAA0B,CAAG,CACjCd,MAAM,CAAE,CACNC,OAAO,CAAEA,OADH,CADyB,CAAnC,CAKAP,KAAK,CAACqB,GAAN,CAAmCpB,KAAK,CAACqB,YAAzC,CAAuDF,MAAvD,EACGG,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAR,EADX,EAEGF,IAFH,CAEQ,cAAoB,kCAAlBC,GAAkB,UAAbV,OAAa,UACxBD,OAAO,CAACW,GAAD,CAAP,CACAT,UAAU,CAACD,OAAD,CAAV,CACD,CALH,EAMD,CACF,CAfD,CAiBAlB,SAAS,CAACoB,wBAAD,CAA2B,CAACV,MAAD,CAASC,OAAT,CAA3B,CAAT,CAEAX,SAAS,CAACoB,wBAAD,CAA2B,EAA3B,CAAT,CAEA,MACEJ,CAAAA,IAAI,cAAG,oBAAC,mBAAD,EACL,KAAK,WAAKA,IAAI,CAACc,KAAV,CADA,CAEL,WAAW,CAAEd,IAAI,CAACe,WAFb,CAGL,QAAQ,CAAEf,IAAI,CAACgB,IAHV,CAIL,OAAO,CAAEd,OAAO,GAAKX,OAAZ,CAAsB,EAAtB,kBAAqCW,OAArC,aAAgDP,OAAO,CAAG,CAA1D,CAJJ,CAKL,OAAO,sBAAgBI,GAAhB,CALF,CAML,MAAM,CAAE,wBAAMN,CAAAA,MAAM,CAACwB,SAAP,CAAiBtB,OAAjB,CAAN,EANH,EAAH,cAOC,6DARP,CAUD,CA1CM","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router'\nimport { LevelBoardComponent } from './LevelBoard'\nimport Axios, { AxiosRequestConfig } from 'axios'\nimport { LevelResponse } from '../../types'\nimport { Paths } from '../../routesPaths'\nimport { LoginContext } from '../../LoginContext'\n\ninterface LevelBoardParams {\n  sid: string\n  levelID: string\n}\n\nconst NO_NEXT = -1\n\nexport const SinglePlayerLevelBoard = () => {\n  const logins = useContext(LoginContext)\n  const params = useParams<LevelBoardParams>()\n\n  const levelID = Number(params.levelID)\n  console.log(levelID)\n\n  const sid = params.sid\n  const [init, setInit] = useState<LevelResponse|undefined>()\n  const [nextSid, setNextSid] = useState<number>(NO_NEXT)\n  \n  const fetchInitLevelFromServer = () => {\n    const available = (logins.user?.levelFinished ?? -20) + 1\n    if (levelID <= available) {\n      const config: AxiosRequestConfig = {\n        params: {\n          levelID: levelID,\n        }\n      }\n      Axios.get<[LevelResponse, number]>(Paths.levelRequest, config)\n        .then(res => res.data)\n        .then(([res, nextSid]) => {\n          setInit(res)\n          setNextSid(nextSid)\n        })\n    }\n  }\n\n  useEffect(fetchInitLevelFromServer, [params, levelID])\n\n  useEffect(fetchInitLevelFromServer, [])\n\n  return (\n    init ? <LevelBoardComponent\n      title={`${init.title}`}\n      description={init.description}\n      initView={init.view}\n      nextUrl={nextSid === NO_NEXT ? \"\" : `/level/${nextSid}/${levelID + 1}`}\n      backUrl={`/levelPage/${sid}`}\n      submit={() => logins.passLevel(levelID)}\n    /> : <div>This level is still locked!</div>\n  )\n}"]},"metadata":{},"sourceType":"module"}