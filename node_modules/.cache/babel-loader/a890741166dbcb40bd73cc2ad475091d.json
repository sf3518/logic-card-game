{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/editor/LevelEditor.tsx\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { LoginContext } from '../../LoginContext';\nimport { useStyles } from '../game/appbar';\nimport { onIndex, moveFromTo, deleteCardAt, addHandCard, getAHandCard, insertCardTo, onGoalJson, moveWithin, deleteHandCard, changeCountHandCard } from './editorUtils';\nimport { EditorPremise } from './EditorPremise';\nimport { EditorHand } from './EditorHand';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport { parseGoalTreeSafe, getExprFromJson } from '../../server/gameApp/game/goal';\nimport { evalSuccess } from '../../game/views';\nimport { EditorGoal } from './EditorGoals';\nimport { EditorAllCards } from './EditorAllCards';\nimport Axios from 'axios';\nimport { Paths } from '../../routesPaths';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MButton from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { ChangeGoalDialogue } from './ChangeGoalDialogue';\nimport { Fab, Grid, Tooltip, GridList, GridListTile, BottomNavigation, TextField } from '@material-ui/core';\nimport { EditorModifyCardCountDialogue } from './EditorModifyCardCount';\nimport { parsePremiseSafe } from '../../server/gameApp/game/premise';\nexport const EditorContext = React.createContext({\n  state: {\n    kind: 'idle'\n  },\n  premises: [],\n  handCards: [],\n  goals: [],\n  lockedPremises: [],\n  goalTrees: [],\n  setIdle: () => {}\n});\nexport const LevelEditor = () => {\n  const classes = useStyles();\n  const logins = useContext(LoginContext);\n  const [state, setState] = useState({\n    kind: 'idle'\n  });\n  const [premises, setPremises] = useState([[], [], [], []]);\n  const [lockedPremises, setLockedPremises] = useState([0, 2, 3]);\n  const [handCards, setHandCards] = useState([]);\n  const [goals, setGoals] = useState([{\n    kind: 'prove',\n    expr: ['A']\n  }]);\n  const [goalTrees, setGoalTrees] = useState([]);\n  const [isSuccess, setSuccess] = useState(premises.map(_ => false));\n  const [isShowDrawer, setShowDrawer] = useState(false);\n  const [onConfirm, setOnConfirm] = useState(false);\n  const [onModifyCardPos, setModifyCardPos] = useState(0); // set goalTrees on goals change\n\n  useEffect(() => {\n    const trees = goals.map(g => parseGoalTreeSafe(g));\n    setGoalTrees(trees);\n    console.log(trees);\n    const gs = goals.map((g, i) => {\n      switch (g.kind) {\n        case 'paradox':\n        case 'tautology':\n          return {\n            kind: g.kind,\n            expr: undefined,\n            boolTree: undefined\n          };\n\n        default:\n          return trees[i] ? {\n            kind: g.kind,\n            expr: g.expr,\n            boolTree: trees[i]\n          } : undefined;\n      }\n    });\n    setSuccess(evalSuccess(premises, gs));\n  }, [goals, premises]);\n\n  const evictJson = () => {\n    const cards = [];\n    const limitedCards = [];\n    handCards.forEach(([card, count]) => {\n      if (count == Number.POSITIVE_INFINITY) {\n        cards.push(card);\n      } else {\n        limitedCards.push([card, count]);\n      }\n    });\n    const noEffects = premises.filter((p, i) => p.length == 0 && lockedPremises.includes(i)).map((_, i) => i);\n    const lockeds = [];\n    let offset = 0;\n    lockedPremises.forEach((lock, i) => {\n      if (noEffects.includes(i)) {\n        offset++;\n      } else {\n        lockeds.push(lock - offset);\n      }\n    });\n    return {\n      title: \"Some Level\",\n      premises: premises.filter((p, i) => !noEffects.includes(i)),\n      lockedPremises: lockeds,\n      cards: cards,\n      limitedCards: limitedCards,\n      goals: goals,\n      description: [\"Description paragraph 1.\", \"Description paragraph 2.\"]\n    };\n  }; // state handlers\n\n\n  const setSelect = select => {\n    setState({\n      kind: 'select',\n      select: select\n    });\n  };\n\n  const setIdle = () => setState({\n    kind: 'idle'\n  });\n\n  const setHandCardCount = (hpos, count) => {\n    const hcs = changeCountHandCard(hpos, count)(handCards).state;\n    setHandCards(hcs);\n    setIdle();\n  };\n\n  const setLockPremise = i => {\n    if (lockedPremises.includes(i)) {\n      setLockedPremises(lockedPremises.filter(j => j != i));\n    } else {\n      setLockedPremises(lockedPremises.concat(i));\n    }\n  };\n\n  const setAddGoal = () => {\n    setGoals(goals.concat({\n      kind: 'prove',\n      expr: []\n    }));\n  };\n\n  const setRemoveGoal = gid => {\n    setGoals(goals.filter((_, i) => gid != i));\n  };\n\n  const setModifyGoal = (gid, goal) => {\n    setGoals(goals.map((g, i) => i == gid ? goal : g));\n  };\n\n  const setOpenHandCardEditor = i => {\n    setModifyCardPos(i);\n    setState({\n      kind: 'changeHand'\n    });\n  }; // Drop event handlers\n\n\n  const onDropToPremise = (pid, ppos) => {\n    if (state.kind === 'select') {\n      const select = state.select;\n\n      switch (select.kind) {\n        case 'premise':\n          {\n            const ps = moveWithin(premises, onIndex(select.pid, deleteCardAt(select.ppos)), card => onIndex(pid, insertCardTo(card, ppos)));\n            setPremises(ps);\n            break;\n          }\n\n        case 'hand':\n          {\n            const [hcs, ps] = moveFromTo(handCards, getAHandCard(select.hpos), premises, card => onIndex(pid, insertCardTo(card, ppos)));\n            setPremises(ps);\n            setHandCards(hcs);\n            break;\n          }\n\n        case 'goal':\n          {\n            const [gs, ps] = moveFromTo(goals, onIndex(select.gid, onGoalJson(deleteCardAt(select.gpos))), premises, card => onIndex(pid, insertCardTo(card, ppos)));\n            setGoals(gs);\n            setPremises(ps);\n            break;\n          }\n\n        case 'all':\n          {\n            const ps = onIndex(pid, insertCardTo(select.card, ppos))(premises).state;\n            setPremises(ps);\n            break;\n          }\n      } //TODO: push to history\n\n\n      setIdle();\n    }\n  };\n\n  const onDropToHand = () => {\n    if (state.kind === 'select') {\n      const select = state.select;\n\n      switch (select.kind) {\n        case 'premise':\n          {\n            const [ps, hcs] = moveFromTo(premises, onIndex(select.pid, deleteCardAt(select.ppos)), handCards, card => addHandCard(card, 1));\n            setPremises(ps);\n            setHandCards(hcs);\n            break;\n          }\n\n        case 'hand':\n          {\n            const hcs = moveWithin(handCards, getAHandCard(select.hpos), card => addHandCard(card, 1));\n            setHandCards(hcs);\n            break;\n          }\n\n        case 'goal':\n          {\n            const [gs, hcs] = moveFromTo(goals, onIndex(select.gid, onGoalJson(deleteCardAt(select.gpos))), handCards, card => addHandCard(card, 1));\n            setGoals(gs);\n            setHandCards(hcs);\n            break;\n          }\n\n        case 'all':\n          {\n            const ps = addHandCard(select.card, 1)(handCards).state;\n            setHandCards(ps);\n            break;\n          }\n      } //TODO: push to history\n\n\n      setIdle();\n    }\n  };\n\n  const onDropToGoal = (gid, gpos) => {\n    if (state.kind === 'select') {\n      const select = state.select;\n\n      switch (select.kind) {\n        case 'premise':\n          {\n            const [ps, gs] = moveFromTo(premises, onIndex(select.pid, deleteCardAt(select.ppos)), goals, card => onIndex(gid, onGoalJson(insertCardTo(card, gpos))));\n            setPremises(ps);\n            setGoals(gs);\n            break;\n          }\n\n        case 'hand':\n          {\n            const [hcs, gs] = moveFromTo(handCards, getAHandCard(select.hpos), goals, card => onIndex(gid, onGoalJson(insertCardTo(card, gpos))));\n            setHandCards(hcs);\n            setGoals(gs);\n            break;\n          }\n\n        case 'goal':\n          {\n            const gs = moveWithin(goals, onIndex(select.gid, onGoalJson(deleteCardAt(select.gpos))), card => onIndex(gid, onGoalJson(insertCardTo(card, gpos))));\n            setGoals(gs);\n            break;\n          }\n\n        case 'all':\n          {\n            const gs = onIndex(gid, onGoalJson(insertCardTo(select.card, gpos)))(goals).state;\n            setGoals(gs);\n            break;\n          }\n      } //TODO: push to history\n\n\n      setIdle();\n    }\n  };\n\n  const onDropToAllCards = () => {\n    if (state.kind === 'select') {\n      const select = state.select;\n\n      switch (select.kind) {\n        case 'premise':\n          {\n            const ps = onIndex(select.pid, deleteCardAt(select.ppos))(premises).state;\n            setPremises(ps);\n            break;\n          }\n\n        case 'hand':\n          {\n            const hcs = deleteHandCard(select.hpos)(handCards).state;\n            setHandCards(hcs);\n            break;\n          }\n\n        case 'goal':\n          {\n            const gs = onIndex(select.gid, onGoalJson(deleteCardAt(select.gpos)))(goals).state;\n            setGoals(gs);\n            break;\n          }\n\n        case 'all':\n          {\n            break;\n          }\n      } //TODO: push to history\n\n\n      setIdle();\n    }\n  }; // misc actions\n\n\n  const toggleDrawer = open => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setShowDrawer(open);\n  };\n\n  const toggleConfirm = () => {\n    if (goals.length > 0 && goals.map(g => getExprFromJson(g)).every(expr => parsePremiseSafe(expr) !== undefined) && handCards.length > 0) {\n      setOnConfirm(true);\n    } else {\n      alert(\"This is not a valid level!\");\n    }\n  }; // post to server\n\n\n  const postJsonToServer = () => {\n    const data = {\n      user: logins.user,\n      level: evictJson()\n    };\n    Axios.post(Paths.submitLevelJson, data);\n  }; // rendering\n\n\n  const renderAppBar = () => /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    style: {\n      backgroundColor: '#F2994A'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }\n  }, \"Editor\"), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggleDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    open: isShowDrawer,\n    onClose: toggleDrawer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }\n  }, renderDrawerContent())));\n\n  const renderDrawerContent = () => {\n    const menu = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LinkContainer, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: \"menu\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Back to Main Menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 13\n      }\n    })))));\n    return menu;\n  };\n\n  const renderPremise = i => /*#__PURE__*/React.createElement(EditorPremise, {\n    category: {\n      kind: 'premise',\n      index: i\n    },\n    scale: 1,\n    onLock: () => setLockPremise(i),\n    onSelect: ppos => setSelect({\n      kind: 'premise',\n      pid: i,\n      ppos: ppos\n    }),\n    onDrop: ppos => onDropToPremise(i, ppos),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 40\n    }\n  });\n\n  const renderPremises = () => premises.map((_, i) => renderPremise(i));\n\n  const renderHand = () => /*#__PURE__*/React.createElement(EditorHand, {\n    onPick: hpos => setSelect({\n      kind: 'hand',\n      hpos: hpos\n    }),\n    onDoubleSelect: setOpenHandCardEditor,\n    onDrop: onDropToHand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 28\n    }\n  });\n\n  const renderModifyCardCount = () => /*#__PURE__*/React.createElement(EditorModifyCardCountDialogue, {\n    hpos: onModifyCardPos,\n    onSubmit: c => {\n      setHandCardCount(onModifyCardPos, c);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 5\n    }\n  });\n\n  const renderGoal = () => /*#__PURE__*/React.createElement(GridListTile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(EditorGoal, {\n    isSuccessful: isSuccess,\n    onSelect: (gid, gpos) => setSelect({\n      kind: 'goal',\n      gid: gid,\n      gpos: gpos\n    }),\n    onDrop: onDropToGoal,\n    onChange: gid => setState({\n      kind: 'changeGoal',\n      gid: gid,\n      newGoal: goals[gid]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 5\n    }\n  }));\n\n  const renderGoals = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 12\n      }\n    }, renderGoal(), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '40',\n        textAlign: 'left',\n        marginBottom: '20px',\n        marginRight: '70px',\n        position: 'absolute',\n        right: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Add a new goal\",\n      \"aria-label\": \"add\",\n      arrow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      style: {\n        left: 40,\n        backgroundColor: '#F2994A',\n        color: '#fff'\n      },\n      onClick: setAddGoal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      style: {\n        fontSize: '30'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Delete the last goal\",\n      \"aria-label\": \"del\",\n      arrow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      style: {\n        left: 40,\n        backgroundColor: '#A359A3',\n        color: '#fff',\n        margin: '20px'\n      },\n      onClick: () => setRemoveGoal(goals.length - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RemoveIcon, {\n      style: {\n        fontSize: '30'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(ChangeGoalDialogue, {\n      updateGoal: g => setState({\n        kind: 'changeGoal',\n        gid: state.kind == 'changeGoal' ? state.gid : -1,\n        newGoal: g\n      }),\n      confirmGoal: () => {\n        if (state.kind == 'changeGoal') {\n          setModifyGoal(state.gid, state.newGoal);\n        }\n      },\n      deleteGoal: gid => setRemoveGoal(gid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const renderAllCardsList = () => /*#__PURE__*/React.createElement(EditorAllCards, {\n    onSelect: c => setSelect({\n      kind: 'all',\n      card: c\n    }),\n    onDrop: onDropToAllCards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 36\n    }\n  });\n\n  const renderConfirmation = () => /*#__PURE__*/React.createElement(Dialog, {\n    open: onConfirm,\n    onClose: () => setOnConfirm(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 5\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 5\n    }\n  }, \"Are you sure you want to submit your level?\", /*#__PURE__*/React.createElement(GridList, {\n    cols: 1,\n    style: {\n      width: '300px',\n      height: '200px',\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridListTile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-read-only-input\",\n    label: \"Level Setup in JSON\",\n    multiline: true,\n    defaultValue: JSON.stringify(evictJson()),\n    InputProps: {\n      readOnly: true\n    },\n    style: {\n      marginTop: '20px'\n    },\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    onClick: postJsonToServer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }\n  }, \"Confirm\")));\n\n  const renderFooter = () => /*#__PURE__*/React.createElement(BottomNavigation, {\n    value: 0,\n    showLabels: true,\n    className: classes.root,\n    style: {\n      width: '100%',\n      position: 'sticky',\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 25\n      }\n    }),\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 5\n    }\n  }, \"EDIT DESCRIPTION\"), /*#__PURE__*/React.createElement(MButton, {\n    startIcon: /*#__PURE__*/React.createElement(FeedbackIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 25\n      }\n    }),\n    onClick: () => {},\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 5\n    }\n  }, \"SHOW TRUTH TABLE\"), /*#__PURE__*/React.createElement(MButton, {\n    startIcon: /*#__PURE__*/React.createElement(PublishIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 25\n      }\n    }),\n    onClick: toggleConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 5\n    }\n  }, \"SUBMIT\"));\n\n  return /*#__PURE__*/React.createElement(EditorContext.Provider, {\n    value: {\n      state: state,\n      premises: premises,\n      handCards: handCards,\n      goals: goals,\n      lockedPremises: lockedPremises,\n      goalTrees: goalTrees,\n      setIdle: setIdle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }\n  }, renderAppBar(), renderPremises(), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cols: 1,\n    style: {\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)',\n      height: '220px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }\n  }, renderGoals())), /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cols: 1,\n    style: {\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)',\n      height: '220px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 13\n    }\n  }, renderHand())), /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    alignContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 11\n    }\n  }, renderAllCardsList())), renderFooter(), renderConfirmation(), renderModifyCardCount()));\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/editor/LevelEditor.tsx"],"names":["React","useContext","useState","useEffect","LoginContext","useStyles","onIndex","moveFromTo","deleteCardAt","addHandCard","getAHandCard","insertCardTo","onGoalJson","moveWithin","deleteHandCard","changeCountHandCard","EditorPremise","EditorHand","AppBar","parseGoalTreeSafe","getExprFromJson","evalSuccess","EditorGoal","EditorAllCards","Axios","Paths","Dialog","DialogTitle","DialogContent","DialogActions","MButton","Divider","Toolbar","Typography","IconButton","Drawer","List","ListItem","ListItemText","LinkContainer","MenuIcon","AddIcon","EditIcon","RemoveIcon","FeedbackIcon","PublishIcon","ChangeGoalDialogue","Fab","Grid","Tooltip","GridList","GridListTile","BottomNavigation","TextField","EditorModifyCardCountDialogue","parsePremiseSafe","EditorContext","createContext","state","kind","premises","handCards","goals","lockedPremises","goalTrees","setIdle","LevelEditor","classes","logins","setState","setPremises","setLockedPremises","setHandCards","setGoals","expr","setGoalTrees","isSuccess","setSuccess","map","_","isShowDrawer","setShowDrawer","onConfirm","setOnConfirm","onModifyCardPos","setModifyCardPos","trees","g","console","log","gs","i","undefined","boolTree","evictJson","cards","limitedCards","forEach","card","count","Number","POSITIVE_INFINITY","push","noEffects","filter","p","length","includes","lockeds","offset","lock","title","description","setSelect","select","setHandCardCount","hpos","hcs","setLockPremise","j","concat","setAddGoal","setRemoveGoal","gid","setModifyGoal","goal","setOpenHandCardEditor","onDropToPremise","pid","ppos","ps","gpos","onDropToHand","onDropToGoal","onDropToAllCards","toggleDrawer","open","event","type","key","toggleConfirm","every","alert","postJsonToServer","data","user","level","post","submitLevelJson","renderAppBar","backgroundColor","menuButton","renderDrawerContent","menu","renderPremise","index","renderPremises","renderHand","renderModifyCardCount","c","renderGoal","newGoal","renderGoals","width","textAlign","marginBottom","marginRight","position","right","left","color","fontSize","margin","renderAllCardsList","renderConfirmation","height","marginTop","JSON","stringify","readOnly","renderFooter","root","bottom","flexWrap","transform"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport { LoginContext } from '../../LoginContext'\nimport { Premise, GoalInJSON, Card, Goal, LevelSetupJsonFormat } from '../../types'\nimport { State } from './state'\nimport { useStyles } from '../game/appbar'\nimport { \n  onIndex, \n  moveFromTo, \n  deleteCardAt, \n  addHandCard, \n  getAHandCard, \n  insertCardTo, \n  onGoalJson, \n  moveWithin, \n  deleteHandCard, \n  changeCountHandCard } from './editorUtils'\nimport { EditorPremise } from './EditorPremise'\nimport { EditorHand } from './EditorHand'\nimport { BoolTree } from '../../server/gameApp/logicResolver/bools'\nimport AppBar from '@material-ui/core/AppBar/AppBar'\nimport { fromGoalJson, parseGoalTreeSafe, getExprFromJson } from '../../server/gameApp/game/goal'\nimport { evalSuccess } from '../../game/views'\nimport { EditorGoal } from './EditorGoals'\nimport { EditorAllCards } from './EditorAllCards'\nimport { Button } from 'react-bootstrap'\nimport Axios, { AxiosRequestConfig } from 'axios'\nimport { Paths } from '../../routesPaths'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport MButton from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AddIcon from '@material-ui/icons/Add'\nimport EditIcon from '@material-ui/icons/Edit'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport FeedbackIcon from '@material-ui/icons/Feedback'\nimport PublishIcon from '@material-ui/icons/Publish'\nimport { ChangeGoalDialogue } from './ChangeGoalDialogue'\nimport { Fab, Grid, Tooltip, GridList, GridListTile, BottomNavigation, TextField } from '@material-ui/core'\nimport { EditorModifyCardCountDialogue } from './EditorModifyCardCount'\nimport { parsePremise, parsePremiseSafe } from '../../server/gameApp/game/premise'\n\n\ntype EditorState = { kind: 'idle' }\n                 | { kind: 'changeHand' }\n                 | { kind: 'select', select: SelectState }\n                 | { kind: 'changeGoal', gid: number, newGoal: GoalInJSON }\n\ntype SelectState = { kind: 'premise', pid: number, ppos: number }\n                 | { kind: 'hand', hpos: number }\n                 | { kind: 'goal', gid: number, gpos: number }\n                 | { kind: 'all', card: Card }\n\ntype EditorContexts = {\n  state: EditorState\n  premises: Premise[]\n  handCards: [Card, number][]\n  goals: GoalInJSON[]\n  goalTrees: (BoolTree | undefined)[]\n  lockedPremises: number[]\n  setIdle: () => void\n}\n\nexport const EditorContext = React.createContext<EditorContexts>({\n  state: { kind: 'idle' },\n  premises: [],\n  handCards: [],\n  goals: [],\n  lockedPremises: [],\n  goalTrees: [],\n  setIdle: () => {}\n})\n\nexport const LevelEditor = () => {\n  const classes = useStyles()\n  const logins = useContext(LoginContext)\n  const [state, setState] = useState<EditorState>({ kind: 'idle' })\n  const [premises, setPremises] = useState<Premise[]>([[], [], [], []])\n  const [lockedPremises, setLockedPremises] = useState<number[]>([0,2,3])\n  const [handCards, setHandCards] = useState<[Card, number][]>([])\n  const [goals, setGoals] = useState<GoalInJSON[]>([{ kind: 'prove', expr: ['A']}])\n  const [goalTrees, setGoalTrees] = useState<(BoolTree|undefined)[]>([])\n  const [isSuccess, setSuccess] = useState<boolean[]>(premises.map(_ => false))\n  const [isShowDrawer, setShowDrawer] = useState(false)\n  const [onConfirm, setOnConfirm] = useState(false)\n  const [onModifyCardPos, setModifyCardPos] = useState<number>(0)\n\n  // set goalTrees on goals change\n  useEffect(() => {\n    const trees = goals.map(g => parseGoalTreeSafe(g))\n    setGoalTrees(trees)\n    console.log(trees)\n    \n    const gs: (Goal | undefined)[] = goals.map((g, i) => { \n      switch (g.kind) {\n        case 'paradox':\n        case 'tautology':\n          return { kind: g.kind, expr: undefined, boolTree: undefined }      \n        default:\n          return trees[i] ? { kind: g.kind, expr: g.expr, boolTree: trees[i]! } : undefined\n      }\n    })\n    setSuccess(evalSuccess(premises, gs))\n  }, [goals, premises])\n\n  const evictJson = (): LevelSetupJsonFormat => {\n    const cards: Card[] = []\n    const limitedCards: [Card, number][] = []\n    handCards.forEach(([card, count]) => {\n      if (count == Number.POSITIVE_INFINITY) {\n        cards.push(card)\n      } else {\n        limitedCards.push([card, count])\n      }\n    })\n\n    const noEffects = premises.filter((p, i) => p.length == 0 && lockedPremises.includes(i)).map((_, i) => i)\n    const lockeds: number[] = []\n    let offset = 0\n    lockedPremises.forEach((lock, i) => {\n      if (noEffects.includes(i)) {\n        offset++\n      } else {\n        lockeds.push(lock - offset)\n      }\n    })\n    return {\n      title: \"Some Level\",\n      premises: premises.filter((p, i) => !noEffects.includes(i)),\n      lockedPremises: lockeds,  \n      cards: cards,\n      limitedCards: limitedCards,\n      goals: goals,\n      description: [\n        \"Description paragraph 1.\",\n        \"Description paragraph 2.\"\n      ]\n    }\n  }\n\n  // state handlers\n\n  const setSelect = (select: SelectState) => {\n    setState({ kind: 'select', select: select })\n  }\n\n  const setIdle = () => setState({ kind: 'idle' })\n\n  const setHandCardCount = (hpos: number, count: number) => {\n    const hcs = changeCountHandCard(hpos, count)(handCards).state\n    setHandCards(hcs)\n    setIdle()\n  }\n\n  const setLockPremise = (i: number) => {\n    if (lockedPremises.includes(i)) {\n      setLockedPremises(lockedPremises.filter(j => j != i))\n    } else {\n      setLockedPremises(lockedPremises.concat(i))\n    }\n  }\n\n  const setAddGoal = () => {\n    setGoals(goals.concat({ kind: 'prove', expr: [] }))    \n  }\n\n  const setRemoveGoal = (gid: number) => {\n    setGoals(goals.filter((_, i) => gid != i))\n  }\n\n  const setModifyGoal = (gid: number, goal: GoalInJSON) => {\n    setGoals(goals.map((g, i) => i == gid ? goal : g))\n  }\n\n  const setOpenHandCardEditor = (i: number) => {\n    setModifyCardPos(i)\n    setState({ kind: 'changeHand' })\n  }\n\n\n  // Drop event handlers\n  const onDropToPremise = (pid: number, ppos: number) => {\n    if (state.kind === 'select') {\n      const select = state.select\n      switch (select.kind) {\n        case 'premise': {\n          const ps = moveWithin(premises, onIndex(select.pid, deleteCardAt(select.ppos)), card => onIndex(pid, insertCardTo(card, ppos)))\n          setPremises(ps)\n          break\n        } \n        case 'hand': {\n          const [hcs, ps] = moveFromTo(\n            handCards, getAHandCard(select.hpos), \n            premises, card => onIndex(pid, insertCardTo(card, ppos))\n          )\n          setPremises(ps)\n          setHandCards(hcs)\n          break\n        }\n        case 'goal': {\n          const [gs, ps] = moveFromTo(\n            goals, onIndex(select.gid, onGoalJson(deleteCardAt(select.gpos))),\n            premises, card => onIndex(pid, insertCardTo(card, ppos))\n          )\n          setGoals(gs)\n          setPremises(ps)\n          break\n        }\n        case 'all': {\n          const ps = onIndex(pid, insertCardTo(select.card, ppos))(premises).state\n          setPremises(ps)\n          break\n        }\n      }\n      //TODO: push to history\n      setIdle()\n    }\n  }\n\n  const onDropToHand = () => {\n    if (state.kind === 'select') {\n      const select = state.select\n      switch (select.kind) {\n        case 'premise': {\n          const [ps, hcs] = moveFromTo(\n            premises, onIndex(select.pid, deleteCardAt(select.ppos)), \n            handCards, card => addHandCard(card, 1)\n          )\n          setPremises(ps)\n          setHandCards(hcs)\n          break\n        } \n        case 'hand': {\n          const hcs = moveWithin(handCards, getAHandCard(select.hpos), card => addHandCard(card, 1))\n          setHandCards(hcs)\n          break\n        }\n        case 'goal': {\n          const [gs, hcs] = moveFromTo(\n            goals, onIndex(select.gid, onGoalJson(deleteCardAt(select.gpos))),\n            handCards, card => addHandCard(card, 1)\n          )\n          setGoals(gs)\n          setHandCards(hcs)\n          break\n        }\n        case 'all': {\n          const ps = addHandCard(select.card, 1)(handCards).state\n          setHandCards(ps)\n          break\n        }\n      }\n      //TODO: push to history\n      setIdle()\n\n    }\n  }\n\n  const onDropToGoal = (gid: number, gpos: number) => {\n    if (state.kind === 'select') {\n      const select = state.select\n      switch (select.kind) {\n        case 'premise': {\n          const [ps, gs] = moveFromTo(\n            premises, onIndex(select.pid, deleteCardAt(select.ppos)), \n            goals, card => onIndex(gid, onGoalJson(insertCardTo(card, gpos)))\n          )\n          setPremises(ps)\n          setGoals(gs)\n          break\n        } \n        case 'hand': {\n          const [hcs, gs] = moveFromTo(\n            handCards, getAHandCard(select.hpos), \n            goals, card => onIndex(gid, onGoalJson(insertCardTo(card, gpos)))\n          )\n          setHandCards(hcs)\n          setGoals(gs)\n          break\n        }\n        case 'goal': {\n          const gs = moveWithin(\n            goals, \n            onIndex(select.gid, onGoalJson(deleteCardAt(select.gpos))), \n            card => onIndex(gid, onGoalJson(insertCardTo(card, gpos)))\n          )\n          setGoals(gs)\n          break\n        }\n        case 'all': {\n          const gs = onIndex(gid, onGoalJson(insertCardTo(select.card, gpos)))(goals).state\n          setGoals(gs)\n          break\n        }\n      }\n      //TODO: push to history\n      setIdle()\n    }\n  }\n\n  const onDropToAllCards = () => {\n    if (state.kind === 'select') {\n      const select = state.select\n      switch (select.kind) {\n        case 'premise': {\n          const ps = onIndex(select.pid, deleteCardAt(select.ppos))(premises).state\n          setPremises(ps)\n          break\n        } \n        case 'hand': {\n          const hcs = deleteHandCard(select.hpos)(handCards).state\n          setHandCards(hcs)\n          break\n        }\n        case 'goal': {\n          const gs = onIndex(select.gid, onGoalJson(deleteCardAt(select.gpos)))(goals).state\n          setGoals(gs)\n          break\n        }\n        case 'all': {\n          break\n        }\n      }\n      //TODO: push to history\n      setIdle()\n    }\n  }\n\n  // misc actions\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent,\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return\n    }\n    setShowDrawer(open)\n  } \n\n  const toggleConfirm = () => {\n    if (goals.length > 0 \n      && goals.map(g => getExprFromJson(g)).every(expr => parsePremiseSafe(expr) !== undefined)\n      && handCards.length > 0) {\n        setOnConfirm(true)\n    } else {\n      alert(\"This is not a valid level!\")\n    }\n  }\n\n  // post to server\n  const postJsonToServer = () => {\n    const data = {\n      user: logins.user,\n      level: evictJson() \n    }\n    Axios.post(Paths.submitLevelJson, data)\n  }\n\n  // rendering\n\n  const renderAppBar = () => <AppBar position=\"static\">\n    <Toolbar style={{ backgroundColor: '#F2994A'}}>\n      <Typography variant=\"h6\" className={classes.title}>\n        Editor\n      </Typography>\n      <IconButton \n        edge=\"start\" \n        className={classes.menuButton} \n        color=\"inherit\" \n        aria-label=\"menu\"\n        onClick={toggleDrawer(true)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Drawer anchor=\"right\" open={isShowDrawer} onClose={toggleDrawer(false)}>\n        {renderDrawerContent()}\n      </Drawer>\n    </Toolbar>\n  </AppBar>\n\n  const renderDrawerContent = (): JSX.Element => {\n    const menu = <div>\n      <List>\n        <LinkContainer to='/'>\n          <ListItem button key=\"menu\" onClick={() => {}}>\n            <ListItemText primary=\"Back to Main Menu\"/>\n          </ListItem>\n        </LinkContainer>\n      </List>\n    </div>\n    return menu\n  }\n\n  const renderPremise = (i: number) => <EditorPremise \n    category={{ kind: 'premise', index: i }} \n    scale={1} \n    onLock={() => setLockPremise(i)}\n    onSelect={ppos => setSelect({ kind: 'premise', pid: i, ppos: ppos })}\n    onDrop={ppos => onDropToPremise(i, ppos)}\n  />\n\n  const renderPremises = () => premises.map((_, i) => renderPremise(i))\n\n  const renderHand = () => <EditorHand\n    onPick={hpos => setSelect({ kind: 'hand', hpos: hpos})}\n    onDoubleSelect={setOpenHandCardEditor}\n    onDrop={onDropToHand}\n  />\n\n  const renderModifyCardCount = () => \n    <EditorModifyCardCountDialogue\n      hpos={onModifyCardPos}\n      onSubmit={c => {\n        setHandCardCount(onModifyCardPos, c)\n      }}\n    />  \n\n  const renderGoal = () => <GridListTile>\n    <EditorGoal\n      isSuccessful={isSuccess}\n      onSelect={(gid, gpos) => setSelect({ kind: 'goal', gid: gid, gpos: gpos})}\n      onDrop={onDropToGoal}\n      onChange={gid => setState({ kind: 'changeGoal', gid: gid, newGoal: goals[gid] })}\n    />\n  </GridListTile>\n\n  const renderGoals = () => {\n    return <div>\n      {renderGoal()}\n      <div style={{ width: '40', textAlign: 'left', marginBottom: '20px', marginRight: '70px', position: 'absolute', right: '0'}}>\n        <Tooltip title=\"Add a new goal\" aria-label=\"add\" arrow>\n          <Fab style={{ left: 40, backgroundColor: '#F2994A', color:'#fff' }} onClick={setAddGoal}>\n            <AddIcon style={{ fontSize: '30' }}/>\n          </Fab>\n        </Tooltip>\n        <Tooltip title=\"Delete the last goal\" aria-label=\"del\" arrow>\n          <Fab \n            style={{ left: 40, backgroundColor: '#A359A3', color:'#fff', margin: '20px' }} \n            onClick={() => setRemoveGoal(goals.length - 1)}\n          >\n            <RemoveIcon style={{ fontSize: '30' }}/>\n          </Fab>\n        </Tooltip>\n      </div>\n      <ChangeGoalDialogue\n        updateGoal={g => setState({kind: 'changeGoal', gid: state.kind == 'changeGoal' ? state.gid : -1, newGoal: g })}\n        confirmGoal={() => {\n          if (state.kind == 'changeGoal') {\n            setModifyGoal(state.gid, state.newGoal)\n          }\n        }}\n        deleteGoal={gid => setRemoveGoal(gid)}\n      />\n    </div>\n  }\n\n  const renderAllCardsList = () => <EditorAllCards\n    onSelect={c => setSelect({ kind: 'all', card: c })}\n    onDrop={onDropToAllCards}\n  />\n\n  const renderConfirmation = () => <Dialog open={onConfirm} onClose={() => setOnConfirm(false)}>\n    <DialogTitle>Submit</DialogTitle>\n    <DialogContent>\n      Are you sure you want to submit your level?\n      <GridList cols={1} style={{ width: '300px', height: '200px', marginTop: '10px'}}>\n        <GridListTile>\n          <TextField\n            id=\"outlined-read-only-input\"\n            label=\"Level Setup in JSON\"\n            multiline\n            defaultValue={JSON.stringify(evictJson())}\n            InputProps={{\n              readOnly: true,\n            }}\n            style={{ marginTop: '20px'}}\n            variant=\"outlined\"\n            fullWidth\n          />\n        </GridListTile>\n      </GridList>\n    </DialogContent>\n    <Divider/>\n    <DialogActions>\n      <MButton onClick={postJsonToServer}>Confirm</MButton>\n    </DialogActions>\n  </Dialog>\n\n  const renderFooter = () => <BottomNavigation\n    value={0}\n    showLabels\n    className={classes.root}\n    style={{\n      width: '100%',\n      position: 'sticky',\n      bottom: 0,\n    }}\n  > \n    <MButton startIcon={<EditIcon/>} onClick={() => {}}>EDIT DESCRIPTION</MButton>  \n    <MButton startIcon={<FeedbackIcon/>} onClick={() => {}} disabled>SHOW TRUTH TABLE</MButton>  \n    <MButton startIcon={<PublishIcon/>} onClick={toggleConfirm}>SUBMIT</MButton>  \n  </BottomNavigation>\n\n  return (\n    <EditorContext.Provider value={{\n      state: state,\n      premises: premises,\n      handCards: handCards,\n      goals: goals,\n      lockedPremises: lockedPremises,\n      goalTrees: goalTrees,\n      setIdle: setIdle\n    }}>\n      <div>\n        {renderAppBar()}\n        {renderPremises()}\n        <Divider style={{ margin: '10px' }}/>\n        <Grid container>\n          <Grid item xs={4}>\n            <GridList cols={1} style={{ flexWrap: 'nowrap', transform: 'translateZ(0)', height: '220px'}}>\n              {renderGoals()}\n            </GridList>\n          </Grid>\n          <Divider orientation=\"vertical\" flexItem />\n          <Grid item xs={4}>\n            <GridList cols={1} style={{ flexWrap: 'nowrap', transform: 'translateZ(0)', height: '220px'}}>\n              {renderHand()}\n            </GridList>\n          </Grid>\n          <Divider orientation=\"vertical\" flexItem />\n          <Grid item alignContent='center'>\n            {renderAllCardsList()}\n          </Grid>\n        </Grid>\n        {renderFooter()}\n        {renderConfirmation()}\n        {renderModifyCardCount()}\n      </div>\n    </EditorContext.Provider>\n  )\n  \n}"]},"metadata":{},"sourceType":"module"}