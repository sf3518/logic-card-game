{"ast":null,"code":"import React,{useContext}from'react';import Dialog from'@material-ui/core/Dialog';import DialogTitle from'@material-ui/core/DialogTitle/DialogTitle';import DialogContent from'@material-ui/core/DialogContent';import DialogActions from'@material-ui/core/DialogActions';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormControl from'@material-ui/core/FormControl';import FormLabel from'@material-ui/core/FormLabel';import RadioGroup from'@material-ui/core/RadioGroup';import Radio from'@material-ui/core/Radio';import MButton from'@material-ui/core/Button';import{EditorContext}from'./LevelEditor';import{getExprFromJson}from'../../server/gameApp/game/goal';export var ChangeGoalDialogue=function ChangeGoalDialogue(_ref){var updateGoal=_ref.updateGoal,confirmGoal=_ref.confirmGoal,deleteGoal=_ref.deleteGoal;var context=useContext(EditorContext);var state=context.state;var goal=state.kind=='changeGoal'?state.newGoal:undefined;var index=state.kind=='changeGoal'?state.gid:-1;var handleRadioChange=function handleRadioChange(event){changeGoalAim(event.target.value);};var changeGoalAim=function changeGoalAim(goalKind){if(goal){switch(goalKind){case'paradox':case'tautology':updateGoal({kind:goalKind});default:var expr=getExprFromJson(goal);updateGoal({kind:goalKind,expr:expr});}}};return/*#__PURE__*/React.createElement(Dialog,{open:context.state.kind=='changeGoal',onClose:context.setIdle},/*#__PURE__*/React.createElement(DialogTitle,null,\"Change Goal No. \"+(index+1)),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\"},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\"},\"Choose aim\"),/*#__PURE__*/React.createElement(RadioGroup,{\"aria-label\":\"Select aim\",name:\"aim\",value:goal===null||goal===void 0?void 0:goal.kind,onChange:handleRadioChange},/*#__PURE__*/React.createElement(FormControlLabel,{value:\"prove\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Prove\"}),/*#__PURE__*/React.createElement(FormControlLabel,{value:\"disprove\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Disprove\"}),/*#__PURE__*/React.createElement(FormControlLabel,{value:\"unknown\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Unknown\"}),/*#__PURE__*/React.createElement(FormControlLabel,{value:\"equivalent\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Equivalent\"}),/*#__PURE__*/React.createElement(FormControlLabel,{value:\"tautology\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Tautology\"}),/*#__PURE__*/React.createElement(FormControlLabel,{value:\"paradox\",control:/*#__PURE__*/React.createElement(Radio,null),label:\"Paradox\"})))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(MButton,{onClick:function onClick(){confirmGoal();context.setIdle();}},\"CONFIRM\"),/*#__PURE__*/React.createElement(MButton,{onClick:function onClick(){deleteGoal(index);context.setIdle();},color:\"secondary\"},\"DELETE THIS GOAL\")));};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/editor/ChangeGoalDialogue.tsx"],"names":["React","useContext","Dialog","DialogTitle","DialogContent","DialogActions","FormControlLabel","FormControl","FormLabel","RadioGroup","Radio","MButton","EditorContext","getExprFromJson","ChangeGoalDialogue","updateGoal","confirmGoal","deleteGoal","context","state","goal","kind","newGoal","undefined","index","gid","handleRadioChange","event","changeGoalAim","target","value","goalKind","expr","setIdle"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport MButton from '@material-ui/core/Button'\nimport { EditorContext } from './LevelEditor'\nimport { GoalInJSON, GoalKind } from '../../types'\nimport { getExprFromJson } from '../../server/gameApp/game/goal'\n\ninterface Props {\n  updateGoal: (goal: GoalInJSON) => void\n  confirmGoal: () => void\n  deleteGoal: (gid: number) => void\n}\n\nexport const ChangeGoalDialogue = ({\n  updateGoal,\n  confirmGoal,\n  deleteGoal\n}: Props) => {\n  const context = useContext(EditorContext)\n  const state = context.state\n  const goal = state.kind == 'changeGoal' ? state.newGoal : undefined\n  const index = state.kind == 'changeGoal' ? state.gid : -1\n\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeGoalAim(event.target.value as GoalKind)\n  }\n\n  const changeGoalAim = (goalKind: GoalKind) => {\n    if (goal) {\n      switch(goalKind) {\n        case 'paradox':\n        case 'tautology':\n          updateGoal({ kind: goalKind })\n        default:\n          const expr = getExprFromJson(goal)\n          updateGoal({ kind: goalKind, expr: expr })\n      }\n    }\n  }\n   \n  return (\n    <Dialog open={context.state.kind == 'changeGoal'} onClose={context.setIdle}>\n      <DialogTitle>{\"Change Goal No. \" + (index + 1)}</DialogTitle>\n      <DialogContent> \n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Choose aim</FormLabel>\n          <RadioGroup aria-label=\"Select aim\" name=\"aim\" value={goal?.kind} onChange={handleRadioChange}>\n            <FormControlLabel value='prove' control={<Radio/>} label='Prove'/>\n            <FormControlLabel value='disprove' control={<Radio/>} label='Disprove'/>\n            <FormControlLabel value='unknown' control={<Radio/>} label='Unknown'/>\n            <FormControlLabel value='equivalent' control={<Radio/>} label='Equivalent'/>\n            <FormControlLabel value='tautology' control={<Radio/>} label='Tautology'/>\n            <FormControlLabel value='paradox' control={<Radio/>} label='Paradox'/>\n          </RadioGroup>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <MButton onClick={() => { confirmGoal(); context.setIdle() }}>CONFIRM</MButton>\n        <MButton onClick={() => { deleteGoal(index!!); context.setIdle() }} color=\"secondary\">DELETE THIS GOAL</MButton>\n      </DialogActions>\n    </Dialog>\n  )\n}"]},"metadata":{},"sourceType":"module"}