{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/entry/levelPage.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport '../entry/Entry.css';\nimport '../entry/levelPage.css';\nimport { LevelButton } from './levelButton';\nimport { useParams } from 'react-router';\nimport Axios from 'axios';\nimport { Paths } from '../../routesPaths';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport { Grid, AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport { useStyles } from '../appbar';\nimport MenuIcon from '@material-ui/icons/MenuOpenOutlined';\nexport const LevelPage = () => {\n  const {\n    sid\n  } = useParams();\n  const classes = useStyles();\n  const [startLevelID, setStartLevelID] = useState(0);\n  const [endLevelID, setEndLevelID] = useState(0);\n  const [[hasPrev, hasNext], setPrevNext] = useState([false, false]);\n  const [inAvailables, setInavailables] = useState([]);\n  const [title, setTitle] = useState(\"Title\");\n  useEffect(() => {\n    const config = {\n      params: {\n        sid: sid\n      }\n    };\n    Axios.get(Paths.levelPageInfo, config).then(res => res.data).then(res => {\n      setTitle(res.title);\n      setStartLevelID(res.startID);\n      setEndLevelID(res.startID + res.levelsCount - 1);\n      setPrevNext([res.hasPrev, res.hasNext]);\n      setInavailables(res.inAvailables);\n    });\n  }, [sid]);\n\n  const renderTable = () => {\n    const renderRow = (startID, count) => {\n      const row = [];\n\n      for (let i = startID; i < count + startID; i++) {\n        row.push( /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            verticalAlign: \"middle\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(LevelButton, {\n          sectionID: Number(sid),\n          levelID: i,\n          isAvailable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }\n      }, row);\n    };\n\n    const totalCount = endLevelID - startLevelID + 1;\n    let numberOfRows = 1;\n\n    for (let i = Math.floor(Math.sqrt(totalCount)); i > 1; i--) {\n      if (totalCount % i === 0) {\n        numberOfRows = i;\n        break;\n      }\n    }\n\n    const rowCount = Math.floor(totalCount / numberOfRows) + (totalCount % numberOfRows == 0 ? 0 : 1);\n    const table = [];\n\n    for (let i = 0, start = startLevelID; i < numberOfRows; i++, start += rowCount) {\n      table.push(renderRow(start, rowCount));\n    }\n\n    return /*#__PURE__*/React.createElement(\"table\", {\n      style: {\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }\n    }, table);\n  };\n\n  const renderButton = navTo => {\n    if (navTo === \"prev\" && hasPrev || navTo === \"next\" && hasNext) {\n      const navSID = Number(sid) + (navTo === \"prev\" ? -1 : 1);\n      const style = {\n        fontSize: 100\n      };\n      return /*#__PURE__*/React.createElement(LinkContainer, {\n        to: \"/levelPage/\" + navSID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, navTo === \"prev\" ? /*#__PURE__*/React.createElement(KeyboardArrowLeftIcon, {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(KeyboardArrowRightIcon, {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      })));\n    }\n\n    return undefined;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    style: {\n      backgroundColor: \"#F2994A\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Levels\"), /*#__PURE__*/React.createElement(LinkContainer, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"levelPageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, renderButton(\"prev\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, renderTable()), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, renderButton(\"next\"))));\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/entry/levelPage.tsx"],"names":["React","useEffect","useState","LevelButton","useParams","Axios","Paths","LinkContainer","KeyboardArrowRightIcon","KeyboardArrowLeftIcon","Grid","AppBar","Toolbar","IconButton","Typography","useStyles","MenuIcon","LevelPage","sid","classes","startLevelID","setStartLevelID","endLevelID","setEndLevelID","hasPrev","hasNext","setPrevNext","inAvailables","setInavailables","title","setTitle","config","params","get","levelPageInfo","then","res","data","startID","levelsCount","renderTable","renderRow","count","row","i","push","verticalAlign","Number","totalCount","numberOfRows","Math","floor","sqrt","rowCount","table","start","margin","renderButton","navTo","navSID","style","fontSize","undefined","textAlign","backgroundColor","menuButton","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../entry/Entry.css';\nimport '../entry/levelPage.css';\nimport { LevelButton } from './levelButton'\nimport { Button } from 'react-bootstrap'\nimport { useParams } from 'react-router';\nimport Axios, { AxiosRequestConfig } from 'axios';\nimport { Paths } from '../../routesPaths';\nimport { LevelPageInfo } from '../../types';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport { Grid, Button as MButton, AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport { useStyles } from '../appbar'\n\nimport MenuIcon from '@material-ui/icons/MenuOpenOutlined';\n\ninterface LevelPageParams {\n  sid: string;\n}\n\nexport const LevelPage = (): JSX.Element => {\n  const { sid } = useParams<LevelPageParams>();\n  const classes = useStyles();\n  const [startLevelID, setStartLevelID] = useState(0);\n  const [endLevelID, setEndLevelID] = useState(0);\n  const [[hasPrev, hasNext], setPrevNext] = useState([false, false]);\n  const [inAvailables, setInavailables] = useState<number[]>([]);\n  const [title, setTitle] = useState(\"Title\");\n\n  useEffect(() => {\n    const config: AxiosRequestConfig = {\n      params: {\n        sid: sid,\n      },\n    };\n    Axios.get<LevelPageInfo>(Paths.levelPageInfo, config)\n      .then((res) => res.data)\n      .then((res) => {\n        setTitle(res.title);\n        setStartLevelID(res.startID);\n        setEndLevelID(res.startID + res.levelsCount - 1);\n        setPrevNext([res.hasPrev, res.hasNext]);\n        setInavailables(res.inAvailables);\n      });\n  }, [sid]);\n\n  const renderTable = (): JSX.Element => {\n    const renderRow = (startID: number, count: number) => {\n      const row: JSX.Element[] = [];\n      for (let i = startID; i < count + startID; i++) {\n        row.push(\n          <td style={{ verticalAlign: \"middle\" }}>\n            <LevelButton\n              sectionID={Number(sid)}\n              levelID={i}\n              isAvailable={true}\n            />\n          </td>\n        );\n      }\n      return <tr>{row}</tr>;\n    };\n\n    const totalCount = endLevelID - startLevelID + 1;\n    let numberOfRows = 1;\n    for (let i = Math.floor(Math.sqrt(totalCount)); i > 1; i--) {\n      if (totalCount % i === 0) {\n        numberOfRows = i;\n        break;\n      }\n    }\n    const rowCount =\n      Math.floor(totalCount / numberOfRows) +\n      (totalCount % numberOfRows == 0 ? 0 : 1);\n    const table: JSX.Element[] = [];\n    for (\n      let i = 0, start = startLevelID;\n      i < numberOfRows;\n      i++, start += rowCount\n    ) {\n      table.push(renderRow(start, rowCount));\n    }\n    return <table style={{ margin: \"auto\" }}>{table}</table>;\n  };\n\n  const renderButton = (navTo: \"prev\" | \"next\") => {\n    if ((navTo === \"prev\" && hasPrev) || (navTo === \"next\" && hasNext)) {\n      const navSID = Number(sid) + (navTo === \"prev\" ? -1 : 1);\n      const style = { fontSize: 100 };\n      return (\n        <LinkContainer to={\"/levelPage/\" + navSID}>\n          <IconButton>\n            {navTo === \"prev\" ? (\n              <KeyboardArrowLeftIcon style={style} />\n            ) : (\n              <KeyboardArrowRightIcon style={style} />\n            )}\n          </IconButton>\n        </LinkContainer>\n      );\n    }\n    return undefined;\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <AppBar position=\"static\">\n        <Toolbar style={{ backgroundColor: \"#F2994A\" }}>\n          <Typography variant=\"h6\" className={classes.title}>\n            Levels\n          </Typography>\n          <LinkContainer to=\"/\">\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </LinkContainer>\n        </Toolbar>\n      </AppBar>\n      <div className=\"levelPageTitle\">\n        <h1>{title}</h1>\n      </div>\n      <div style={{ height: \"2rem\" }}></div>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={1}>\n          {renderButton(\"prev\")}\n        </Grid>\n        <Grid item xs={10}>\n          {renderTable()}\n        </Grid>\n        <Grid item xs={1}>\n          {renderButton(\"next\")}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}