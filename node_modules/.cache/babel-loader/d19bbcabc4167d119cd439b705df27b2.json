{"ast":null,"code":"import _slicedToArray from\"/Users/johnny/IC/Computing/year2/DRP/drp48/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{ArenaNavBar}from'./ArenaNavBar';import{ArenaContext}from'./arenaContext';import{ArenaMainBoard}from'./ArenaMainBoard';import Axios from'axios';import{Paths}from'../../routesPaths';export var Arena=function Arena(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),filters=_useState2[0],setFilters=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),levels=_useState4[0],setLevels=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setLoading=_useState6[1];var setAddFilter=function setAddFilter(filter){return setFilters(filters.concat(filter));};var setRemoveFilter=function setRemoveFilter(i){return setFilters(filters.filter(function(_,j){return i===j;}));};var setClearFilters=function setClearFilters(){return setFilters([]);};var setAddLevels=function setAddLevels(ls){return setLevels(levels.concat(ls));};var setClearLevels=function setClearLevels(){return setLevels([]);};var fetchMore=function fetchMore(){setLoading(true);var config={params:{count:10,offset:levels.length}};Axios.get(Paths.fetchNewLevels,config).then(function(res){return res.data;}).then(function(res){if(res.length==0){alert(\"No more levels can be found\");}setAddLevels(res);}).then(function(_){return setLoading(false);}).catch(function(err){alert(err);setLoading(false);});};// Initial fetching\nuseEffect(fetchMore,[]);return/*#__PURE__*/React.createElement(ArenaContext.Provider,{value:{filters:filters}},/*#__PURE__*/React.createElement(ArenaNavBar,null),/*#__PURE__*/React.createElement(ArenaMainBoard,{onShowMore:fetchMore,levels:levels,isLoading:isLoading}));};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/arena/Arena.tsx"],"names":["React","useState","useEffect","ArenaNavBar","ArenaContext","ArenaMainBoard","Axios","Paths","Arena","filters","setFilters","levels","setLevels","isLoading","setLoading","setAddFilter","filter","concat","setRemoveFilter","i","_","j","setClearFilters","setAddLevels","ls","setClearLevels","fetchMore","config","params","count","offset","length","get","fetchNewLevels","then","res","data","alert","catch","err"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA,OAASC,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,KAAP,KAA0C,OAA1C,CACA,OAASC,KAAT,KAAsB,mBAAtB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAmB,eAERP,QAAQ,CAAiB,EAAjB,CAFA,wCAE/BQ,OAF+B,eAEtBC,UAFsB,8BAGVT,QAAQ,CAAc,EAAd,CAHE,yCAG/BU,MAH+B,eAGvBC,SAHuB,8BAINX,QAAQ,CAAC,IAAD,CAJF,yCAI/BY,SAJ+B,eAIpBC,UAJoB,eAMtC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,QAA0BN,CAAAA,UAAU,CAACD,OAAO,CAACQ,MAAR,CAAeD,MAAf,CAAD,CAApC,EAArB,CAEA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,QAAeT,CAAAA,UAAU,CAACD,OAAO,CAACO,MAAR,CAAe,SAACI,CAAD,CAAIC,CAAJ,QAAUF,CAAAA,CAAC,GAAKE,CAAhB,EAAf,CAAD,CAAzB,EAAxB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAMZ,CAAAA,UAAU,CAAC,EAAD,CAAhB,EAAxB,CAEA,GAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,QAAqBZ,CAAAA,SAAS,CAACD,MAAM,CAACM,MAAP,CAAcO,EAAd,CAAD,CAA9B,EAArB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAMb,CAAAA,SAAS,CAAC,EAAD,CAAf,EAAvB,CAEA,GAAMc,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBZ,UAAU,CAAC,IAAD,CAAV,CACA,GAAMa,CAAAA,MAA0B,CAAG,CACjCC,MAAM,CAAE,CAAEC,KAAK,CAAE,EAAT,CAAaC,MAAM,CAAEnB,MAAM,CAACoB,MAA5B,CADyB,CAAnC,CAGAzB,KAAK,CAAC0B,GAAN,CAAuBzB,KAAK,CAAC0B,cAA7B,CAA6CN,MAA7C,EACGO,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAR,EADX,EAEGF,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACX,GAAIA,GAAG,CAACJ,MAAJ,EAAc,CAAlB,CAAqB,CACnBM,KAAK,CAAC,6BAAD,CAAL,CACD,CACDd,YAAY,CAACY,GAAD,CAAZ,CACD,CAPH,EAQGD,IARH,CAQQ,SAAAd,CAAC,QAAIN,CAAAA,UAAU,CAAC,KAAD,CAAd,EART,EASGwB,KATH,CASS,SAAAC,GAAG,CAAI,CACZF,KAAK,CAACE,GAAD,CAAL,CACAzB,UAAU,CAAC,KAAD,CAAV,CACD,CAZH,EAaD,CAlBD,CAoBA;AACAZ,SAAS,CAACwB,SAAD,CAAY,EAAZ,CAAT,CAGA,mBACE,oBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEjB,OAAO,CAAEA,OAAX,CAA9B,eACA,oBAAC,WAAD,MADA,cAEA,oBAAC,cAAD,EACE,UAAU,CAAEiB,SADd,CAEE,MAAM,CAAEf,MAFV,CAGE,SAAS,CAAEE,SAHb,EAFA,CADF,CAUD,CAlDM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ArenaNavBar } from './ArenaNavBar'\nimport { ArenaContext } from './arenaContext'\nimport { LevelsFilter, LevelView } from '../../types'\nimport { ArenaMainBoard } from './ArenaMainBoard'\nimport Axios, { AxiosRequestConfig } from 'axios'\nimport { Paths } from '../../routesPaths'\n\nexport const Arena = (): JSX.Element => {\n\n  const [filters, setFilters] = useState<LevelsFilter[]>([])\n  const [levels, setLevels] = useState<LevelView[]>([])\n  const [isLoading, setLoading] = useState(true)\n\n  const setAddFilter = (filter: LevelsFilter) => setFilters(filters.concat(filter))\n\n  const setRemoveFilter = (i: number) => setFilters(filters.filter((_, j) => i === j))\n\n  const setClearFilters = () => setFilters([])\n\n  const setAddLevels = (ls: LevelView[]) => setLevels(levels.concat(ls))\n\n  const setClearLevels = () => setLevels([])\n\n  const fetchMore = () => {\n    setLoading(true)\n    const config: AxiosRequestConfig = {\n      params: { count: 10, offset: levels.length }\n    }\n    Axios.get<LevelView[]>(Paths.fetchNewLevels, config)\n      .then(res => res.data)\n      .then(res => {\n        if (res.length == 0) {\n          alert(\"No more levels can be found\")\n        }\n        setAddLevels(res)\n      })\n      .then(_ => setLoading(false))\n      .catch(err => {\n        alert(err)\n        setLoading(false)\n      })\n  }\n\n  // Initial fetching\n  useEffect(fetchMore, [])\n\n\n  return (\n    <ArenaContext.Provider value={{ filters: filters }}>\n    <ArenaNavBar/>\n    <ArenaMainBoard\n      onShowMore={fetchMore}\n      levels={levels}\n      isLoading={isLoading}\n    />\n    </ArenaContext.Provider>\n  )\n} "]},"metadata":{},"sourceType":"module"}