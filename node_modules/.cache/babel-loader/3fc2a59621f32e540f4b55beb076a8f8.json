{"ast":null,"code":"import React,{useContext}from'react';import{CardComponent}from'../game/Card';import LockIcon from'@material-ui/icons/Lock';import LockOpenIcon from'@material-ui/icons/LockOpen';import{EditorContext}from'./LevelEditor';import{EditorClickSlot}from'./ClickSlot';import{getExprFromJson}from'../../server/gameApp/game/goal';import{Tooltip,IconButton}from'@material-ui/core';export var EditorPremise=function EditorPremise(_ref){var category=_ref.category,scale=_ref.scale,onLock=_ref.onLock,onSelect=_ref.onSelect,_onDrop=_ref.onDrop;var context=useContext(EditorContext);var kind=category.kind;var index=category.index;var isLocked=kind=='premise'&&context.lockedPremises.includes(index);var cards=kind=='premise'?context.premises[index]:getExprFromJson(context.goals[index]);var isSelected=context.state.kind=='select';var isPicked=function isPicked(i){return context.state.kind=='select'&&(context.state.select.kind=='premise'&&kind=='premise'&&context.state.select.pid==index&&context.state.select.ppos==i||context.state.select.kind=='goal'&&kind=='goal'&&context.state.select.gid==index&&context.state.select.gpos==i);};var renderCard=function renderCard(i){return/*#__PURE__*/React.createElement(CardComponent,{cardSymbol:cards[i],scale:scale,tag:undefined,onClick:function onClick(){return isPicked(i)?context.setIdle():onSelect(i);},isSelected:isPicked(i)});};var renderDropSlot=function renderDropSlot(i){var active=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return/*#__PURE__*/React.createElement(EditorClickSlot,{scale:scale,isActive:active,onDrop:function onDrop(){return _onDrop(i);}});};var renderLock=function renderLock(){return onLock?/*#__PURE__*/React.createElement(\"div\",{style:{position:'absolute',left:40,marginTop:'40px'}},/*#__PURE__*/React.createElement(Tooltip,{title:\"Click me to \"+(isLocked?\"unlock\":\"lock\")+\" this premise\",arrow:true,placement:\"right\"},/*#__PURE__*/React.createElement(IconButton,{onClick:onLock},isLocked?/*#__PURE__*/React.createElement(LockIcon,{fontSize:\"large\"}):/*#__PURE__*/React.createElement(LockOpenIcon,{fontSize:\"large\"})))):undefined;};var renderPremise=function renderPremise(){var result=[];if(cards.length==0&&!isSelected){result.push(renderDropSlot(0,false));}var offset=0;for(var i=0;i<cards.length;i++){if(isSelected){result.push(renderDropSlot(i-offset));}result.push(renderCard(i));if(isPicked(i)){offset=1;}}if(isSelected){result.push(renderDropSlot(cards.length-offset));}return result;};return/*#__PURE__*/React.createElement(Tooltip,{title:isSelected||cards.length==0?\"\":\"Click a card to select it\",arrow:true},/*#__PURE__*/React.createElement(\"div\",{className:\"board-row\",style:{display:'flex',flexWrap:'wrap',float:\"none\",justifyContent:\"center\",verticalAlign:\"center\",marginTop:\"5px\",marginBottom:\"5px\",marginLeft:\"auto\",marginRight:\"auto\",backgroundColor:isLocked?'#CCC':'white'}},renderPremise(),renderLock()));};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/editor/EditorPremise.tsx"],"names":["React","useContext","CardComponent","LockIcon","LockOpenIcon","EditorContext","EditorClickSlot","getExprFromJson","Tooltip","IconButton","EditorPremise","category","scale","onLock","onSelect","onDrop","context","kind","index","isLocked","lockedPremises","includes","cards","premises","goals","isSelected","state","isPicked","i","select","pid","ppos","gid","gpos","renderCard","undefined","setIdle","renderDropSlot","active","renderLock","position","left","marginTop","renderPremise","result","length","push","offset","display","flexWrap","float","justifyContent","verticalAlign","marginBottom","marginLeft","marginRight","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Card, Premise } from '../../types'\nimport { CardComponent } from '../game/Card'\nimport { useDrop } from 'react-dnd'\nimport { PremiseClickSlot } from '../game/PremiseClickSlot'\n\nimport LockIcon from '@material-ui/icons/Lock'\nimport LockOpenIcon from '@material-ui/icons/LockOpen'\nimport { EditorContext } from './LevelEditor'\nimport { EditorClickSlot } from './ClickSlot'\nimport { getExprFromJson } from '../../server/gameApp/game/goal'\nimport { Tooltip, IconButton } from '@material-ui/core'\n\ntype PremiseCategory = { kind: 'premise', index: number }\n                     | { kind: 'goal', index: number }\n\ninterface PremiseProps {\n  category: PremiseCategory\n  scale: number\n  onLock: (() => void) | undefined\n  onSelect: (pos: number) => void\n  onDrop: (pos: number) => void\n}\n\nexport const EditorPremise = ({\n  category,\n  scale,\n  onLock,\n  onSelect,\n  onDrop,\n}: PremiseProps) => {\n\n  const context = useContext(EditorContext)\n  const kind = category.kind\n  const index = category.index\n  const isLocked = kind == 'premise' && context.lockedPremises.includes(index)\n  const cards = kind == 'premise' ? context.premises[index] : getExprFromJson(context.goals[index])\n  const isSelected = context.state.kind == 'select'\n\n  const isPicked = (i: number) => \n    context.state.kind == 'select' && \n    ((context.state.select.kind == 'premise'\n      && kind == 'premise'\n      && context.state.select.pid == index\n      && context.state.select.ppos == i)\n    || (context.state.select.kind == 'goal'\n      && kind == 'goal'\n      && context.state.select.gid == index\n      && context.state.select.gpos == i)\n    )\n\n\n  const renderCard = (i: number): JSX.Element => {\n    return <CardComponent \n      cardSymbol={cards[i]} \n      scale={scale} \n      tag={undefined} \n      onClick={() => isPicked(i) ? context.setIdle() : onSelect(i) } \n      isSelected={isPicked(i)} \n    />\n  }\n\n  const renderDropSlot = (i: number, active: boolean = true): JSX.Element => {\n    return (\n        <EditorClickSlot \n          scale={scale}\n          isActive={active}\n          onDrop={() => onDrop(i)}\n        />\n    )\n  }\n\n  const renderLock = () => {\n    return onLock ? <div style={{\n      position: 'absolute',\n      left: 40,\n      marginTop: '40px',\n    }}>\n      <Tooltip title={\"Click me to \" + (isLocked ? \"unlock\" : \"lock\") + \" this premise\"} arrow placement=\"right\">\n        <IconButton onClick={onLock}>\n          { isLocked ? <LockIcon fontSize=\"large\"/> : <LockOpenIcon fontSize=\"large\"/>}\n        </IconButton>\n      </Tooltip>\n    </div> : undefined\n  }\n\n  const renderPremise = (): JSX.Element[] => {\n    let result: JSX.Element[] = []\n    if (cards.length == 0 && !isSelected) {\n      result.push(renderDropSlot(0, false))\n    }\n    let offset = 0\n    for (let i = 0; i < cards.length; i++) {\n      if (isSelected) {\n        result.push(renderDropSlot(i - offset))\n      }\n      result.push(renderCard(i))\n      if (isPicked(i)) {\n        offset = 1\n      }\n    }\n    if (isSelected) {\n      result.push(renderDropSlot(cards.length - offset))\n    }\n    return result\n  }\n\n  return (\n    <Tooltip title={isSelected || cards.length == 0 ? \"\" : \"Click a card to select it\"} arrow>\n      <div \n        className=\"board-row\" style={\n        {\n          display: 'flex',\n          flexWrap: 'wrap', \n          float: \"none\",\n          justifyContent: \"center\",\n          verticalAlign: \"center\",\n          marginTop: \"5px\",\n          marginBottom: \"5px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          backgroundColor: isLocked ? '#CCC' : 'white'\n        }\n      }> \n          {renderPremise()}\n        {renderLock()}\n      </div>\n    </Tooltip>\n\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}