{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/arena/Arena.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { ArenaNavBar } from './ArenaNavBar';\nimport { ArenaContext } from './arenaContext';\nimport { ArenaMainBoard } from './ArenaMainBoard';\nimport Axios from 'axios';\nimport { Paths } from '../../routesPaths';\nexport const Arena = () => {\n  const [filters, setFilters] = useState([]);\n  const [levels, setLevels] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const setAddFilter = filter => setFilters(filters.concat(filter));\n\n  const setRemoveFilter = i => setFilters(filters.filter((_, j) => i === j));\n\n  const setClearFilters = () => setFilters([]);\n\n  const setAddLevels = ls => setLevels(levels.concat(ls));\n\n  const setClearLevels = () => setLevels([]);\n\n  const fetchMore = () => {\n    setLoading(true);\n    const config = {\n      params: {\n        count: 10,\n        offset: levels.length\n      }\n    };\n    Axios.get(Paths.fetchNewLevels, config).then(res => res.data).then(res => {\n      if (res.length == 0) {\n        alert(\"No more levels can be found\");\n      }\n\n      setAddLevels(res);\n    }).then(_ => setLoading(false)).catch(err => {\n      alert(err);\n      setLoading(false);\n    });\n  }; // Initial fetching\n\n\n  useEffect(fetchMore, []);\n  return /*#__PURE__*/React.createElement(ArenaContext.Provider, {\n    value: {\n      filters: filters\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ArenaNavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ArenaMainBoard, {\n    onShowMore: fetchMore,\n    levels: levels,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/arena/Arena.tsx"],"names":["React","useState","useEffect","ArenaNavBar","ArenaContext","ArenaMainBoard","Axios","Paths","Arena","filters","setFilters","levels","setLevels","isLoading","setLoading","setAddFilter","filter","concat","setRemoveFilter","i","_","j","setClearFilters","setAddLevels","ls","setClearLevels","fetchMore","config","params","count","offset","length","get","fetchNewLevels","then","res","data","alert","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAA0C,OAA1C;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAmB;AAEtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAiB,EAAjB,CAAtC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAc,EAAd,CAApC;AACA,QAAM,CAACY,SAAD,EAAYC,UAAZ,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMc,YAAY,GAAIC,MAAD,IAA0BN,UAAU,CAACD,OAAO,CAACQ,MAAR,CAAeD,MAAf,CAAD,CAAzD;;AAEA,QAAME,eAAe,GAAIC,CAAD,IAAeT,UAAU,CAACD,OAAO,CAACO,MAAR,CAAe,CAACI,CAAD,EAAIC,CAAJ,KAAUF,CAAC,KAAKE,CAA/B,CAAD,CAAjD;;AAEA,QAAMC,eAAe,GAAG,MAAMZ,UAAU,CAAC,EAAD,CAAxC;;AAEA,QAAMa,YAAY,GAAIC,EAAD,IAAqBZ,SAAS,CAACD,MAAM,CAACM,MAAP,CAAcO,EAAd,CAAD,CAAnD;;AAEA,QAAMC,cAAc,GAAG,MAAMb,SAAS,CAAC,EAAD,CAAtC;;AAEA,QAAMc,SAAS,GAAG,MAAM;AACtBZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMa,MAA0B,GAAG;AACjCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,MAAM,EAAEnB,MAAM,CAACoB;AAA5B;AADyB,KAAnC;AAGAzB,IAAAA,KAAK,CAAC0B,GAAN,CAAuBzB,KAAK,CAAC0B,cAA7B,EAA6CN,MAA7C,EACGO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IADnB,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACJ,MAAJ,IAAc,CAAlB,EAAqB;AACnBM,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;;AACDd,MAAAA,YAAY,CAACY,GAAD,CAAZ;AACD,KAPH,EAQGD,IARH,CAQQd,CAAC,IAAIN,UAAU,CAAC,KAAD,CARvB,EASGwB,KATH,CASSC,GAAG,IAAI;AACZF,MAAAA,KAAK,CAACE,GAAD,CAAL;AACAzB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZH;AAaD,GAlBD,CAhBsC,CAoCtC;;;AACAZ,EAAAA,SAAS,CAACwB,SAAD,EAAY,EAAZ,CAAT;AAGA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEjB,MAAAA,OAAO,EAAEA;AAAX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEiB,SADd;AAEE,IAAA,MAAM,EAAEf,MAFV;AAGE,IAAA,SAAS,EAAEE,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADF;AAUD,CAlDM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ArenaNavBar } from './ArenaNavBar'\nimport { ArenaContext } from './arenaContext'\nimport { LevelsFilter, LevelView } from '../../types'\nimport { ArenaMainBoard } from './ArenaMainBoard'\nimport Axios, { AxiosRequestConfig } from 'axios'\nimport { Paths } from '../../routesPaths'\n\nexport const Arena = (): JSX.Element => {\n\n  const [filters, setFilters] = useState<LevelsFilter[]>([])\n  const [levels, setLevels] = useState<LevelView[]>([])\n  const [isLoading, setLoading] = useState(true)\n\n  const setAddFilter = (filter: LevelsFilter) => setFilters(filters.concat(filter))\n\n  const setRemoveFilter = (i: number) => setFilters(filters.filter((_, j) => i === j))\n\n  const setClearFilters = () => setFilters([])\n\n  const setAddLevels = (ls: LevelView[]) => setLevels(levels.concat(ls))\n\n  const setClearLevels = () => setLevels([])\n\n  const fetchMore = () => {\n    setLoading(true)\n    const config: AxiosRequestConfig = {\n      params: { count: 10, offset: levels.length }\n    }\n    Axios.get<LevelView[]>(Paths.fetchNewLevels, config)\n      .then(res => res.data)\n      .then(res => {\n        if (res.length == 0) {\n          alert(\"No more levels can be found\")\n        }\n        setAddLevels(res)\n      })\n      .then(_ => setLoading(false))\n      .catch(err => {\n        alert(err)\n        setLoading(false)\n      })\n  }\n\n  // Initial fetching\n  useEffect(fetchMore, [])\n\n\n  return (\n    <ArenaContext.Provider value={{ filters: filters }}>\n    <ArenaNavBar/>\n    <ArenaMainBoard\n      onShowMore={fetchMore}\n      levels={levels}\n      isLoading={isLoading}\n    />\n    </ArenaContext.Provider>\n  )\n} "]},"metadata":{},"sourceType":"module"}