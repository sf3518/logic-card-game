{"ast":null,"code":"import _slicedToArray from\"/Users/johnny/IC/Computing/year2/DRP/drp48/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import DialogActions from'@material-ui/core/DialogActions';import MButton from'@material-ui/core/Button';import RadioGroup from'@material-ui/core/RadioGroup';import Radio from'@material-ui/core/Radio';import FormControlLabel from'@material-ui/core/FormControlLabel';import Input from'@material-ui/core/Input';import{EditorContext}from'./LevelEditor';import{Grid}from'@material-ui/core';var defaultValue=1;export var EditorModifyCardCountDialogue=function EditorModifyCardCountDialogue(_ref){var hpos=_ref.hpos,onSubmit=_ref.onSubmit;var context=useContext(EditorContext);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isInfty=_useState4[0],setIsInfty=_useState4[1];useEffect(function(){if(hpos<context.handCards.length){var init=context.handCards[hpos][1];setCount(init===Number.POSITIVE_INFINITY?defaultValue:init);setIsInfty(init===Number.POSITIVE_INFINITY);}},[context,hpos]);var handleRadioChange=function handleRadioChange(event){setIsInfty(event.target.value==='true');};var handleInputChange=function handleInputChange(event){var num=event.target.value===''?1:Number(event.target.value);setCount(Math.min(Math.max(num,0),10));};var submit=function submit(){onSubmit(isInfty?Number.POSITIVE_INFINITY:count);};return/*#__PURE__*/React.createElement(Dialog,{open:context.state.kind==='changeHand',title:\"Modify card number\",onClose:context.setIdle},/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(RadioGroup,{\"aria-label\":\"quiz\",name:\"quiz\",value:isInfty,onChange:handleRadioChange},/*#__PURE__*/React.createElement(FormControlLabel,{value:true,control:/*#__PURE__*/React.createElement(Radio,null),label:\"\\u221E\"}),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(FormControlLabel,{value:false,control:/*#__PURE__*/React.createElement(Radio,null),label:\"Count: \"}),/*#__PURE__*/React.createElement(Input,{margin:\"dense\",onChange:handleInputChange,disabled:isInfty,inputProps:{defaultValue:count===Number.POSITIVE_INFINITY?defaultValue:count,step:1,min:0,max:10,type:'number','aria-labelledby':'input-slider'}}))))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(MButton,{onClick:submit},\"SUBMIT\"),/*#__PURE__*/React.createElement(MButton,{onClick:context.setIdle,color:\"secondary\"},\"CANCEL\")));};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/editor/EditorModifyCardCount.tsx"],"names":["React","useContext","useState","useEffect","Dialog","DialogContent","DialogActions","MButton","RadioGroup","Radio","FormControlLabel","Input","EditorContext","Grid","defaultValue","EditorModifyCardCountDialogue","hpos","onSubmit","context","count","setCount","isInfty","setIsInfty","handCards","length","init","Number","POSITIVE_INFINITY","handleRadioChange","event","target","value","handleInputChange","num","Math","min","max","submit","state","kind","setIdle","step","type"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport MButton from '@material-ui/core/Button'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Input from '@material-ui/core/Input'\nimport { EditorContext } from './LevelEditor'\nimport { Grid } from '@material-ui/core'\n\ninterface Props {\n  hpos: number\n  onSubmit: (count: number) => void\n}\n\nconst defaultValue = 1\n\nexport const EditorModifyCardCountDialogue = ({\n  hpos,\n  onSubmit\n}: Props) => {\n\n  const context = useContext(EditorContext)\n  const [count, setCount] = useState(0)\n  const [isInfty, setIsInfty] = useState(true)\n\n  useEffect(() => {\n    if (hpos < context.handCards.length) {\n      const init = context.handCards[hpos][1]\n      setCount(init === Number.POSITIVE_INFINITY ? defaultValue : init)\n      setIsInfty(init === Number.POSITIVE_INFINITY)\n    }\n  }, [context, hpos])\n\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsInfty(event.target.value === 'true')\n  }\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const num = event.target.value === '' ? 1 : Number(event.target.value)\n    setCount(Math.min(Math.max(num, 0), 10))\n  }\n\n  const submit = () => {\n    onSubmit(isInfty ? Number.POSITIVE_INFINITY : count)\n  }\n\n  return( \n    <Dialog open={context.state.kind === 'changeHand'} title=\"Modify card number\" onClose={context.setIdle}>\n      <DialogContent>\n        <RadioGroup aria-label=\"quiz\" name=\"quiz\" value={isInfty} onChange={handleRadioChange}>\n          <FormControlLabel value={true} control={<Radio />} label=\"âˆž\" />\n          <Grid container spacing={1}>\n            <Grid item>\n              <FormControlLabel value={false} control={<Radio />} label=\"Count: \" />\n              <Input \n                margin=\"dense\" \n                onChange={handleInputChange}\n                disabled={isInfty}\n                inputProps={{\n                  defaultValue: count === Number.POSITIVE_INFINITY ? defaultValue : count,\n                  step: 1,\n                  min: 0,\n                  max: 10,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <MButton onClick={submit}>SUBMIT</MButton>\n        <MButton onClick={context.setIdle} color='secondary'>CANCEL</MButton>\n      </DialogActions>\n    </Dialog>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}