{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Premise.tsx\";\nimport React, { useContext } from 'react';\nimport { CardComponent } from './Card';\nimport { PremiseClickSlot } from './PremiseClickSlot';\nimport Context from './gameContext';\nexport const PremiseComponent = ({\n  premiseIndex,\n  isLocked,\n  scale,\n  cards\n}) => {\n  const context = useContext(Context);\n\n  const renderCard = i => {\n    return /*#__PURE__*/React.createElement(CardComponent, {\n      cardSymbol: cards[i],\n      scale: scale,\n      tag: undefined,\n      onClick: () => {\n        if (!isLocked && context.handCardSelected) {\n          displ;\n        }\n      },\n      isSelected: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const renderDropSlot = (i, slotLocked = false) => {\n    return /*#__PURE__*/React.createElement(PremiseClickSlot, {\n      premiseIndex: premiseIndex,\n      isLocked: isLocked || slotLocked,\n      slotPosition: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    });\n  };\n\n  const renderPremise = () => {\n    let result = [];\n\n    if (cards.length == 0) {\n      result.push(renderDropSlot(0, true));\n    }\n\n    for (let i = 0; i < cards.length; i++) {\n      if (context.handCardSelected && !isLocked) {\n        result.push(renderDropSlot(i));\n      }\n\n      result.push(renderCard(i));\n    }\n\n    if (context.handCardSelected && !isLocked) {\n      result.push(renderDropSlot(cards.length));\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      float: \"none\",\n      justifyContent: \"center\",\n      paddingTop: \"10px\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, renderPremise());\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Premise.tsx"],"names":["React","useContext","CardComponent","PremiseClickSlot","Context","PremiseComponent","premiseIndex","isLocked","scale","cards","context","renderCard","i","undefined","handCardSelected","displ","renderDropSlot","slotLocked","renderPremise","result","length","push","display","flexWrap","float","justifyContent","paddingTop","marginLeft","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,UAA1B,QAA4C,OAA5C;AAEA,SAASC,aAAT,QAA8B,QAA9B;AAGA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAUA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,YAD+B;AAE/BC,EAAAA,QAF+B;AAG/BC,EAAAA,KAH+B;AAI/BC,EAAAA;AAJ+B,CAAD,KAKZ;AAElB,QAAMC,OAAO,GAAGT,UAAU,CAACG,OAAD,CAA1B;;AAEA,QAAMO,UAAU,GAAIC,CAAD,IAA4B;AAC7C,wBAAQ,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAEH,KAAK,CAACG,CAAD,CAAhC;AAAqC,MAAA,KAAK,EAAEJ,KAA5C;AAAmD,MAAA,GAAG,EAAEK,SAAxD;AAAmE,MAAA,OAAO,EAAE,MAAM;AACxF,YAAI,CAACN,QAAD,IAAaG,OAAO,CAACI,gBAAzB,EAA2C;AACzCC,UAAAA,KAAK;AACN;AACF,OAJO;AAIL,MAAA,UAAU,EAAE,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAKD,GAND;;AAQA,QAAMC,cAAc,GAAG,CAACJ,CAAD,EAAYK,UAAmB,GAAG,KAAlC,KAAyD;AAC9E,wBACI,oBAAC,gBAAD;AACE,MAAA,YAAY,EAAEX,YADhB;AAEE,MAAA,QAAQ,EAAEC,QAAQ,IAAIU,UAFxB;AAGE,MAAA,YAAY,EAAEL,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOD,GARD;;AAUA,QAAMM,aAAa,GAAG,MAAqB;AACzC,QAAIC,MAAqB,GAAG,EAA5B;;AACA,QAAIV,KAAK,CAACW,MAAN,IAAgB,CAApB,EAAuB;AACrBD,MAAAA,MAAM,CAACE,IAAP,CAAYL,cAAc,CAAC,CAAD,EAAI,IAAJ,CAA1B;AACD;;AACD,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACW,MAA1B,EAAkCR,CAAC,EAAnC,EAAuC;AACrC,UAAIF,OAAO,CAACI,gBAAR,IAA4B,CAACP,QAAjC,EAA2C;AACzCY,QAAAA,MAAM,CAACE,IAAP,CAAYL,cAAc,CAACJ,CAAD,CAA1B;AACD;;AACDO,MAAAA,MAAM,CAACE,IAAP,CAAYV,UAAU,CAACC,CAAD,CAAtB;AACD;;AACD,QAAIF,OAAO,CAACI,gBAAR,IAA4B,CAACP,QAAjC,EAA2C;AACzCY,MAAAA,MAAM,CAACE,IAAP,CAAYL,cAAc,CAACP,KAAK,CAACW,MAAP,CAA1B;AACD;;AACD,WAAOD,MAAP;AACD,GAfD;;AAiBA,sBACE;AACE,IAAA,SAAS,EAAC,WADZ;AACwB,IAAA,KAAK,EAC3B;AACEG,MAAAA,OAAO,EAAE,MADX;AAEEC,MAAAA,QAAQ,EAAE,MAFZ;AAGEC,MAAAA,KAAK,EAAE,MAHT;AAIEC,MAAAA,cAAc,EAAE,QAJlB;AAKEC,MAAAA,UAAU,EAAE,MALd;AAMEC,MAAAA,UAAU,EAAE,MANd;AAOEC,MAAAA,WAAW,EAAE;AAPf,KAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGV,aAAa,EAZhB,CADF;AAgBD,CA5DM","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Card, Premise } from '../../types'\nimport { CardComponent } from './Card'\nimport { useDrop } from 'react-dnd'\nimport { ItemTypes } from './ItemTypes'\nimport { PremiseClickSlot } from './PremiseClickSlot'\nimport Context from './gameContext'\n\ninterface PremiseProps {\n  premiseIndex: number\n  isLocked: boolean\n  scale: number\n  cards: Premise\n}\n\n\nexport const PremiseComponent = ({\n  premiseIndex,\n  isLocked,\n  scale,\n  cards,\n}: PremiseProps) => {\n\n  const context = useContext(Context)\n\n  const renderCard = (i: number): JSX.Element => {\n    return (<CardComponent cardSymbol={cards[i]} scale={scale} tag={undefined} onClick={() => {\n      if (!isLocked && context.handCardSelected) {\n        displ\n      }\n    }} isSelected={false} />)\n  }\n\n  const renderDropSlot = (i: number, slotLocked: boolean = false): JSX.Element => {\n    return (\n        <PremiseClickSlot \n          premiseIndex={premiseIndex}\n          isLocked={isLocked || slotLocked}\n          slotPosition={i}\n        />\n    )\n  }\n\n  const renderPremise = (): JSX.Element[] => {\n    let result: JSX.Element[] = []\n    if (cards.length == 0) {\n      result.push(renderDropSlot(0, true))\n    }\n    for (let i = 0; i < cards.length; i++) {\n      if (context.handCardSelected && !isLocked) {\n        result.push(renderDropSlot(i))\n      }\n      result.push(renderCard(i))\n    }\n    if (context.handCardSelected && !isLocked) {\n      result.push(renderDropSlot(cards.length))\n    }\n    return result\n  }\n\n  return (\n    <div \n      className=\"board-row\" style={\n      {\n        display: 'flex',\n        flexWrap: 'wrap', \n        float: \"none\",\n        justifyContent: \"center\",\n        paddingTop: \"10px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n      }\n    }> \n      {renderPremise()}\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}