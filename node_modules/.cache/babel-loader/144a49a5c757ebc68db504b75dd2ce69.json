{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Premise.tsx\";\nimport React, { useContext } from 'react';\nimport { CardComponent } from './Card';\nimport { PremiseClickSlot } from './PremiseClickSlot';\nimport Context from './gameContext';\nexport const PremiseComponent = ({\n  premiseIndex,\n  isLocked,\n  cards\n}) => {\n  const context = useContext(Context);\n\n  const renderCard = i => {\n    return /*#__PURE__*/React.createElement(CardComponent, {\n      cardSymbol: cards[i],\n      onClick: () => {},\n      colour: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const renderDropSlot = i => {\n    return /*#__PURE__*/React.createElement(PremiseClickSlot, {\n      premiseIndex: premiseIndex,\n      isLocked: isLocked,\n      slotPosition: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    });\n  };\n\n  const renderPremise = () => {\n    let result = [];\n\n    for (let i = 0; i < cards.length; i++) {\n      if (context.handCardSelected) {\n        result.push(renderDropSlot(i));\n      }\n\n      result.push(renderCard(i));\n    }\n\n    if (context.handCardSelected) {\n      result.push(renderDropSlot(cards.length));\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    style: {\n      width: '100%',\n      height: '5rem',\n      display: 'flex',\n      flexWrap: 'wrap',\n      float: \"none\",\n      alignContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, renderPremise());\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Premise.tsx"],"names":["React","useContext","CardComponent","PremiseClickSlot","Context","PremiseComponent","premiseIndex","isLocked","cards","context","renderCard","i","renderDropSlot","renderPremise","result","length","handCardSelected","push","width","height","display","flexWrap","float","alignContent"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,UAA1B,QAA4C,OAA5C;AAEA,SAASC,aAAT,QAA8B,QAA9B;AAGA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AASA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,YAD+B;AAE/BC,EAAAA,QAF+B;AAG/BC,EAAAA;AAH+B,CAAD,KAIZ;AAElB,QAAMC,OAAO,GAAGR,UAAU,CAACG,OAAD,CAA1B;;AAEA,QAAMM,UAAU,GAAIC,CAAD,IAA4B;AAC7C,wBAAQ,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAEH,KAAK,CAACG,CAAD,CAAhC;AAAqC,MAAA,OAAO,EAAE,MAAM,CAAE,CAAtD;AAAwD,MAAA,MAAM,EAAC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAID,CAAD,IAA4B;AACjD,wBACI,oBAAC,gBAAD;AACE,MAAA,YAAY,EAAEL,YADhB;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,YAAY,EAAEI,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOD,GARD;;AAUA,QAAME,aAAa,GAAG,MAAqB;AACzC,QAAIC,MAAqB,GAAG,EAA5B;;AACA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACO,MAA1B,EAAkCJ,CAAC,EAAnC,EAAuC;AACrC,UAAIF,OAAO,CAACO,gBAAZ,EAA8B;AAC5BF,QAAAA,MAAM,CAACG,IAAP,CAAYL,cAAc,CAACD,CAAD,CAA1B;AACD;;AACDG,MAAAA,MAAM,CAACG,IAAP,CAAYP,UAAU,CAACC,CAAD,CAAtB;AACD;;AACD,QAAIF,OAAO,CAACO,gBAAZ,EAA8B;AAC5BF,MAAAA,MAAM,CAACG,IAAP,CAAYL,cAAc,CAACJ,KAAK,CAACO,MAAP,CAA1B;AACD;;AACD,WAAOD,MAAP;AACD,GAZD;;AAcA,sBACE;AACE,IAAA,SAAS,EAAC,WADZ;AACwB,IAAA,KAAK,EAC3B;AACEI,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,MAAM,EAAE,MAFV;AAGEC,MAAAA,OAAO,EAAE,MAHX;AAIEC,MAAAA,QAAQ,EAAE,MAJZ;AAKEC,MAAAA,KAAK,EAAE,MALT;AAMEC,MAAAA,YAAY,EAAE;AANhB,KAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGV,aAAa,EAXhB,CADF;AAeD,CAnDM","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Card, Premise } from '../../types'\nimport { CardComponent } from './Card'\nimport { useDrop } from 'react-dnd'\nimport { ItemTypes } from './ItemTypes'\nimport { PremiseClickSlot } from './PremiseClickSlot'\nimport Context from './gameContext'\n\ninterface PremiseProps {\n  premiseIndex: number\n  isLocked: boolean\n  cards: Premise\n}\n\n\nexport const PremiseComponent = ({\n  premiseIndex,\n  isLocked,\n  cards,\n}: PremiseProps) => {\n\n  const context = useContext(Context)\n\n  const renderCard = (i: number): JSX.Element => {\n    return (<CardComponent cardSymbol={cards[i]} onClick={() => {}} colour=\"white\"/>)\n  }\n\n  const renderDropSlot = (i: number): JSX.Element => {\n    return (\n        <PremiseClickSlot \n          premiseIndex={premiseIndex}\n          isLocked={isLocked}\n          slotPosition={i}\n        />\n    )\n  }\n\n  const renderPremise = (): JSX.Element[] => {\n    let result: JSX.Element[] = []\n    for (let i = 0; i < cards.length; i++) {\n      if (context.handCardSelected) {\n        result.push(renderDropSlot(i))\n      }\n      result.push(renderCard(i))\n    }\n    if (context.handCardSelected) {\n      result.push(renderDropSlot(cards.length))\n    }\n    return result\n  }\n\n  return (\n    <div \n      className=\"board-row\" style={\n      {\n        width: '100%',\n        height: '5rem',\n        display: 'flex',\n        flexWrap: 'wrap', \n        float: \"none\",\n        alignContent: \"center\"\n      }\n    }> \n      {renderPremise()}\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}