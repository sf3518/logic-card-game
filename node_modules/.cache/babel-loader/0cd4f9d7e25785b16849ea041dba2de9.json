{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Card.tsx\";\nimport React from 'react';\nimport './Card.css';\nimport Card from 'react-bootstrap/Card';\nimport A_Card from '../../card_UI/A.jpg';\nimport B_Card from '../../card_UI/B.jpg';\nimport C_Card from '../../card_UI/C.jpg';\nimport D_Card from '../../card_UI/D.jpg';\nimport AND_Card from '../../card_UI/AND.jpg';\nimport OR_Card from '../../card_UI/OR.jpg';\nimport NOT_Card from '../../card_UI/NOT.jpg';\nimport LP_Card from '../../card_UI/LP.jpg';\nimport RP_Card from '../../card_UI/RP.jpg';\nimport IMPLY_Card from '../../card_UI/IMPLY.jpg';\nimport IFF_Card from '../../card_UI/IFF.jpg';\nimport SELECTED_A_Card from '../../card_UI/selected/A.jpg';\nimport SELECTED_B_Card from '../../card_UI/selected/B.jpg';\nimport SELECTED_C_Card from '../../card_UI/selected/C.jpg';\nimport SELECTED_D_Card from '../../card_UI/selected/D.jpg';\nimport SELECTED_AND_Card from '../../card_UI/selected/AND.jpg';\nimport SELECTED_OR_Card from '../../card_UI/selected/OR.jpg';\nimport SELECTED_NOT_Card from '../../card_UI/selected/NOT.jpg';\nimport SELECTED_LP_Card from '../../card_UI/selected/LP.jpg';\nimport SELECTED_RP_Card from '../../card_UI/selected/RP.jpg';\nimport SELECTED_IMPLY_Card from '../../card_UI/selected/IMPLY.jpg';\nimport SELECTED_IFF_Card from '../../card_UI/selected/IFF.jpg';\nexport const CardComponent = ({\n  cardSymbol,\n  scale,\n  tag,\n  isSelected = false,\n  onClick = () => {}\n}) => {\n  let colour;\n\n  switch (cardSymbol) {\n    case 'A':\n      {\n        colour = isSelected ? SELECTED_A_Card : A_Card;\n        break;\n      }\n\n    case 'B':\n      {\n        colour = isSelected ? SELECTED_B_Card : B_Card;\n        break;\n      }\n\n    case 'C':\n      {\n        colour = isSelected ? SELECTED_C_Card : C_Card;\n        break;\n      }\n\n    case 'D':\n      {\n        colour = isSelected ? SELECTED_D_Card : D_Card;\n        break;\n      }\n\n    case '&':\n      {\n        colour = isSelected ? SELECTED_AND_Card : AND_Card;\n        break;\n      }\n\n    case '|':\n      {\n        colour = isSelected ? SELECTED_OR_Card : OR_Card;\n        break;\n      }\n\n    case '~':\n      {\n        colour = isSelected ? SELECTED_NOT_Card : NOT_Card;\n        break;\n      }\n\n    case '(':\n      {\n        colour = isSelected ? SELECTED_LP_Card : LP_Card;\n        break;\n      }\n\n    case ')':\n      {\n        colour = isSelected ? SELECTED_RP_Card : RP_Card;\n        break;\n      }\n\n    case '->':\n      {\n        colour = isSelected ? SELECTED_IMPLY_Card : IMPLY_Card;\n        break;\n      }\n\n    case '==':\n      {\n        colour = isSelected ? SELECTED_IFF_Card : IFF_Card;\n        break;\n      }\n  }\n\n  const width = 80 * scale;\n  const height = 133 * scale;\n  console.log(tag);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"Card\",\n    style: {\n      width: width + \"px\",\n      height: height + \"px\",\n      backgroundImage: \"url(\" + colour + \")\"\n    },\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, tag ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CardTag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }\n  }, tag == Number.POSITIVE_INFINITY ? \"∞\" : tag) : undefined, \"123\");\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Card.tsx"],"names":["React","Card","A_Card","B_Card","C_Card","D_Card","AND_Card","OR_Card","NOT_Card","LP_Card","RP_Card","IMPLY_Card","IFF_Card","SELECTED_A_Card","SELECTED_B_Card","SELECTED_C_Card","SELECTED_D_Card","SELECTED_AND_Card","SELECTED_OR_Card","SELECTED_NOT_Card","SELECTED_LP_Card","SELECTED_RP_Card","SELECTED_IMPLY_Card","SELECTED_IFF_Card","CardComponent","cardSymbol","scale","tag","isSelected","onClick","colour","width","height","console","log","backgroundImage","Number","POSITIVE_INFINITY","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as Types from '../../types'\nimport './Card.css'\nimport Card from 'react-bootstrap/Card'\nimport A_Card from '../../card_UI/A.jpg'\nimport B_Card from '../../card_UI/B.jpg'\nimport C_Card from '../../card_UI/C.jpg'\nimport D_Card from '../../card_UI/D.jpg'\nimport AND_Card from '../../card_UI/AND.jpg'\nimport OR_Card from '../../card_UI/OR.jpg'\nimport NOT_Card from '../../card_UI/NOT.jpg'\nimport LP_Card from '../../card_UI/LP.jpg'\nimport RP_Card from '../../card_UI/RP.jpg'\nimport IMPLY_Card from '../../card_UI/IMPLY.jpg'\nimport IFF_Card from '../../card_UI/IFF.jpg'\nimport SELECTED_A_Card from '../../card_UI/selected/A.jpg'\nimport SELECTED_B_Card from '../../card_UI/selected/B.jpg'\nimport SELECTED_C_Card from '../../card_UI/selected/C.jpg'\nimport SELECTED_D_Card from '../../card_UI/selected/D.jpg'\nimport SELECTED_AND_Card from '../../card_UI/selected/AND.jpg'\nimport SELECTED_OR_Card from '../../card_UI/selected/OR.jpg'\nimport SELECTED_NOT_Card from '../../card_UI/selected/NOT.jpg'\nimport SELECTED_LP_Card from '../../card_UI/selected/LP.jpg'\nimport SELECTED_RP_Card from '../../card_UI/selected/RP.jpg'\nimport SELECTED_IMPLY_Card from '../../card_UI/selected/IMPLY.jpg'\nimport SELECTED_IFF_Card from '../../card_UI/selected/IFF.jpg'\n\ninterface CardProps {\n  cardSymbol: Types.Card\n  scale: number\n  tag: number | undefined\n  isSelected: boolean\n  onClick: () => void\n}\n\nexport const CardComponent = ({\n  cardSymbol,\n  scale,\n  tag,\n  isSelected = false,\n  onClick = (() => {})\n}: CardProps): JSX.Element => {\n  let colour: string\n  switch (cardSymbol) {\n    case 'A' : { colour = isSelected ? SELECTED_A_Card : A_Card; break;}\n    case 'B' : { colour = isSelected ? SELECTED_B_Card : B_Card; break;}\n    case 'C' : { colour = isSelected ? SELECTED_C_Card : C_Card; break;}\n    case 'D' : { colour = isSelected ? SELECTED_D_Card : D_Card; break;}\n    case '&' : { colour = isSelected ? SELECTED_AND_Card : AND_Card; break;}\n    case '|' : { colour = isSelected ? SELECTED_OR_Card : OR_Card; break;}\n    case '~' : { colour = isSelected ? SELECTED_NOT_Card : NOT_Card; break;}\n    case '(' : { colour = isSelected ? SELECTED_LP_Card : LP_Card; break;}\n    case ')' : { colour = isSelected ? SELECTED_RP_Card : RP_Card; break;}\n    case '->': { colour = isSelected ? SELECTED_IMPLY_Card : IMPLY_Card; break;}\n    case '==': { colour = isSelected ? SELECTED_IFF_Card : IFF_Card; break;}\n  }\n  const width = 80 * scale\n  const height = 133 * scale\n  console.log(tag);\n  \n  return (\n      <Card className=\"Card\" style={{ \n      width: width + \"px\",\n      height: height + \"px\",\n      backgroundImage: \"url(\" + colour + \")\"\n    }} onClick={onClick}>\n      {tag ? <div className=\"CardTag\">{tag == Number.POSITIVE_INFINITY ? \"∞\" : tag}</div> : undefined}\n      123\n    </Card>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}