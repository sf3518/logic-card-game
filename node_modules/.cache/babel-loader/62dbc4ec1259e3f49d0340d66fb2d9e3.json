{"ast":null,"code":"import React,{useContext}from'react';import{allCards as AllCards}from'./editorUtils';import makeStyles from'@material-ui/core/styles/makeStyles';import GridList from'@material-ui/core/GridList';import GridListTile from'@material-ui/core/GridListTile';import{CardComponent}from'../game/Card';import{EditorContext}from'./LevelEditor';import DeleteIcon from'@material-ui/icons/Delete';import{Container,Tooltip}from'@material-ui/core';var useStyles=makeStyles(function(theme){return{root:{display:'flex',flexWrap:'wrap',justifyContent:'space-around',overflow:'hidden',backgroundColor:theme.palette.background.paper},gridList:{width:400,height:200}};});export var EditorAllCards=function EditorAllCards(_ref){var onSelect=_ref.onSelect,onDrop=_ref.onDrop;var classes=useStyles();var context=useContext(EditorContext);var onSelection=context.state.kind=='select';var selected=function selected(card){return context.state.kind=='select'&&context.state.select.kind=='all'&&context.state.select.card==card;};var renderAllCards=function renderAllCards(){return/*#__PURE__*/React.createElement(Tooltip,{title:\"Click any card to select it\",arrow:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(GridList,{cellHeight:140,className:classes.gridList,cols:4},AllCards.map(function(card){return/*#__PURE__*/React.createElement(GridListTile,{key:card,cols:1},/*#__PURE__*/React.createElement(CardComponent,{cardSymbol:card,scale:1,tag:undefined,isSelected:selected(card),onClick:function onClick(){return onSelect(card);}}));}))));};var renderDustBin=function renderDustBin(){return/*#__PURE__*/React.createElement(Tooltip,{title:\"Click me to delete the selected card\",arrow:true},/*#__PURE__*/React.createElement(Container,{className:classes.gridList,style:{backgroundColor:'#FA6363',color:'white',alignItems:'center'},onClick:onDrop},/*#__PURE__*/React.createElement(DeleteIcon,{style:{fontSize:100}})));};return onSelection?renderDustBin():renderAllCards();};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/editor/EditorAllCards.tsx"],"names":["React","useContext","allCards","AllCards","makeStyles","GridList","GridListTile","CardComponent","EditorContext","DeleteIcon","Container","Tooltip","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","EditorAllCards","onSelect","onDrop","classes","context","onSelection","state","kind","selected","card","select","renderAllCards","map","undefined","renderDustBin","color","alignItems","fontSize"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { Card } from '../../types'\n\nimport { allCards as AllCards} from './editorUtils'\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { CardComponent } from '../game/Card';\nimport { EditorContext } from './LevelEditor';\n\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { Container, Tooltip } from '@material-ui/core';\n\ninterface NewCardsProps {\n  onSelect: (c: Card) => void\n  onDrop: () => void\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 400,\n    height: 200,\n  },\n}));\n\n\nexport const EditorAllCards = ({\n  onSelect, \n  onDrop\n}: NewCardsProps) => {\n\n  const classes = useStyles()\n  const context = useContext(EditorContext)\n\n  const onSelection = context.state.kind == 'select'\n\n  const selected = (card: Card) => context.state.kind == 'select'\n    && context.state.select.kind == 'all'\n    && context.state.select.card == card\n\n  const renderAllCards = () => <Tooltip title=\"Click any card to select it\" arrow>\n    <div className={classes.root}>\n      <GridList cellHeight={140} className={classes.gridList} cols={4}>\n        {AllCards.map(card => \n          <GridListTile key={card} cols={1}>\n            <CardComponent \n              cardSymbol={card} \n              scale={1} \n              tag={undefined} \n              isSelected={selected(card)} \n              onClick={() => onSelect(card)}\n            />\n          </GridListTile>\n        )}\n      </GridList>\n    </div>\n  </Tooltip>\n\n  const renderDustBin = () => <Tooltip title=\"Click me to delete the selected card\" arrow >\n    <Container \n      className={classes.gridList} \n      style={{ backgroundColor: '#FA6363', color: 'white', alignItems: 'center'}} \n      onClick={onDrop}>\n      <DeleteIcon style={{ fontSize: 100 }}/>\n    </Container>\n  </Tooltip>\n\n  return onSelection ? renderDustBin() : renderAllCards() \n}"]},"metadata":{},"sourceType":"module"}