{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Goals.tsx\";\nimport React from 'react';\nimport { PremiseComponent } from './Premise';\nimport SUCCESSFUL_ICON from '../../card_UI/correct.jpg';\nimport UNSUCCESSFUL_ICON from '../../card_UI/incorrect.jpg';\nexport const GoalsComponent = ({\n  goals,\n  isSuccessful\n}) => {\n  const renderSuccessful = i => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '30px',\n        height: '30px',\n        backgroundImage: \"url(\" + (isSuccessful[i] ? SUCCESSFUL_ICON : UNSUCCESSFUL_ICON) + \")\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderGoal = i => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, renderSuccessful(i)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        verticalAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, showGoalKind(i + 1, goals[i]))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, showGoalInCards(goals[i])));\n  };\n\n  const showGoalInCards = goal => {\n    return /*#__PURE__*/React.createElement(PremiseComponent, {\n      scale: 0.5,\n      premiseIndex: -1,\n      isLocked: true,\n      cards: goal.expr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderGoals = () => {\n    const result = [];\n\n    for (let i = 0; i < goals.length; i++) {\n      result.push(renderGoal(i));\n    }\n\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, result);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }\n  }, renderGoals());\n};\n\nfunction showGoalKind(index, goal) {\n  const showKind = goal.kind == 'prove' ? \"To prove\" : goal.kind == 'disprove' ? \"To disprove\" : goal.kind == 'equivalent' ? \"To be equivalent to\" : \"Make undecidable\";\n  return index + \". \" + showKind + \": \";\n}","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/game/Goals.tsx"],"names":["React","PremiseComponent","SUCCESSFUL_ICON","UNSUCCESSFUL_ICON","GoalsComponent","goals","isSuccessful","renderSuccessful","i","width","height","backgroundImage","backgroundSize","backgroundRepeat","renderGoal","verticalAlign","marginLeft","marginRight","showGoalKind","showGoalInCards","goal","expr","renderGoals","result","length","push","index","showKind","kind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AAOA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC7BC,EAAAA,KAD6B;AAE7BC,EAAAA;AAF6B,CAAD,KAGZ;AAEhB,QAAMC,gBAAgB,GAAIC,CAAD,IAAe;AACtC,wBAAO;AAAK,MAAA,KAAK,EAAE;AACjBC,QAAAA,KAAK,EAAE,MADU;AAEjBC,QAAAA,MAAM,EAAE,MAFS;AAGjBC,QAAAA,eAAe,EAAE,UAAUL,YAAY,CAACE,CAAD,CAAZ,GAAkBN,eAAlB,GAAoCC,iBAA9C,IAAmE,GAHnE;AAIjBS,QAAAA,cAAc,EAAE,OAJC;AAKjBC,QAAAA,gBAAgB,EAAE;AALD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOD,GARD;;AAUA,QAAMC,UAAU,GAAIN,CAAD,IAAe;AAChC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,gBAAgB,CAACC,CAAD,CAArB,CADK,eAEL;AAAI,MAAA,KAAK,EAAE;AAACO,QAAAA,aAAa,EAAE;AAAhB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,WAAW,EAAE;AAAnC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEC,YAAY,CAACV,CAAC,GAAG,CAAL,EAAQH,KAAK,CAACG,CAAD,CAAb,CADd,CADF,CAFK,eAOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKW,eAAe,CAACd,KAAK,CAACG,CAAD,CAAN,CAApB,CAPK,CAAP;AASD,GAVD;;AAYA,QAAMW,eAAe,GAAIC,IAAD,IAA6B;AACnD,wBAAO,oBAAC,gBAAD;AACL,MAAA,KAAK,EAAE,GADF;AAEL,MAAA,YAAY,EAAE,CAAC,CAFV;AAGL,MAAA,QAAQ,EAAE,IAHL;AAIL,MAAA,KAAK,EAAEA,IAAI,CAACC,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAMD,GAPD;;AASA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,MAAqB,GAAG,EAA9B;;AACA,SAAI,IAAIf,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,KAAK,CAACmB,MAAzB,EAAiChB,CAAC,EAAlC,EAAsC;AACpCe,MAAAA,MAAM,CAACE,IAAP,CAAYX,UAAU,CAACN,CAAD,CAAtB;AACD;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQe,MAAR,CAAP;AACD,GAND;;AAQF,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHD,WAAW,EADR,CAAP;AAIC,CAhDM;;AAkDP,SAASJ,YAAT,CAAsBQ,KAAtB,EAAqCN,IAArC,EAAyD;AACvD,QAAMO,QAAQ,GAAGP,IAAI,CAACQ,IAAL,IAAa,OAAb,GAAuB,UAAvB,GACAR,IAAI,CAACQ,IAAL,IAAa,UAAb,GAA0B,aAA1B,GACAR,IAAI,CAACQ,IAAL,IAAa,YAAb,GAA4B,qBAA5B,GACA,kBAHjB;AAIA,SAAOF,KAAK,GAAG,IAAR,GAAeC,QAAf,GAA0B,IAAjC;AACD","sourcesContent":["import React from 'react'\nimport { Goal } from '../../types'\nimport { Card } from 'react-bootstrap'\nimport { PremiseComponent } from './Premise'\nimport SUCCESSFUL_ICON from '../../card_UI/correct.jpg'\nimport UNSUCCESSFUL_ICON from '../../card_UI/incorrect.jpg'\n\ninterface GoalsProps {\n  goals: Goal[],\n  isSuccessful: boolean[]\n}\n\nexport const GoalsComponent = ({\n  goals,\n  isSuccessful\n}: GoalsProps) => {\n\n  const renderSuccessful = (i: number) => {\n    return <div style={{ \n      width: '30px', \n      height: '30px', \n      backgroundImage: \"url(\" + (isSuccessful[i] ? SUCCESSFUL_ICON : UNSUCCESSFUL_ICON) + \")\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n    }}></div>\n  }\n\n  const renderGoal = (i: number) => {\n    return <tr>\n      <td>{renderSuccessful(i)}</td>\n      <td style={{verticalAlign: \"center\"}}>{\n        <h4 style={{ marginLeft: \"10px\", marginRight: \"10px\"}}>{\n          showGoalKind(i + 1, goals[i])\n        }</h4>\n      }</td>\n      <td>{showGoalInCards(goals[i])}</td>\n    </tr>\n  }\n\n  const showGoalInCards = (goal: Goal): JSX.Element => {\n    return <PremiseComponent \n      scale={0.5}\n      premiseIndex={-1}\n      isLocked={true}\n      cards={goal.expr}  \n    />\n  }\n\n  const renderGoals = () => {\n    const result: JSX.Element[] = []\n    for(let i = 0; i < goals.length; i++) {\n      result.push(renderGoal(i))\n    }\n    return <table>{result}</table>\n  }\n\nreturn <div>{\n    renderGoals()\n  }</div>\n\n}\n\nfunction showGoalKind(index: number, goal: Goal): string {\n  const showKind = goal.kind == 'prove' ? \"To prove\" \n                 : goal.kind == 'disprove' ? \"To disprove\" \n                 : goal.kind == 'equivalent' ? \"To be equivalent to\"\n                 : \"Make undecidable\"\n  return index + \". \" + showKind + \": \"\n}"]},"metadata":{},"sourceType":"module"}