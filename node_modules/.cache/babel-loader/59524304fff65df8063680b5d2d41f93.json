{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/editor/EditorPremise.tsx\";\nimport React, { useContext } from 'react';\nimport { CardComponent } from '../game/Card';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { EditorContext } from './LevelEditor';\nimport { EditorClickSlot } from './ClickSlot';\nimport { getExprFromJson } from '../../server/gameApp/game/goal';\nimport { Tooltip, IconButton } from '@material-ui/core';\nexport const EditorPremise = ({\n  category,\n  scale,\n  onLock,\n  onSelect,\n  onDrop\n}) => {\n  const context = useContext(EditorContext);\n  const kind = category.kind;\n  const index = category.index;\n  const isLocked = kind == 'premise' && context.lockedPremises.includes(index);\n  const cards = kind == 'premise' ? context.premises[index] : getExprFromJson(context.goals[index]);\n  const isSelected = context.state.kind == 'select';\n\n  const isPicked = i => context.state.kind == 'select' && (context.state.select.kind == 'premise' && kind == 'premise' && context.state.select.pid == index && context.state.select.ppos == i || context.state.select.kind == 'goal' && kind == 'goal' && context.state.select.gid == index && context.state.select.gpos == i);\n\n  const renderCard = i => {\n    return /*#__PURE__*/React.createElement(CardComponent, {\n      cardSymbol: cards[i],\n      scale: scale,\n      tag: undefined,\n      onClick: () => isPicked(i) ? context.setIdle() : onSelect(i),\n      isSelected: isPicked(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderDropSlot = (i, active = true) => {\n    return /*#__PURE__*/React.createElement(EditorClickSlot, {\n      scale: scale,\n      isActive: active,\n      onDrop: () => onDrop(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    });\n  };\n\n  const renderLock = () => {\n    return onLock ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        left: 40,\n        marginTop: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Click me to \" + (isLocked ? \"unlock\" : \"lock\") + \" this premise\",\n      arrow: true,\n      placement: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: onLock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, isLocked ? /*#__PURE__*/React.createElement(LockIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 24\n      }\n    }) : /*#__PURE__*/React.createElement(LockOpenIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 55\n      }\n    })))) : undefined;\n  };\n\n  const renderPremise = () => {\n    let result = [];\n\n    if (cards.length == 0 && !isSelected) {\n      result.push(renderDropSlot(0, false));\n    }\n\n    let offset = 0;\n\n    for (let i = 0; i < cards.length; i++) {\n      if (isSelected) {\n        result.push(renderDropSlot(i - offset));\n      }\n\n      result.push(renderCard(i));\n\n      if (isPicked(i)) {\n        offset = 1;\n      }\n    }\n\n    if (isSelected) {\n      result.push(renderDropSlot(cards.length - offset));\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: isSelected || cards.length == 0 ? \"\" : \"Click a card to select it\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      float: \"none\",\n      justifyContent: \"center\",\n      verticalAlign: \"center\",\n      marginTop: \"5px\",\n      marginBottom: \"5px\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      backgroundColor: isLocked ? '#CCC' : 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, renderPremise(), renderLock()));\n};","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/editor/EditorPremise.tsx"],"names":["React","useContext","CardComponent","LockIcon","LockOpenIcon","EditorContext","EditorClickSlot","getExprFromJson","Tooltip","IconButton","EditorPremise","category","scale","onLock","onSelect","onDrop","context","kind","index","isLocked","lockedPremises","includes","cards","premises","goals","isSelected","state","isPicked","i","select","pid","ppos","gid","gpos","renderCard","undefined","setIdle","renderDropSlot","active","renderLock","position","left","marginTop","renderPremise","result","length","push","offset","display","flexWrap","float","justifyContent","verticalAlign","marginBottom","marginLeft","marginRight","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Card, Premise } from '../../types'\nimport { CardComponent } from '../game/Card'\nimport { useDrop } from 'react-dnd'\nimport { PremiseClickSlot } from '../game/PremiseClickSlot'\n\nimport LockIcon from '@material-ui/icons/Lock'\nimport LockOpenIcon from '@material-ui/icons/LockOpen'\nimport { EditorContext } from './LevelEditor'\nimport { EditorClickSlot } from './ClickSlot'\nimport { getExprFromJson } from '../../server/gameApp/game/goal'\nimport { Tooltip, IconButton } from '@material-ui/core'\n\ntype PremiseCategory = { kind: 'premise', index: number }\n                     | { kind: 'goal', index: number }\n\ninterface PremiseProps {\n  category: PremiseCategory\n  scale: number\n  onLock: (() => void) | undefined\n  onSelect: (pos: number) => void\n  onDrop: (pos: number) => void\n}\n\nexport const EditorPremise = ({\n  category,\n  scale,\n  onLock,\n  onSelect,\n  onDrop,\n}: PremiseProps) => {\n\n  const context = useContext(EditorContext)\n  const kind = category.kind\n  const index = category.index\n  const isLocked = kind == 'premise' && context.lockedPremises.includes(index)\n  const cards = kind == 'premise' ? context.premises[index] : getExprFromJson(context.goals[index])\n  const isSelected = context.state.kind == 'select'\n\n  const isPicked = (i: number) => \n    context.state.kind == 'select' && \n    ((context.state.select.kind == 'premise'\n      && kind == 'premise'\n      && context.state.select.pid == index\n      && context.state.select.ppos == i)\n    || (context.state.select.kind == 'goal'\n      && kind == 'goal'\n      && context.state.select.gid == index\n      && context.state.select.gpos == i)\n    )\n\n\n  const renderCard = (i: number): JSX.Element => {\n    return <CardComponent \n      cardSymbol={cards[i]} \n      scale={scale} \n      tag={undefined} \n      onClick={() => isPicked(i) ? context.setIdle() : onSelect(i) } \n      isSelected={isPicked(i)} \n    />\n  }\n\n  const renderDropSlot = (i: number, active: boolean = true): JSX.Element => {\n    return (\n        <EditorClickSlot \n          scale={scale}\n          isActive={active}\n          onDrop={() => onDrop(i)}\n        />\n    )\n  }\n\n  const renderLock = () => {\n    return onLock ? <div style={{\n      position: 'absolute',\n      left: 40,\n      marginTop: '40px',\n    }}>\n      <Tooltip title={\"Click me to \" + (isLocked ? \"unlock\" : \"lock\") + \" this premise\"} arrow placement=\"right\">\n        <IconButton onClick={onLock}>\n          { isLocked ? <LockIcon fontSize=\"large\"/> : <LockOpenIcon fontSize=\"large\"/>}\n        </IconButton>\n      </Tooltip>\n    </div> : undefined\n  }\n\n  const renderPremise = (): JSX.Element[] => {\n    let result: JSX.Element[] = []\n    if (cards.length == 0 && !isSelected) {\n      result.push(renderDropSlot(0, false))\n    }\n    let offset = 0\n    for (let i = 0; i < cards.length; i++) {\n      if (isSelected) {\n        result.push(renderDropSlot(i - offset))\n      }\n      result.push(renderCard(i))\n      if (isPicked(i)) {\n        offset = 1\n      }\n    }\n    if (isSelected) {\n      result.push(renderDropSlot(cards.length - offset))\n    }\n    return result\n  }\n\n  return (\n    <Tooltip title={isSelected || cards.length == 0 ? \"\" : \"Click a card to select it\"} arrow>\n      <div \n        className=\"board-row\" style={\n        {\n          display: 'flex',\n          flexWrap: 'wrap', \n          float: \"none\",\n          justifyContent: \"center\",\n          verticalAlign: \"center\",\n          marginTop: \"5px\",\n          marginBottom: \"5px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          backgroundColor: isLocked ? '#CCC' : 'white'\n        }\n      }> \n          {renderPremise()}\n        {renderLock()}\n      </div>\n    </Tooltip>\n\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}