{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/IC/Computing/DRP/drp48/src/components/editor/EditorGoals.tsx\";\nimport React, { useState, useContext } from 'react';\nimport { Table } from 'react-bootstrap';\nimport SUCCESSFUL_ICON from '../../src_img/card_UI/correct.jpg';\nimport UNSUCCESSFUL_ICON from '../../src_img/card_UI/incorrect.jpg';\nimport { genTruthTableInStringForBTrees } from '../../server/gameApp/logicResolver/plainResolver';\nimport { makeStyles, createStyles, Button as MButton, Popover, Typography, List, ListItem, IconButton, Divider } from '@material-ui/core';\nimport { EditorContext } from './LevelEditor';\nimport { EditorPremise } from './EditorPremise';\nimport { getExprFromJson } from '../../server/gameApp/game/goal';\nimport EditIcon from '@material-ui/icons/Edit';\nconst useStyles = makeStyles(theme => createStyles({\n  typography: {\n    padding: theme.spacing(2)\n  }\n}));\nexport const EditorGoal = ({\n  isSuccessful,\n  onSelect,\n  onDrop,\n  onChange\n}) => {\n  const context = useContext(EditorContext);\n  const goals = context.goals;\n  const [showTable, setShowTable] = useState(goals.map(_ => false));\n  const classes = useStyles();\n  const [anchorEls, setAnchorEl] = React.useState(goals.map(_ => null));\n\n  const handleClick = i => event => {\n    const newAnchorEls = anchorEls.slice();\n    newAnchorEls.splice(i, 1, event.currentTarget);\n    setAnchorEl(newAnchorEls);\n  };\n\n  const handleClose = i => () => {\n    const newAnchorEls = anchorEls.slice();\n    newAnchorEls.splice(i, 1, null);\n    setAnchorEl(newAnchorEls);\n  };\n\n  const ids = anchorEls.map((a, i) => a ? 'popover' + i : undefined);\n\n  const setShowOneTable = (i, isShow) => {\n    setShowTable(showTable.map((old, j) => i == j ? isShow : old));\n  };\n\n  const renderSuccessful = i => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '30px',\n        height: '30px',\n        backgroundImage: \"url(\" + (isSuccessful[i] ? SUCCESSFUL_ICON : UNSUCCESSFUL_ICON) + \")\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderChangeButton = i => /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => onChange(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 45\n    }\n  }));\n\n  const collectVars = i => {\n    const set = new Set();\n    getExprFromJson(goals[i]).filter(c => [\"A\", \"B\", \"C\", \"D\"].includes(c)).forEach(c => set.add(c));\n    return Array.from(set);\n  };\n\n  const renderShowTableButton = i => {\n    if (undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MButton, {\n      \"aria-describedby\": ids[i],\n      onClick: handleClick(i),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Hint\"), /*#__PURE__*/React.createElement(Popover, {\n      id: ids[i],\n      open: Boolean(ids[i]),\n      anchorEl: anchorEls[i],\n      onClose: handleClose(i),\n      anchorOrigin: {\n        vertical: 'center',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'center',\n        horizontal: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.typography,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, renderTruthTable(i))));\n  };\n\n  const renderTruthTable = i => {\n    const vars = collectVars(i);\n    const truthTable = genTruthTableInStringForBTrees(vars, [context.goalTrees[i]]);\n    return /*#__PURE__*/React.createElement(Table, {\n      onClick: () => setShowOneTable(i, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, truthTable.headers.map(it => /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"0.25rem\",\n        paddingBottom: \"0.25rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    }, it))), truthTable.body.map(row => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, row.map(it => /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"1px\",\n        paddingBottom: \"1px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 26\n      }\n    }, it)))));\n  };\n\n  const showGoalInCards = i => {\n    const goal = context.goals[i];\n\n    switch (goal.kind) {\n      case 'tautology':\n      case 'paradox':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 16\n          }\n        });\n    }\n\n    return /*#__PURE__*/React.createElement(EditorPremise, {\n      category: {\n        kind: 'goal',\n        index: i\n      },\n      scale: 0.5,\n      onLock: undefined,\n      onSelect: pos => onSelect(i, pos),\n      onDrop: pos => onDrop(i, pos),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderGoal = i => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, renderSuccessful(i)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        verticalAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, showGoalKind(i + 1, goals[i]))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, showGoalInCards(i)), /*#__PURE__*/React.createElement(\"td\", {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, renderShowTableButton(i)), /*#__PURE__*/React.createElement(\"td\", {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, renderChangeButton(i)), i != 0 ? /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 18\n      }\n    }) : undefined);\n  };\n\n  const renderGoals = () => {\n    const result = [];\n\n    for (let i = 0; i < goals.length; i++) {\n      result.push(renderGoal(i));\n    }\n\n    return /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 12\n      }\n    }, result);\n  };\n\n  return renderGoals();\n};\n\nfunction showGoalKind(index, goal) {\n  let showKind;\n\n  switch (goal.kind) {\n    case 'prove':\n      showKind = 'To prove:';\n      break;\n\n    case 'disprove':\n      showKind = 'To disprove:';\n      break;\n\n    case 'unknown':\n      showKind = 'Make undecidable:';\n      break;\n\n    case 'equivalent':\n      showKind = 'To be equivalent to:';\n      break;\n\n    case 'tautology':\n      showKind = 'Make a tautology';\n      break;\n\n    case 'paradox':\n      showKind = 'Make a paradox';\n      break;\n  }\n\n  return index + \". \" + showKind + \" \";\n}","map":{"version":3,"sources":["/Users/johnny/IC/Computing/DRP/drp48/src/components/editor/EditorGoals.tsx"],"names":["React","useState","useContext","Table","SUCCESSFUL_ICON","UNSUCCESSFUL_ICON","genTruthTableInStringForBTrees","makeStyles","createStyles","Button","MButton","Popover","Typography","List","ListItem","IconButton","Divider","EditorContext","EditorPremise","getExprFromJson","EditIcon","useStyles","theme","typography","padding","spacing","EditorGoal","isSuccessful","onSelect","onDrop","onChange","context","goals","showTable","setShowTable","map","_","classes","anchorEls","setAnchorEl","handleClick","i","event","newAnchorEls","slice","splice","currentTarget","handleClose","ids","a","undefined","setShowOneTable","isShow","old","j","renderSuccessful","width","height","backgroundImage","backgroundSize","backgroundRepeat","renderChangeButton","collectVars","set","Set","filter","c","includes","forEach","add","Array","from","renderShowTableButton","Boolean","vertical","horizontal","renderTruthTable","vars","truthTable","goalTrees","headers","it","paddingTop","paddingBottom","body","row","showGoalInCards","goal","kind","index","pos","renderGoal","verticalAlign","marginLeft","marginRight","showGoalKind","renderGoals","result","length","push","showKind"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Goal } from '../../types'\nimport { Card, Table, Button } from 'react-bootstrap'\nimport { PremiseComponent } from '../game/Premise'\nimport * as Types from '../../types'\nimport SUCCESSFUL_ICON from '../../src_img/card_UI/correct.jpg'\nimport UNSUCCESSFUL_ICON from '../../src_img/card_UI/incorrect.jpg'\nimport { genTruthTableInStringForBTrees } from '../../server/gameApp/logicResolver/plainResolver'\nimport { makeStyles, Theme, createStyles, Button as MButton, Popover, Typography, List, ListItem, IconButton, Divider } from '@material-ui/core'\nimport { EditorContext } from './LevelEditor'\nimport { BoolTree } from '../../server/gameApp/logicResolver/bools'\nimport { parsePremiseSafe } from '../../server/gameApp/game/premise'\nimport { EditorPremise } from './EditorPremise'\nimport { getExprFromJson } from '../../server/gameApp/game/goal'\nimport EditIcon from '@material-ui/icons/Edit'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\ninterface GoalsProps {\n  isSuccessful: boolean[]\n  onSelect: (gid: number, gpos: number) => void\n  onDrop: (gid: number, gpos: number) => void\n  onChange: (gid: number) => void\n\n}\n\nexport const EditorGoal = ({\n  isSuccessful,\n  onSelect,\n  onDrop,\n  onChange,\n}: GoalsProps) => {\n\n  const context = useContext(EditorContext)\n  const goals = context.goals\n\n  const [showTable, setShowTable] = useState(goals.map(_ => false))\n\n  const classes = useStyles()\n  const [anchorEls, setAnchorEl] = React.useState<(HTMLButtonElement | null)[]>(goals.map(_ => null));\n  const handleClick = (i: number) => (event: React.MouseEvent<HTMLButtonElement>) => {\n    const newAnchorEls = anchorEls.slice()\n    newAnchorEls.splice(i, 1, event.currentTarget) \n    setAnchorEl(newAnchorEls);\n  }\n  const handleClose = (i: number) => () => {\n    const newAnchorEls = anchorEls.slice()\n    newAnchorEls.splice(i, 1, null) \n    setAnchorEl(newAnchorEls);\n  }\n\n  const ids = anchorEls.map((a, i) => a ? 'popover' + i : undefined)\n\n  const setShowOneTable = (i: number, isShow: boolean) => {\n    setShowTable(showTable.map((old, j) => i == j ? isShow : old))\n  }\n\n  const renderSuccessful = (i: number) => {\n    return <div style={{ \n      width: '30px', \n      height: '30px', \n      backgroundImage: \"url(\" + (isSuccessful[i] ? SUCCESSFUL_ICON : UNSUCCESSFUL_ICON) + \")\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n    }}></div>\n  }\n\n  const renderChangeButton = (i: number) => \n    <IconButton onClick={() => onChange(i)}><EditIcon fontSize=\"large\"/></IconButton>\n\n  const collectVars = (i: number): Types.Card[] => {\n    const set = new Set<Types.Card>()\n    getExprFromJson(goals[i]).filter(c => [\"A\", \"B\", \"C\", \"D\"].includes(c)).forEach(c => set.add(c))\n    return Array.from(set)\n  }\n\n  const renderShowTableButton = (i: number) => {\n    if (undefined) {\n      return <div></div>\n    }\n    return (\n      <div>\n        <MButton aria-describedby={ids[i]} onClick={handleClick(i)} color=\"primary\">Hint</MButton>\n        <Popover \n          id={ids[i]} \n          open={Boolean(ids[i])} \n          anchorEl={anchorEls[i]}\n          onClose={handleClose(i)}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left',\n          }}\n        >\n          <Typography className={classes.typography}>{renderTruthTable(i)}</Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  const renderTruthTable = (i: number) => {\n    const vars = collectVars(i)\n    const truthTable = genTruthTableInStringForBTrees(vars, [context.goalTrees[i]]) \n    return (\n      <Table onClick={() => setShowOneTable(i, false)}>\n        <thead>\n          {truthTable.headers.map(it => <td style={{ paddingTop: \"0.25rem\", paddingBottom: \"0.25rem\", }}>{it}</td>)}\n        </thead>\n        {truthTable.body.map(row => <tr>\n          {row.map(it => <td style={{ paddingTop: \"1px\", paddingBottom: \"1px\", }}>{it}</td>)}\n        </tr>)}\n      </Table>\n    )\n  }\n\n  const showGoalInCards = (i: number): JSX.Element => {\n    const goal = context.goals[i]\n    switch(goal.kind) {\n      case 'tautology':\n      case 'paradox':\n        return <div></div>\n    }\n    return <EditorPremise\n      category={{ kind: 'goal', index: i }}\n      scale={0.5}\n      onLock={undefined}\n      onSelect={pos => onSelect(i, pos)}\n      onDrop={pos => onDrop(i, pos)}\n    />\n  }\n\n  const renderGoal = (i: number) => {\n    return <ListItem>\n      <td>{renderSuccessful(i)}</td>\n      <td style={{verticalAlign: \"center\"}}>{\n        <h4 style={{ marginLeft: \"10px\", marginRight: \"10px\"}}>{\n          showGoalKind(i + 1, goals[i])\n        }</h4>\n      }</td>\n      <td>{showGoalInCards(i)}</td>\n      <td align='right'>{renderShowTableButton(i)}</td>\n      <td align='right'>{renderChangeButton(i)}</td>\n      { i != 0 ? <Divider/> : undefined }\n    </ListItem>\n  }\n\n  const renderGoals = () => {\n    const result: JSX.Element[] = []\n    for(let i = 0; i < goals.length; i++) {\n      result.push(renderGoal(i))\n    }\n    return <List>{result}</List>\n  }\n\n  return renderGoals()\n\n}\n\nfunction showGoalKind(index: number, goal: Types.GoalInJSON): string {\n  let showKind: string\n  switch(goal.kind) {\n    case 'prove': showKind = 'To prove:'; break\n    case 'disprove': showKind = 'To disprove:'; break\n    case 'unknown': showKind = 'Make undecidable:'; break\n    case 'equivalent': showKind = 'To be equivalent to:'; break\n    case 'tautology': showKind = 'Make a tautology'; break\n    case 'paradox': showKind = 'Make a paradox'; break\n  }\n  return index + \". \" + showKind + \" \"\n}"]},"metadata":{},"sourceType":"module"}