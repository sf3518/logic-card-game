{"ast":null,"code":"import _slicedToArray from\"/Users/johnny/IC/Computing/year2/DRP/drp48/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{State}from\"./state\";// Premise-related operations\nexport var deleteCardAt=function deleteCardAt(index){return function(premise){var copy=premise.slice();var _copy$splice=copy.splice(index,1),_copy$splice2=_slicedToArray(_copy$splice,1),card=_copy$splice2[0];return State.of(card,copy);};};export var getCardAt=function getCardAt(index){return function(premise){var card=premise[index];return State.of(card,premise);};};export var insertCardTo=function insertCardTo(card,index){return function(premise){var copy=premise.slice();copy.splice(index,0,card);return State.put(copy);};};export var swapCardsAt=function swapCardsAt(index1,index2){return function(premise){var copy=premise.slice();var _ref=[copy[index2],copy[index1]];copy[index1]=_ref[0];copy[index2]=_ref[1];return State.put(copy);};};export var onIndex=function onIndex(index,f){return function(premises){var ap=f(premises[index]);return State.of(ap.get,premises.map(function(p,i){return i==index?ap.state:p;}));};};export var onGoalJson=function onGoalJson(f){return function(goal){switch(goal.kind){case'paradox':case'tautology':throw new Error(\"paradox or tautology\");default:var fp=f(goal.expr);return State.of(fp.get,{kind:goal.kind,expr:fp.state});}};};// Handcard related operations\nexport var addHandCard=function addHandCard(card){var count=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Number.POSITIVE_INFINITY;return function(hand){var newHand=[];var added=false;hand.forEach(function(_ref2,i){var _ref3=_slicedToArray(_ref2,2),c0=_ref3[0],count0=_ref3[1];if(!added&&c0==card){count0+=count;added=true;}newHand.push([c0,count0]);});if(!added){newHand.push([card,count]);}return State.put(newHand);};};export var changeCountHandCard=function changeCountHandCard(index){var count=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Number.POSITIVE_INFINITY;return function(hand){if(count==0){return deleteHandCard(index)(hand).then(function(s){return State.put(s);});}var copy=hand.slice();copy[index][1]=count;return State.put(copy);};};export var getAHandCard=function getAHandCard(index){return function(hand){var copy=hand.slice();copy[index][1]--;if(copy[index][1]==0){return deleteHandCard(index)(hand).getBy(function(_ref4){var _ref5=_slicedToArray(_ref4,2),c=_ref5[0],_=_ref5[1];return c;});}return State.of(copy[index][0],copy);};};export var deleteHandCard=function deleteHandCard(index){return function(hand){var copy=hand.slice();var _copy$splice3=copy.splice(index,1),_copy$splice4=_slicedToArray(_copy$splice3,1),card=_copy$splice4[0];return State.of(card,copy);};};// misc utils\nexport var moveFromTo=function moveFromTo(source,getFromS,dest,putToD){var _getFromS=getFromS(source),get=_getFromS.get,state=_getFromS.state;var d=putToD(get)(dest).state;return[state,d];};export var moveWithin=function moveWithin(source,getFrom,putTo){var _getFrom=getFrom(source),get=_getFrom.get,state=_getFrom.state;return putTo(get)(state).state;};export var allCards=['A','B','C','D','&','|','->','==','~','(',')'];","map":{"version":3,"sources":["/Users/johnny/IC/Computing/year2/DRP/drp48/src/components/editor/editorUtils.ts"],"names":["State","deleteCardAt","index","premise","copy","slice","splice","card","of","getCardAt","insertCardTo","put","swapCardsAt","index1","index2","onIndex","f","premises","ap","get","map","p","i","state","onGoalJson","goal","kind","Error","fp","expr","addHandCard","count","Number","POSITIVE_INFINITY","hand","newHand","added","forEach","c0","count0","push","changeCountHandCard","deleteHandCard","then","s","getAHandCard","getBy","c","_","moveFromTo","source","getFromS","dest","putToD","d","moveWithin","getFrom","putTo","allCards"],"mappings":"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","sourcesContent":["import { Premise, Card, GoalInJSON } from \"../../types\";\nimport { State } from \"./state\";\n\n// Premise-related operations\n\nexport const deleteCardAt = (index: number) => (premise: Premise) : State<Card, Premise> => {\n  const copy = premise.slice()\n  const [card] = copy.splice(index, 1)\n  return State.of(card, copy)\n}\n\nexport const getCardAt = (index: number) => (premise: Premise) : State<Card, Premise> => {\n  const card = premise[index]\n  return State.of(card, premise)\n}\n\nexport const insertCardTo = (card: Card, index: number) => (premise: Premise): State<void, Premise> => {\n  const copy = premise.slice()\n  copy.splice(index, 0, card)\n  return State.put(copy)\n}\n\nexport const swapCardsAt = (index1: number, index2: number) => (premise: Premise): State<void, Premise> => {\n  const copy = premise.slice();\n  [copy[index1], copy[index2]] = [copy[index2], copy[index1]]\n  return State.put(copy)\n}\n\nexport const onIndex = <A, S>(index: number, f: (s: S) => State<A, S>) => (premises: S[]): State<A, S[]> => {\n  const ap = f(premises[index])\n  return State.of(ap.get, premises.map((p, i) => i == index ? ap.state : p))\n}\n\nexport const onGoalJson = <A>(f: (p: Card[]) => State<A, Card[]>) => (goal: GoalInJSON): State<A, GoalInJSON> => {\n  switch (goal.kind) {\n    case 'paradox':\n    case 'tautology': \n      throw new Error(\"paradox or tautology\")\n    default:\n      const fp = f(goal.expr)\n      return State.of(fp.get, { kind: goal.kind, expr: fp.state })\n  }\n}\n\n// Handcard related operations\n\nexport const addHandCard = (card: Card, count: number = Number.POSITIVE_INFINITY) => (hand: [Card, number][])\n    : State<void, [Card, number][]> => {\n  const newHand: [Card, number][] = []\n  let added = false\n  hand.forEach(([c0, count0], i) => {\n    if (!added && c0 == card) {\n      count0 += count\n      added = true\n    }\n    newHand.push([c0, count0])\n  })\n  if (!added) {\n    newHand.push([card, count])\n  }\n  return State.put(newHand)\n}\n\nexport const changeCountHandCard = (index: number, count: number = Number.POSITIVE_INFINITY) => (hand: [Card, number][])\n    : State<void, [Card, number][]> => {\n  if (count == 0) {\n    return deleteHandCard(index)(hand).then(s => State.put(s))\n  }\n  const copy = hand.slice()\n  copy[index][1] = count\n  return State.put(copy)\n}\n\nexport const getAHandCard = (index: number) => (hand: [Card, number][]): State<Card, [Card, number][]> => {\n  const copy = hand.slice()\n  copy[index][1]--\n  if (copy[index][1] == 0) {\n    return deleteHandCard(index)(hand).getBy(([c, _]) => c)\n  }\n  return State.of(copy[index][0], copy)\n}\n\nexport const deleteHandCard = (index: number) => (hand: [Card, number][])\n    : State<[Card, number], [Card, number][]> => {\n  const copy = hand.slice()\n  const [card] = copy.splice(index, 1)\n  return State.of(card, copy)\n}\n\n\n// misc utils\n\nexport const moveFromTo = <C, S, D, _>(source: S, getFromS: (s: S) => State<C, S>, dest: D, putToD: (c: C) => (d: D) => State<_, D>)\n  : [S, D] => {\n    const {get, state} = getFromS(source)\n    const d = putToD(get)(dest).state\n    return [state, d]\n}\n\nexport const moveWithin = <C, S, _>(source: S, getFrom: (s: S) => State<C, S>, putTo: (c: C) => (d: S) => State<_, S>): S => {\n  const {get, state} = getFrom(source)\n  return putTo(get)(state).state\n}\n\nexport const allCards: Card[] = ['A' , 'B' , 'C' , 'D' , '&' , '|' , '->' , '==' , '~' , '(' , ')' ]"]},"metadata":{},"sourceType":"module"}